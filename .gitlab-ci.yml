---
stages:
  - cache-update
  - test
  - build

variables:
  GOPATH: ${CI_PROJECT_DIR}/.gocache
#  CI_DEBUG_TRACE: "true"

services:
  - docker:dind

cache-update:
  image: golang:1.12
  stage: cache-update
  script:
    # Change git config so we can import go packages from GitLab
    - git config --global --add url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "git@gitlab.com:"
    - git config --global --add url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "https://gitlab.com/"
    # Set GOPATH
    - mkdir -p ${GOPATH}
    - export PATH="${PATH}:${GOPATH}/bin:${GOROOT}/bin"
    - go mod download -json
  cache:
    policy: push
    paths:
      - ${GOPATH}
  only:
    - master

test:
  image: docker:latest
  stage: test
  coverage: /^total:.*\s(\d+.\d+)%/
  script:
    - apk add --update bash openssh git make go grep curl jq
    - apk add --update musl-dev python2-dev libffi-dev openssl-dev
    - apk add --no-cache py-pip
    - pip install docker-compose
    - export GITLAB_USER=gitlab-ci-token
    - export GITLAB_TOKEN=$CI_JOB_TOKEN
    - cd e2e/hashicorp
    - docker-compose down || echo "Docker missing skipping"
    - docker-compose up --build --force-recreate -d
    - docker exec hashicorp_key-store_1 bash -c "go mod download && cd e2e/hashicorp/scripts && bash run-test.sh"
    - exit $?
  except:
      - tags

test-lint:
  image: golang:1.12
  stage: test
  script:
    # Change git config so we can import go packages from GitLab
    - git config --global --add url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "git@gitlab.com:"
    - git config --global --add url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "https://gitlab.com/"
    # Set GOPATH
    - mkdir -p ${GOPATH}
    - export PATH="${PATH}:${GOPATH}/bin:${GOROOT}/bin"
    - make tools
    - make lint
  cache:
    policy: pull
    paths:
      - ${GOPATH}
  except:
      - tags
