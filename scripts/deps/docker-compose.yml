version: '3.7'

x-container-common: &container-common
  restart: ${CONTAINER_RESTART-on-failure}
  networks:
    - orchestrate
    - quorum-tessera

x-postgres-common: &postgres-common
  environment:
    POSTGRES_PASSWORD: postgres

services:
  zookeeper:
    <<: *container-common
    image: confluentinc/cp-zookeeper:5.4.3
    ports:
      - ${ZOOKEEPER_EXTERNAL_PORT-2181}:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT-32181}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME-2000}

  kafka:
    <<: *container-common
    image: confluentinc/cp-kafka:5.4.3
    depends_on:
      - zookeeper
    ports:
      - ${KAFKA_EXTERNAL_PORT-9092}:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_CLIENT_PORT-32181}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://${KAFKA_EXTERNAL_HOSTNAME-localhost}:${KAFKA_EXTERNAL_PORT-9092}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s

  redis:
    <<: *container-common
    image: redis:6.0-alpine
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    volumes:
      - ./redis/config/redis.conf:/usr/local/etc/redis/redis.conf

  #  redis:
  #    <<: *container-common
  #    build: ./redis
  #    user: root
  #    ports:
  #      - 6379:6379
  #      - 6378:6378
  #    volumes:
  #      - ./redis/config/stunnel.conf:/etc/stunnel/stunnel.conf
  #      - ./redis/config/redis-auth.conf:/etc/redis/redis.conf
  #      - ./redis/init.sh:/init.sh
  #    command: sh /init.sh

  postgres-unit:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr", "-c", "log_connections=1", "-c", "log_disconnections=1"]
    ports:
      - 5432:5432
    volumes:
      - db-data-postgres-unit:/var/lib/postgresql/data

  postgres-chain-registry:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    volumes:
      - db-data-chain-registry:/var/lib/postgresql/data
    ports:
      - 5432

  postgres-contract-registry:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    volumes:
      - db-data-contract-registry:/var/lib/postgresql/data
    ports:
      - 5432

  postgres-transaction-scheduler:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    volumes:
      - db-data-transaction-scheduler:/var/lib/postgresql/data
    ports:
      - 5432

  postgres-identity-manager:
    <<: *container-common
    <<: *postgres-common
    image: postgres:10.12-alpine
    volumes:
      - db-data-identity-manager:/var/lib/postgresql/data
    ports:
      - 5432

  vault:
    <<: *container-common
    image: library/vault:1.6.0
    tty: true
    cap_add:
      - IPC_LOCK
    volumes:
      - ./hashicorp/config/config.hcl:/vault/config.hcl:ro
      - ./hashicorp/plugins/orchestrate-hashicorp-vault-plugin:/vault/plugins/orchestrate
    entrypoint: vault server -config=/vault/config.hcl
    ports:
      - 8200:8200

  vault-init:
    <<: *container-common
    build: ./hashicorp
    environment:
      VAULT_ADDR: ${VAULT_ADDR-http://vault:8200}
    restart: "no"
    depends_on:
      - vault
    volumes:
      - vault-token:/vault/token
      - ./hashicorp/init.sh:/init.sh
      - ./hashicorp/plugins/orchestrate-hashicorp-vault-plugin:/vault/plugins/orchestrate
    command: sh /init.sh

  vault-import-secrets:
    <<: *container-common
    build: ./hashicorp
    environment:
      VAULT_ADDR: ${VAULT_ADDR-http://vault:8200}
    restart: "no"
    depends_on:
      - vault
      - vault-init
    volumes:
      - vault-token:/vault/token:ro
      - ./hashicorp/kv-v2/secrets_to_engine.sh:/import.sh
    command: bash -c "/import.sh"

  jaeger:
    <<: *container-common
    image: jaegertracing/all-in-one:1.8
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411

volumes:
  db-data-postgres-unit:
    driver: local
  db-data-chain-registry:
    driver: local
  db-data-contract-registry:
    driver: local
  db-data-transaction-scheduler:
    driver: local
  db-data-identity-manager:
    driver: local
  vault-token:
    driver: local

networks:
  orchestrate:
    driver: bridge
  quorum-tessera:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.239.0/24
