// Code generated by MockGen. DO NOT EDIT.
// Source: data-agents.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "gitlab.com/ConsenSys/client/fr/core-stack/orchestrate.git/services/transaction-scheduler/store/models"
	reflect "reflect"
)

// MockTransactionRequestAgent is a mock of TransactionRequestAgent interface.
type MockTransactionRequestAgent struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionRequestAgentMockRecorder
}

// MockTransactionRequestAgentMockRecorder is the mock recorder for MockTransactionRequestAgent.
type MockTransactionRequestAgentMockRecorder struct {
	mock *MockTransactionRequestAgent
}

// NewMockTransactionRequestAgent creates a new mock instance.
func NewMockTransactionRequestAgent(ctrl *gomock.Controller) *MockTransactionRequestAgent {
	mock := &MockTransactionRequestAgent{ctrl: ctrl}
	mock.recorder = &MockTransactionRequestAgentMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionRequestAgent) EXPECT() *MockTransactionRequestAgentMockRecorder {
	return m.recorder
}

// Insert mocks base method.
func (m *MockTransactionRequestAgent) Insert(ctx context.Context, txRequest *models.TransactionRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", ctx, txRequest)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockTransactionRequestAgentMockRecorder) Insert(ctx, txRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockTransactionRequestAgent)(nil).Insert), ctx, txRequest)
}
