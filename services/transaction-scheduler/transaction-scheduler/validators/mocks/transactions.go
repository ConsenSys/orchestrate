// Code generated by MockGen. DO NOT EDIT.
// Source: transactions.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	types "gitlab.com/ConsenSys/client/fr/core-stack/orchestrate.git/services/transaction-scheduler/transaction-scheduler/types"
	reflect "reflect"
)

// MockTransactionValidator is a mock of TransactionValidator interface.
type MockTransactionValidator struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionValidatorMockRecorder
}

// MockTransactionValidatorMockRecorder is the mock recorder for MockTransactionValidator.
type MockTransactionValidatorMockRecorder struct {
	mock *MockTransactionValidator
}

// NewMockTransactionValidator creates a new mock instance.
func NewMockTransactionValidator(ctrl *gomock.Controller) *MockTransactionValidator {
	mock := &MockTransactionValidator{ctrl: ctrl}
	mock.recorder = &MockTransactionValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionValidator) EXPECT() *MockTransactionValidatorMockRecorder {
	return m.recorder
}

// ValidateTx mocks base method.
func (m *MockTransactionValidator) ValidateTx(ctx context.Context, txRequest *types.TransactionRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateTx", ctx, txRequest)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateTx indicates an expected call of ValidateTx.
func (mr *MockTransactionValidatorMockRecorder) ValidateTx(ctx, txRequest interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateTx", reflect.TypeOf((*MockTransactionValidator)(nil).ValidateTx), ctx, txRequest)
}
