syntax = "proto3";

import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "pkg/types/abi/abi.proto";
import "pkg/types/common/account_instance.proto";


option go_package = "gitlab.com/ConsenSys/client/fr/core-stack/orchestrate.git/services/contract-registry/proto";

package contractregistry;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Contract-Registry"
        version: "1.0"
        contact: {
            name: "âœ‰ PegaSys Orchestrate"
            email: "support@pegasys.tech"
        }
    }
    external_docs: {
        url: "https://docs.orchestrate.pegasys.tech/en/latest/"
        description: "ðŸ“’ Documentation of PegaSys Orchestrate"
    }
    security_definitions: {
        security: {
            key: "JWTAuth";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "Authorization";
            }
        }
        security: {
            key: "ApiKeyAuth";
            value: {
                type: TYPE_API_KEY;
                in: IN_HEADER;
                name: "X-API-Key";
            }
        }
    }
    security: {
        security_requirement: {
            key: "JWTAuth";
            value: {};
        }
    }
    security: {
        security_requirement: {
            key: "ApiKeyAuth";
            value: {};
        }
    }
};

// Registry is a gRPC service responsible for registering Contracts
service ContractRegistry {
    // Register a contract
    rpc RegisterContract (RegisterContractRequest) returns (RegisterContractResponse) {
        option (google.api.http) = {
            post: "/contracts"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            responses: {
				key: "400"
                value: {
                	description: "Bad Request"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "no contract provided in request", "code": 3, "message": "no contract provided in request", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "no contract provided in request", "code": "270851", "component": "contract-registry-common" } ] }'
                    }
                }
            }
            responses: {
                key: "500"
                value: {
                    description: "Internal Server Error"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "invalid character \'@\' looking for beginning of value", "code": 13, "message": "invalid character \'@\' looking for beginning of value", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "invalid character \'@\' looking for beginning of value", "code": "1044480", "component": "contract-registry-common" } ] }'
                    }
                }
            }
        };
    }

    // DeregisterContract remove the name + tag association to a contract artifact (abi, bytecode, deployedBytecode). Artifacts are not deleted.
    rpc DeregisterContract (DeregisterContractRequest) returns (DeregisterContractResponse);
    // DeleteArtifact delete a contract artifact (abi, bytecode, deployedBytecode).
    rpc DeleteArtifact (DeleteArtifactRequest) returns (DeleteArtifactResponse);
    // Retrieve contract
    rpc GetContract (GetContractRequest) returns (GetContractResponse) {
        option (google.api.http) = {
            get: "/contracts/{contractId.name}/{contractId.tag}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            responses: {
                key: "500"
                value: {
                    description: "Internal Server Error"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "could not load contract (pg: no rows in result set)", "code": 2, "message": "could not load contract (pg: no rows in result set)", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "could not load contract (pg: no rows in result set)", "code": "897024", "component": "contract-registry.pg" } ] }'
                    }
                }
            }
        };
    }

    // Retrieve contract ABI
    rpc GetContractABI (GetContractRequest) returns (GetContractABIResponse) {
        option (google.api.http) = {
            get: "/contracts/{contractId.name}/{contractId.tag}/abi"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            responses: {
                key: "500"
                value: {
                    description: "Internal Server Error"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "could not load contract (pg: no rows in result set)", "code": 2, "message": "could not load contract (pg: no rows in result set)", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "could not load contract (pg: no rows in result set)", "code": "897024", "component": "contract-registry.pg" } ] }'
                    }
                }
            }
        };
    }

    // Returns the bytecode
    rpc GetContractBytecode (GetContractRequest) returns (GetContractBytecodeResponse) {
        option (google.api.http) = {
            get: "/contracts/{contractId.name}/{contractId.tag}/bytecode"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            responses: {
                key: "500"
                value: {
                    description: "Internal Server Error"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "could not load contract (pg: no rows in result set)", "code": 2, "message": "could not load contract (pg: no rows in result set)", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "could not load contract (pg: no rows in result set)", "code": "897024", "component": "contract-registry.pg" } ] }'
                    }
                }
            }
        };
    }

    // Returns the deployed bytecode
    rpc GetContractDeployedBytecode (GetContractRequest) returns (GetContractDeployedBytecodeResponse) {
        option (google.api.http) = {
            get: "/contracts/{contractId.name}/{contractId.tag}/deployedBytecode"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            responses: {
                key: "500"
                value: {
                    description: "Internal Server Error"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "could not load contract (pg: no rows in result set)", "code": 2, "message": "could not load contract (pg: no rows in result set)", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "could not load contract (pg: no rows in result set)", "code": "897024", "component": "contract-registry.pg" } ] }'
                    }
                }
            }
        };
    }

    // Returns a list of all registered contracts
    rpc GetCatalog (GetCatalogRequest) returns (GetCatalogResponse) {
        option (google.api.http) = {
            get: "/contracts"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            responses: {
                key: "500"
                value: {
                    description: "Internal Server Error"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "could not load contract (pg: no rows in result set)", "code": 2, "message": "could not load contract (pg: no rows in result set)", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "could not load contract (pg: no rows in result set)", "code": "897024", "component": "contract-registry.pg" } ] }'
                    }
                }
            }
        };
    }

    // Returns a list of all tags associated to a contract
    rpc GetTags (GetTagsRequest) returns (GetTagsResponse) {
        option (google.api.http) = {
            get: "/contracts/{name}"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            responses: {
                key: "500"
                value: {
                    description: "Internal Server Error"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "could not load contract (pg: no rows in result set)", "code": 2, "message": "could not load contract (pg: no rows in result set)", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "could not load contract (pg: no rows in result set)", "code": "897024", "component": "contract-registry.pg" } ] }'
                    }
                }
            }
        };
    }

    // Returns a list of all method signatures matching the method name
    rpc GetMethodSignatures (GetMethodSignaturesRequest) returns (GetMethodSignaturesResponse) {
        option (google.api.http) = {
            get: "/contracts/{contractId.name}/{contractId.tag}/method-signatures"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            responses: {
                key: "500"
                value: {
                    description: "Internal Server Error"
                    examples: {
                        key: "application/json"
                        value: '{ "error": "could not load contract (pg: no rows in result set)", "code": 2, "message": "could not load contract (pg: no rows in result set)", "details": [ { "@type": "type.googleapis.com/error.Error", "message": "could not load contract (pg: no rows in result set)", "code": "897024", "component": "contract-registry.pg" } ] }'
                    }
                }
            }
        };
    }

    // Retrieve methods using 4 bytes unique selector
    rpc GetMethodsBySelector (GetMethodsBySelectorRequest) returns (GetMethodsBySelectorResponse);
    // Retrieve events using hash of signature
    rpc GetEventsBySigHash (GetEventsBySigHashRequest) returns (GetEventsBySigHashResponse);

    // Set the codeHash of the given account
    rpc SetAccountCodeHash (SetAccountCodeHashRequest) returns (SetAccountCodeHashResponse);
}

// Register
message RegisterContractRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			title: "Register Contract request"
			required: ["contract"]
		};
        example: { value: '{ "contract":{"id":{"name":"SimpleToken","tag":"v0.0.1"}, "abi":"[{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"DECIMALS\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"INITIAL_SUPPLY\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"addedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"increaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"name\\":\\"subtractedValue\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"decreaseAllowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"name\\":\\"spender\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"}]\", "bytecode":"0x608060405234801561001057600080fd5b506040518060400160405280600b81526020017f53696d706c65546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f53494d0000000000000000000000000000000000000000000000000000000000815250601282600390805190602001906100959291906101a5565b5081516100a99060049060208501906101a5565b506005805460ff191660ff92909216919091179055506100d590503369021e19e0c9bab24000006100da565b610240565b6001600160a01b0382166100ed57600080fd5b6101068160025461018c60201b6108f71790919060201c565b6002556001600160a01b038216600090815260208181526040909120546101369183906108f761018c821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561019e57600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101e657805160ff1916838001178555610213565b82800160010185558215610213579182015b828111156102135782518255916020019190600101906101f8565b5061021f929150610223565b5090565b61023d91905b8082111561021f5760008155600101610229565b90565b6109458061024f6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b41146102a5578063a457c2d7146102ad578063a9059cbb146102e6578063dd62ed3e1461031f576100df565b8063313ce56714610231578063395093511461023957806370a0823114610272576100df565b806323b872dd116100bd57806323b872dd146101c85780632e0f26251461020b5780632ff2e9dc14610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec61035a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561040e565b604080519115158252519081900360200190f35b6101b66104a4565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356104aa565b61021361059a565b6040805160ff9092168252519081900360200190f35b6101b661059f565b6102136105ad565b61019a6004803603604081101561024f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b6565b6101b66004803603602081101561028857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661068b565b6100ec6106b3565b61019a600480360360408110156102c357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610732565b61019a600480360360408110156102fc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610795565b6101b66004803603604081101561033557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff831661043057600080fd5b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602090815260408083203384529091528120546104eb908363ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff851660009081526001602090815260408083203384529091529020556105278484846107f8565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b601281565b69021e19e0c9bab240000081565b60055460ff1690565b600073ffffffffffffffffffffffffffffffffffffffff83166105d857600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6108f716565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b600073ffffffffffffffffffffffffffffffffffffffff831661075457600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6107e316565b60006107a23384846107f8565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6000828211156107f257600080fd5b50900390565b73ffffffffffffffffffffffffffffffffffffffff821661081857600080fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461084e908263ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610890908263ffffffff6108f716565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561090957600080fd5b939250505056fea265627a7a7230582021b9409d39dc5497346129b4f8ae9ad87628e9733e96a78af60101187c5cfd8b64736f6c634300050a0032", "deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100df5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b41146102a5578063a457c2d7146102ad578063a9059cbb146102e6578063dd62ed3e1461031f576100df565b8063313ce56714610231578063395093511461023957806370a0823114610272576100df565b806323b872dd116100bd57806323b872dd146101c85780632e0f26251461020b5780632ff2e9dc14610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec61035a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561040e565b604080519115158252519081900360200190f35b6101b66104a4565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356104aa565b61021361059a565b6040805160ff9092168252519081900360200190f35b6101b661059f565b6102136105ad565b61019a6004803603604081101561024f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b6565b6101b66004803603602081101561028857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661068b565b6100ec6106b3565b61019a600480360360408110156102c357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610732565b61019a600480360360408110156102fc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610795565b6101b66004803603604081101561033557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff831661043057600080fd5b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602090815260408083203384529091528120546104eb908363ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff851660009081526001602090815260408083203384529091529020556105278484846107f8565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b601281565b69021e19e0c9bab240000081565b60055460ff1690565b600073ffffffffffffffffffffffffffffffffffffffff83166105d857600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6108f716565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b600073ffffffffffffffffffffffffffffffffffffffff831661075457600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6107e316565b60006107a23384846107f8565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6000828211156107f257600080fd5b50900390565b73ffffffffffffffffffffffffffffffffffffffff821661081857600080fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461084e908263ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610890908263ffffffff6108f716565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561090957600080fd5b939250505056fea265627a7a7230582021b9409d39dc5497346129b4f8ae9ad87628e9733e96a78af60101187c5cfd8b64736f6c634300050a0032"} }' }
    };

    // Contract to register
    abi.Contract contract = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "contract payload"}];
}

message RegisterContractResponse {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        example: { value: '{}' };
    };
}

message DeregisterContractRequest {
    // Contract to register
    abi.ContractId contractId = 1;
}
message DeregisterContractResponse {
}


message DeleteArtifactRequest {
    // Hash of the bytecode pointing to an artifact to delete
    string bytecodeHash = 1;
}
message DeleteArtifactResponse {
}

// Getters
message GetContractRequest {
    abi.ContractId contractId = 1;
}

message GetContractResponse {
    abi.Contract contract = 1;
}

message GetContractABIResponse {
    string abi = 1;
}

message GetContractBytecodeResponse {
    string bytecode = 1;
}

message GetContractDeployedBytecodeResponse {
    string deployedBytecode = 1;
}


message GetCatalogRequest {
}
message GetCatalogResponse {
    repeated string names = 1;
}


message GetTagsRequest {
    // Name is used to filter contractIds based on their contract name, empty to list all contract names & tags.
    string name = 1;
}
message GetTagsResponse {
    repeated string tags = 1;
}


message GetMethodsBySelectorRequest {
    // Method selector
    bytes selector = 1;

    // Chain & Address of the contract
    common.AccountInstance accountInstance = 2;
}
message GetMethodsBySelectorResponse {
    // Contains the ABI of the exact method if the deployed contract has a known bytecode
    string method = 1;
    // Contains the ABIs of the potential methods(s) if the deployed contract is not known
    repeated string defaultMethods = 2;
}

message GetEventsBySigHashRequest {
    // Event signature hash (aka: topic[0])
    string sigHash = 1;

    // Chain & Address of the contract
    common.AccountInstance accountInstance = 2;

    // Count of indexed inputs in event abi
    uint32 indexedInputCount = 3;
}
message GetEventsBySigHashResponse {
    // Contains the ABI of the exact event if the deployed contract has a known bytecode
    string event = 1;
    // Contains the ABIs of the potential event(s) if the deployed contract is not known
    repeated string defaultEvents = 2;
}

// Update
message SetAccountCodeHashRequest {
    // Chain & address of the account to update
    common.AccountInstance accountInstance = 1;

    string codeHash = 2;
}
message SetAccountCodeHashResponse {
}

message GetMethodSignaturesRequest {
    abi.ContractId contractId = 1;

    string methodName = 2;
}

message GetMethodSignaturesResponse {
    repeated string signatures = 1;
}