// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/contract-registry/proto/registry.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	abi "gitlab.com/ConsenSys/client/fr/core-stack/orchestrate.git/pkg/types/abi"
	common "gitlab.com/ConsenSys/client/fr/core-stack/orchestrate.git/pkg/types/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Register
type RegisterContractRequest struct {
	// Contract to register
	Contract             *abi.Contract `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RegisterContractRequest) Reset()         { *m = RegisterContractRequest{} }
func (m *RegisterContractRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterContractRequest) ProtoMessage()    {}
func (*RegisterContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{0}
}

func (m *RegisterContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterContractRequest.Unmarshal(m, b)
}
func (m *RegisterContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterContractRequest.Marshal(b, m, deterministic)
}
func (m *RegisterContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterContractRequest.Merge(m, src)
}
func (m *RegisterContractRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterContractRequest.Size(m)
}
func (m *RegisterContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterContractRequest proto.InternalMessageInfo

func (m *RegisterContractRequest) GetContract() *abi.Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type RegisterContractResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterContractResponse) Reset()         { *m = RegisterContractResponse{} }
func (m *RegisterContractResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterContractResponse) ProtoMessage()    {}
func (*RegisterContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{1}
}

func (m *RegisterContractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterContractResponse.Unmarshal(m, b)
}
func (m *RegisterContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterContractResponse.Marshal(b, m, deterministic)
}
func (m *RegisterContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterContractResponse.Merge(m, src)
}
func (m *RegisterContractResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterContractResponse.Size(m)
}
func (m *RegisterContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterContractResponse proto.InternalMessageInfo

type DeregisterContractRequest struct {
	// Contract to register
	ContractId           *abi.ContractId `protobuf:"bytes,1,opt,name=contractId,proto3" json:"contractId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DeregisterContractRequest) Reset()         { *m = DeregisterContractRequest{} }
func (m *DeregisterContractRequest) String() string { return proto.CompactTextString(m) }
func (*DeregisterContractRequest) ProtoMessage()    {}
func (*DeregisterContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{2}
}

func (m *DeregisterContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeregisterContractRequest.Unmarshal(m, b)
}
func (m *DeregisterContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeregisterContractRequest.Marshal(b, m, deterministic)
}
func (m *DeregisterContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeregisterContractRequest.Merge(m, src)
}
func (m *DeregisterContractRequest) XXX_Size() int {
	return xxx_messageInfo_DeregisterContractRequest.Size(m)
}
func (m *DeregisterContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeregisterContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeregisterContractRequest proto.InternalMessageInfo

func (m *DeregisterContractRequest) GetContractId() *abi.ContractId {
	if m != nil {
		return m.ContractId
	}
	return nil
}

type DeregisterContractResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeregisterContractResponse) Reset()         { *m = DeregisterContractResponse{} }
func (m *DeregisterContractResponse) String() string { return proto.CompactTextString(m) }
func (*DeregisterContractResponse) ProtoMessage()    {}
func (*DeregisterContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{3}
}

func (m *DeregisterContractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeregisterContractResponse.Unmarshal(m, b)
}
func (m *DeregisterContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeregisterContractResponse.Marshal(b, m, deterministic)
}
func (m *DeregisterContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeregisterContractResponse.Merge(m, src)
}
func (m *DeregisterContractResponse) XXX_Size() int {
	return xxx_messageInfo_DeregisterContractResponse.Size(m)
}
func (m *DeregisterContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeregisterContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeregisterContractResponse proto.InternalMessageInfo

type DeleteArtifactRequest struct {
	// Hash of the bytecode pointing to an artifact to delete
	BytecodeHash         string   `protobuf:"bytes,1,opt,name=bytecodeHash,proto3" json:"bytecodeHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArtifactRequest) Reset()         { *m = DeleteArtifactRequest{} }
func (m *DeleteArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteArtifactRequest) ProtoMessage()    {}
func (*DeleteArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{4}
}

func (m *DeleteArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArtifactRequest.Unmarshal(m, b)
}
func (m *DeleteArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArtifactRequest.Marshal(b, m, deterministic)
}
func (m *DeleteArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArtifactRequest.Merge(m, src)
}
func (m *DeleteArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteArtifactRequest.Size(m)
}
func (m *DeleteArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArtifactRequest proto.InternalMessageInfo

func (m *DeleteArtifactRequest) GetBytecodeHash() string {
	if m != nil {
		return m.BytecodeHash
	}
	return ""
}

type DeleteArtifactResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArtifactResponse) Reset()         { *m = DeleteArtifactResponse{} }
func (m *DeleteArtifactResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteArtifactResponse) ProtoMessage()    {}
func (*DeleteArtifactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{5}
}

func (m *DeleteArtifactResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArtifactResponse.Unmarshal(m, b)
}
func (m *DeleteArtifactResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArtifactResponse.Marshal(b, m, deterministic)
}
func (m *DeleteArtifactResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArtifactResponse.Merge(m, src)
}
func (m *DeleteArtifactResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteArtifactResponse.Size(m)
}
func (m *DeleteArtifactResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArtifactResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArtifactResponse proto.InternalMessageInfo

// Getters
type GetContractRequest struct {
	ContractId           *abi.ContractId `protobuf:"bytes,1,opt,name=contractId,proto3" json:"contractId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetContractRequest) Reset()         { *m = GetContractRequest{} }
func (m *GetContractRequest) String() string { return proto.CompactTextString(m) }
func (*GetContractRequest) ProtoMessage()    {}
func (*GetContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{6}
}

func (m *GetContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractRequest.Unmarshal(m, b)
}
func (m *GetContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractRequest.Marshal(b, m, deterministic)
}
func (m *GetContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractRequest.Merge(m, src)
}
func (m *GetContractRequest) XXX_Size() int {
	return xxx_messageInfo_GetContractRequest.Size(m)
}
func (m *GetContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractRequest proto.InternalMessageInfo

func (m *GetContractRequest) GetContractId() *abi.ContractId {
	if m != nil {
		return m.ContractId
	}
	return nil
}

type GetContractResponse struct {
	Contract             *abi.Contract `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetContractResponse) Reset()         { *m = GetContractResponse{} }
func (m *GetContractResponse) String() string { return proto.CompactTextString(m) }
func (*GetContractResponse) ProtoMessage()    {}
func (*GetContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{7}
}

func (m *GetContractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractResponse.Unmarshal(m, b)
}
func (m *GetContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractResponse.Marshal(b, m, deterministic)
}
func (m *GetContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractResponse.Merge(m, src)
}
func (m *GetContractResponse) XXX_Size() int {
	return xxx_messageInfo_GetContractResponse.Size(m)
}
func (m *GetContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractResponse proto.InternalMessageInfo

func (m *GetContractResponse) GetContract() *abi.Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type GetContractABIResponse struct {
	Abi                  string   `protobuf:"bytes,1,opt,name=abi,proto3" json:"abi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractABIResponse) Reset()         { *m = GetContractABIResponse{} }
func (m *GetContractABIResponse) String() string { return proto.CompactTextString(m) }
func (*GetContractABIResponse) ProtoMessage()    {}
func (*GetContractABIResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{8}
}

func (m *GetContractABIResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractABIResponse.Unmarshal(m, b)
}
func (m *GetContractABIResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractABIResponse.Marshal(b, m, deterministic)
}
func (m *GetContractABIResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractABIResponse.Merge(m, src)
}
func (m *GetContractABIResponse) XXX_Size() int {
	return xxx_messageInfo_GetContractABIResponse.Size(m)
}
func (m *GetContractABIResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractABIResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractABIResponse proto.InternalMessageInfo

func (m *GetContractABIResponse) GetAbi() string {
	if m != nil {
		return m.Abi
	}
	return ""
}

type GetContractBytecodeResponse struct {
	Bytecode             string   `protobuf:"bytes,1,opt,name=bytecode,proto3" json:"bytecode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractBytecodeResponse) Reset()         { *m = GetContractBytecodeResponse{} }
func (m *GetContractBytecodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetContractBytecodeResponse) ProtoMessage()    {}
func (*GetContractBytecodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{9}
}

func (m *GetContractBytecodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractBytecodeResponse.Unmarshal(m, b)
}
func (m *GetContractBytecodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractBytecodeResponse.Marshal(b, m, deterministic)
}
func (m *GetContractBytecodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractBytecodeResponse.Merge(m, src)
}
func (m *GetContractBytecodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetContractBytecodeResponse.Size(m)
}
func (m *GetContractBytecodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractBytecodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractBytecodeResponse proto.InternalMessageInfo

func (m *GetContractBytecodeResponse) GetBytecode() string {
	if m != nil {
		return m.Bytecode
	}
	return ""
}

type GetContractDeployedBytecodeResponse struct {
	DeployedBytecode     string   `protobuf:"bytes,1,opt,name=deployedBytecode,proto3" json:"deployedBytecode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractDeployedBytecodeResponse) Reset()         { *m = GetContractDeployedBytecodeResponse{} }
func (m *GetContractDeployedBytecodeResponse) String() string { return proto.CompactTextString(m) }
func (*GetContractDeployedBytecodeResponse) ProtoMessage()    {}
func (*GetContractDeployedBytecodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{10}
}

func (m *GetContractDeployedBytecodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractDeployedBytecodeResponse.Unmarshal(m, b)
}
func (m *GetContractDeployedBytecodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractDeployedBytecodeResponse.Marshal(b, m, deterministic)
}
func (m *GetContractDeployedBytecodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractDeployedBytecodeResponse.Merge(m, src)
}
func (m *GetContractDeployedBytecodeResponse) XXX_Size() int {
	return xxx_messageInfo_GetContractDeployedBytecodeResponse.Size(m)
}
func (m *GetContractDeployedBytecodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractDeployedBytecodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractDeployedBytecodeResponse proto.InternalMessageInfo

func (m *GetContractDeployedBytecodeResponse) GetDeployedBytecode() string {
	if m != nil {
		return m.DeployedBytecode
	}
	return ""
}

type GetCatalogRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCatalogRequest) Reset()         { *m = GetCatalogRequest{} }
func (m *GetCatalogRequest) String() string { return proto.CompactTextString(m) }
func (*GetCatalogRequest) ProtoMessage()    {}
func (*GetCatalogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{11}
}

func (m *GetCatalogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCatalogRequest.Unmarshal(m, b)
}
func (m *GetCatalogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCatalogRequest.Marshal(b, m, deterministic)
}
func (m *GetCatalogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCatalogRequest.Merge(m, src)
}
func (m *GetCatalogRequest) XXX_Size() int {
	return xxx_messageInfo_GetCatalogRequest.Size(m)
}
func (m *GetCatalogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCatalogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCatalogRequest proto.InternalMessageInfo

type GetCatalogResponse struct {
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCatalogResponse) Reset()         { *m = GetCatalogResponse{} }
func (m *GetCatalogResponse) String() string { return proto.CompactTextString(m) }
func (*GetCatalogResponse) ProtoMessage()    {}
func (*GetCatalogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{12}
}

func (m *GetCatalogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCatalogResponse.Unmarshal(m, b)
}
func (m *GetCatalogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCatalogResponse.Marshal(b, m, deterministic)
}
func (m *GetCatalogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCatalogResponse.Merge(m, src)
}
func (m *GetCatalogResponse) XXX_Size() int {
	return xxx_messageInfo_GetCatalogResponse.Size(m)
}
func (m *GetCatalogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCatalogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCatalogResponse proto.InternalMessageInfo

func (m *GetCatalogResponse) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

type GetTagsRequest struct {
	// Name is used to filter contractIds based on their contract name, empty to list all contract names & tags.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsRequest) Reset()         { *m = GetTagsRequest{} }
func (m *GetTagsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTagsRequest) ProtoMessage()    {}
func (*GetTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{13}
}

func (m *GetTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsRequest.Unmarshal(m, b)
}
func (m *GetTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsRequest.Marshal(b, m, deterministic)
}
func (m *GetTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsRequest.Merge(m, src)
}
func (m *GetTagsRequest) XXX_Size() int {
	return xxx_messageInfo_GetTagsRequest.Size(m)
}
func (m *GetTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsRequest proto.InternalMessageInfo

func (m *GetTagsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetTagsResponse struct {
	Tags                 []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTagsResponse) Reset()         { *m = GetTagsResponse{} }
func (m *GetTagsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTagsResponse) ProtoMessage()    {}
func (*GetTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{14}
}

func (m *GetTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTagsResponse.Unmarshal(m, b)
}
func (m *GetTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTagsResponse.Marshal(b, m, deterministic)
}
func (m *GetTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTagsResponse.Merge(m, src)
}
func (m *GetTagsResponse) XXX_Size() int {
	return xxx_messageInfo_GetTagsResponse.Size(m)
}
func (m *GetTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTagsResponse proto.InternalMessageInfo

func (m *GetTagsResponse) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type GetMethodsBySelectorRequest struct {
	// Method selector
	Selector []byte `protobuf:"bytes,1,opt,name=selector,proto3" json:"selector,omitempty"`
	// Chain & Address of the contract
	AccountInstance      *common.AccountInstance `protobuf:"bytes,2,opt,name=accountInstance,proto3" json:"accountInstance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GetMethodsBySelectorRequest) Reset()         { *m = GetMethodsBySelectorRequest{} }
func (m *GetMethodsBySelectorRequest) String() string { return proto.CompactTextString(m) }
func (*GetMethodsBySelectorRequest) ProtoMessage()    {}
func (*GetMethodsBySelectorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{15}
}

func (m *GetMethodsBySelectorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMethodsBySelectorRequest.Unmarshal(m, b)
}
func (m *GetMethodsBySelectorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMethodsBySelectorRequest.Marshal(b, m, deterministic)
}
func (m *GetMethodsBySelectorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMethodsBySelectorRequest.Merge(m, src)
}
func (m *GetMethodsBySelectorRequest) XXX_Size() int {
	return xxx_messageInfo_GetMethodsBySelectorRequest.Size(m)
}
func (m *GetMethodsBySelectorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMethodsBySelectorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMethodsBySelectorRequest proto.InternalMessageInfo

func (m *GetMethodsBySelectorRequest) GetSelector() []byte {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *GetMethodsBySelectorRequest) GetAccountInstance() *common.AccountInstance {
	if m != nil {
		return m.AccountInstance
	}
	return nil
}

type GetMethodsBySelectorResponse struct {
	// Contains the ABI of the exact method if the deployed contract has a known bytecode
	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	// Contains the ABIs of the potential methods(s) if the deployed contract is not known
	DefaultMethods       []string `protobuf:"bytes,2,rep,name=defaultMethods,proto3" json:"defaultMethods,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMethodsBySelectorResponse) Reset()         { *m = GetMethodsBySelectorResponse{} }
func (m *GetMethodsBySelectorResponse) String() string { return proto.CompactTextString(m) }
func (*GetMethodsBySelectorResponse) ProtoMessage()    {}
func (*GetMethodsBySelectorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{16}
}

func (m *GetMethodsBySelectorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMethodsBySelectorResponse.Unmarshal(m, b)
}
func (m *GetMethodsBySelectorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMethodsBySelectorResponse.Marshal(b, m, deterministic)
}
func (m *GetMethodsBySelectorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMethodsBySelectorResponse.Merge(m, src)
}
func (m *GetMethodsBySelectorResponse) XXX_Size() int {
	return xxx_messageInfo_GetMethodsBySelectorResponse.Size(m)
}
func (m *GetMethodsBySelectorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMethodsBySelectorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMethodsBySelectorResponse proto.InternalMessageInfo

func (m *GetMethodsBySelectorResponse) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *GetMethodsBySelectorResponse) GetDefaultMethods() []string {
	if m != nil {
		return m.DefaultMethods
	}
	return nil
}

type GetEventsBySigHashRequest struct {
	// Event signature hash (aka: topic[0])
	SigHash string `protobuf:"bytes,1,opt,name=sigHash,proto3" json:"sigHash,omitempty"`
	// Chain & Address of the contract
	AccountInstance *common.AccountInstance `protobuf:"bytes,2,opt,name=accountInstance,proto3" json:"accountInstance,omitempty"`
	// Count of indexed inputs in event abi
	IndexedInputCount    uint32   `protobuf:"varint,3,opt,name=indexedInputCount,proto3" json:"indexedInputCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsBySigHashRequest) Reset()         { *m = GetEventsBySigHashRequest{} }
func (m *GetEventsBySigHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventsBySigHashRequest) ProtoMessage()    {}
func (*GetEventsBySigHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{17}
}

func (m *GetEventsBySigHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsBySigHashRequest.Unmarshal(m, b)
}
func (m *GetEventsBySigHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsBySigHashRequest.Marshal(b, m, deterministic)
}
func (m *GetEventsBySigHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsBySigHashRequest.Merge(m, src)
}
func (m *GetEventsBySigHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventsBySigHashRequest.Size(m)
}
func (m *GetEventsBySigHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsBySigHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsBySigHashRequest proto.InternalMessageInfo

func (m *GetEventsBySigHashRequest) GetSigHash() string {
	if m != nil {
		return m.SigHash
	}
	return ""
}

func (m *GetEventsBySigHashRequest) GetAccountInstance() *common.AccountInstance {
	if m != nil {
		return m.AccountInstance
	}
	return nil
}

func (m *GetEventsBySigHashRequest) GetIndexedInputCount() uint32 {
	if m != nil {
		return m.IndexedInputCount
	}
	return 0
}

type GetEventsBySigHashResponse struct {
	// Contains the ABI of the exact event if the deployed contract has a known bytecode
	Event string `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// Contains the ABIs of the potential event(s) if the deployed contract is not known
	DefaultEvents        []string `protobuf:"bytes,2,rep,name=defaultEvents,proto3" json:"defaultEvents,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventsBySigHashResponse) Reset()         { *m = GetEventsBySigHashResponse{} }
func (m *GetEventsBySigHashResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventsBySigHashResponse) ProtoMessage()    {}
func (*GetEventsBySigHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{18}
}

func (m *GetEventsBySigHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventsBySigHashResponse.Unmarshal(m, b)
}
func (m *GetEventsBySigHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventsBySigHashResponse.Marshal(b, m, deterministic)
}
func (m *GetEventsBySigHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventsBySigHashResponse.Merge(m, src)
}
func (m *GetEventsBySigHashResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventsBySigHashResponse.Size(m)
}
func (m *GetEventsBySigHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventsBySigHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventsBySigHashResponse proto.InternalMessageInfo

func (m *GetEventsBySigHashResponse) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *GetEventsBySigHashResponse) GetDefaultEvents() []string {
	if m != nil {
		return m.DefaultEvents
	}
	return nil
}

// Update
type SetAccountCodeHashRequest struct {
	// Chain & address of the account to update
	AccountInstance      *common.AccountInstance `protobuf:"bytes,1,opt,name=accountInstance,proto3" json:"accountInstance,omitempty"`
	CodeHash             string                  `protobuf:"bytes,2,opt,name=codeHash,proto3" json:"codeHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SetAccountCodeHashRequest) Reset()         { *m = SetAccountCodeHashRequest{} }
func (m *SetAccountCodeHashRequest) String() string { return proto.CompactTextString(m) }
func (*SetAccountCodeHashRequest) ProtoMessage()    {}
func (*SetAccountCodeHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{19}
}

func (m *SetAccountCodeHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAccountCodeHashRequest.Unmarshal(m, b)
}
func (m *SetAccountCodeHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAccountCodeHashRequest.Marshal(b, m, deterministic)
}
func (m *SetAccountCodeHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAccountCodeHashRequest.Merge(m, src)
}
func (m *SetAccountCodeHashRequest) XXX_Size() int {
	return xxx_messageInfo_SetAccountCodeHashRequest.Size(m)
}
func (m *SetAccountCodeHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAccountCodeHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAccountCodeHashRequest proto.InternalMessageInfo

func (m *SetAccountCodeHashRequest) GetAccountInstance() *common.AccountInstance {
	if m != nil {
		return m.AccountInstance
	}
	return nil
}

func (m *SetAccountCodeHashRequest) GetCodeHash() string {
	if m != nil {
		return m.CodeHash
	}
	return ""
}

type SetAccountCodeHashResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAccountCodeHashResponse) Reset()         { *m = SetAccountCodeHashResponse{} }
func (m *SetAccountCodeHashResponse) String() string { return proto.CompactTextString(m) }
func (*SetAccountCodeHashResponse) ProtoMessage()    {}
func (*SetAccountCodeHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a125f4d2878076fd, []int{20}
}

func (m *SetAccountCodeHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAccountCodeHashResponse.Unmarshal(m, b)
}
func (m *SetAccountCodeHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAccountCodeHashResponse.Marshal(b, m, deterministic)
}
func (m *SetAccountCodeHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAccountCodeHashResponse.Merge(m, src)
}
func (m *SetAccountCodeHashResponse) XXX_Size() int {
	return xxx_messageInfo_SetAccountCodeHashResponse.Size(m)
}
func (m *SetAccountCodeHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAccountCodeHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetAccountCodeHashResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*RegisterContractRequest)(nil), "contractregistry.RegisterContractRequest")
	proto.RegisterType((*RegisterContractResponse)(nil), "contractregistry.RegisterContractResponse")
	proto.RegisterType((*DeregisterContractRequest)(nil), "contractregistry.DeregisterContractRequest")
	proto.RegisterType((*DeregisterContractResponse)(nil), "contractregistry.DeregisterContractResponse")
	proto.RegisterType((*DeleteArtifactRequest)(nil), "contractregistry.DeleteArtifactRequest")
	proto.RegisterType((*DeleteArtifactResponse)(nil), "contractregistry.DeleteArtifactResponse")
	proto.RegisterType((*GetContractRequest)(nil), "contractregistry.GetContractRequest")
	proto.RegisterType((*GetContractResponse)(nil), "contractregistry.GetContractResponse")
	proto.RegisterType((*GetContractABIResponse)(nil), "contractregistry.GetContractABIResponse")
	proto.RegisterType((*GetContractBytecodeResponse)(nil), "contractregistry.GetContractBytecodeResponse")
	proto.RegisterType((*GetContractDeployedBytecodeResponse)(nil), "contractregistry.GetContractDeployedBytecodeResponse")
	proto.RegisterType((*GetCatalogRequest)(nil), "contractregistry.GetCatalogRequest")
	proto.RegisterType((*GetCatalogResponse)(nil), "contractregistry.GetCatalogResponse")
	proto.RegisterType((*GetTagsRequest)(nil), "contractregistry.GetTagsRequest")
	proto.RegisterType((*GetTagsResponse)(nil), "contractregistry.GetTagsResponse")
	proto.RegisterType((*GetMethodsBySelectorRequest)(nil), "contractregistry.GetMethodsBySelectorRequest")
	proto.RegisterType((*GetMethodsBySelectorResponse)(nil), "contractregistry.GetMethodsBySelectorResponse")
	proto.RegisterType((*GetEventsBySigHashRequest)(nil), "contractregistry.GetEventsBySigHashRequest")
	proto.RegisterType((*GetEventsBySigHashResponse)(nil), "contractregistry.GetEventsBySigHashResponse")
	proto.RegisterType((*SetAccountCodeHashRequest)(nil), "contractregistry.SetAccountCodeHashRequest")
	proto.RegisterType((*SetAccountCodeHashResponse)(nil), "contractregistry.SetAccountCodeHashResponse")
}

func init() {
	proto.RegisterFile("services/contract-registry/proto/registry.proto", fileDescriptor_a125f4d2878076fd)
}

var fileDescriptor_a125f4d2878076fd = []byte{
	// 3818 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5c, 0x5f, 0x6c, 0x24, 0x47,
	0x5a, 0xbf, 0xb5, 0xf7, 0x92, 0x4d, 0x27, 0x9b, 0xdd, 0x74, 0xfe, 0x6d, 0x86, 0x80, 0x9a, 0xbe,
	0xcd, 0x65, 0xb3, 0xd8, 0x9e, 0xfa, 0xd3, 0xd5, 0x5d, 0x65, 0x24, 0x58, 0xef, 0x6e, 0x08, 0xce,
	0x25, 0x5c, 0xb0, 0x17, 0x38, 0x12, 0x87, 0x53, 0x75, 0x77, 0xf5, 0x6c, 0x93, 0x71, 0xf7, 0xd0,
	0xdd, 0xe3, 0x3d, 0xdf, 0xe2, 0x07, 0x78, 0x41, 0x48, 0x48, 0x48, 0x7b, 0x42, 0x27, 0x24, 0x04,
	0x42, 0x42, 0x3c, 0xf3, 0x70, 0x4f, 0x08, 0xf1, 0xc2, 0x03, 0x20, 0x24, 0x84, 0xe0, 0x95, 0xa7,
	0x13, 0x08, 0x09, 0x21, 0x01, 0x2f, 0xf0, 0x06, 0xa8, 0xfe, 0xf4, 0x4c, 0xf7, 0x78, 0xc6, 0x9e,
	0x59, 0x3b, 0x27, 0xdf, 0x31, 0xde, 0xd8, 0xee, 0xae, 0xfa, 0xea, 0xfb, 0xbe, 0xfa, 0xea, 0xf7,
	0x7d, 0xf5, 0xd5, 0x17, 0xd7, 0x58, 0xdd, 0x52, 0x14, 0x07, 0x69, 0x24, 0xca, 0x6e, 0x94, 0x67,
	0x55, 0xc1, 0xa3, 0x6a, 0xbd, 0x10, 0xbd, 0xb4, 0xac, 0x8a, 0xc3, 0xee, 0xa0, 0xc8, 0xab, 0xbc,
	0x5b, 0xbf, 0x6e, 0xa8, 0x57, 0xfb, 0x7a, 0x4d, 0x57, 0xb7, 0x77, 0xde, 0xec, 0xe5, 0x79, 0xaf,
	0x2f, 0xba, 0x7c, 0x90, 0x76, 0x79, 0x96, 0xe5, 0x15, 0xaf, 0xd2, 0x3c, 0x2b, 0x35, 0x7d, 0x67,
	0x4d, 0xfd, 0x8a, 0xd6, 0x7b, 0x22, 0x5b, 0x2f, 0x1f, 0xf1, 0x5e, 0x4f, 0x14, 0xdd, 0x7c, 0xa0,
	0x28, 0xa6, 0x50, 0xbf, 0x3e, 0xf8, 0xac, 0xd7, 0xad, 0x0e, 0x07, 0xa2, 0xec, 0xf2, 0x30, 0x95,
	0xdf, 0xa6, 0xe3, 0xed, 0x71, 0x47, 0x94, 0xef, 0xef, 0xe7, 0x59, 0x97, 0x47, 0x51, 0x3e, 0xcc,
	0xaa, 0xaf, 0xa7, 0x59, 0x59, 0xf1, 0x2c, 0x12, 0x9a, 0xd0, 0xfd, 0xef, 0x81, 0xf5, 0xfa, 0x8e,
	0x52, 0x4d, 0x14, 0xf7, 0x8c, 0xaa, 0x3b, 0xe2, 0x57, 0x86, 0xa2, 0xac, 0xec, 0x3b, 0xd6, 0x95,
	0x5a, 0xfb, 0x1b, 0x97, 0x9c, 0x4b, 0xb7, 0x9e, 0x47, 0x57, 0x37, 0xa4, 0x88, 0x9a, 0xee, 0xee,
	0xab, 0x4f, 0xb6, 0x6c, 0x34, 0x9a, 0xa1, 0x33, 0xe0, 0x87, 0xfd, 0x9c, 0xc7, 0x3b, 0xa3, 0x51,
	0x9b, 0xbf, 0x3b, 0x78, 0xb2, 0xf5, 0x3b, 0x03, 0xeb, 0xcb, 0xb7, 0xdf, 0xa8, 0x65, 0x38, 0xf5,
	0x60, 0xa7, 0xd0, 0x52, 0xfe, 0xfe, 0xd2, 0x88, 0x1c, 0xfd, 0x6b, 0x6e, 0xff, 0x4b, 0xfe, 0xd8,
	0x71, 0xeb, 0x06, 0x77, 0xf3, 0xb1, 0x9b, 0xc6, 0xf2, 0x67, 0xc6, 0xf7, 0x85, 0xbb, 0xe9, 0xee,
	0xa6, 0xfb, 0x83, 0xbe, 0x78, 0x90, 0x7f, 0x26, 0x32, 0x77, 0xcd, 0xad, 0x78, 0xcf, 0xdd, 0x74,
	0x0f, 0xc0, 0x06, 0xd8, 0x80, 0xee, 0xd1, 0x9a, 0xe3, 0xf2, 0x30, 0x75, 0x37, 0xdd, 0x4f, 0x1e,
	0xef, 0x49, 0x0e, 0x72, 0x9a, 0xd5, 0x9e, 0xbb, 0x59, 0x15, 0x43, 0xb1, 0xb6, 0xe7, 0xa6, 0xd9,
	0x60, 0x58, 0x95, 0x7b, 0xee, 0xe6, 0x27, 0x9f, 0xae, 0xed, 0x29, 0x7e, 0x7b, 0xee, 0x66, 0xfd,
	0xb0, 0xb6, 0xe7, 0xe6, 0xc3, 0xaa, 0x26, 0x78, 0xdc, 0xe8, 0x57, 0x7d, 0xd2, 0x90, 0xea, 0xad,
	0xac, 0x8a, 0x34, 0xeb, 0xed, 0xb9, 0x47, 0x92, 0xc7, 0x80, 0x1f, 0xf2, 0xb0, 0x2f, 0x3b, 0x12,
	0xde, 0x2f, 0xa5, 0x8c, 0xb2, 0xe2, 0x95, 0xf8, 0x70, 0x58, 0xf1, 0x30, 0xed, 0xa7, 0xd5, 0xa1,
	0x1a, 0x72, 0x90, 0x8a, 0x47, 0x6d, 0x26, 0xc9, 0x30, 0x8b, 0xe4, 0x22, 0xee, 0xb9, 0x47, 0x6b,
	0x6d, 0x55, 0x6b, 0x3e, 0x63, 0x5d, 0x9b, 0xaa, 0x94, 0x03, 0x91, 0xc5, 0xa2, 0x68, 0x33, 0xe3,
	0x71, 0x5c, 0x88, 0xb2, 0x34, 0xbc, 0x46, 0xb4, 0x07, 0xbc, 0x3f, 0x14, 0x6d, 0xca, 0x61, 0x9a,
	0x55, 0x88, 0xf8, 0x46, 0xf9, 0x11, 0x25, 0x1f, 0x0c, 0x8a, 0xfc, 0x60, 0x01, 0x1b, 0x84, 0x79,
	0xde, 0x5f, 0xc8, 0x02, 0x59, 0x9e, 0x8d, 0x08, 0xe7, 0xb3, 0xc3, 0xc9, 0x4b, 0x56, 0xe5, 0x15,
	0xef, 0xef, 0x0e, 0x07, 0x83, 0xfe, 0xe1, 0xfc, 0x5a, 0xb7, 0x67, 0xff, 0xbd, 0x5e, 0xba, 0xa4,
	0xc8, 0xf7, 0xe7, 0x5a, 0xb7, 0x2a, 0x3f, 0xe7, 0xe5, 0xad, 0x0a, 0x9e, 0x95, 0x89, 0x28, 0x7e,
	0xaa, 0xd6, 0xe0, 0xfb, 0x63, 0x8d, 0xef, 0xbf, 0x7b, 0x6f, 0xfb, 0xc3, 0xad, 0x0f, 0x76, 0x17,
	0x5b, 0x60, 0xfa, 0xb9, 0x2d, 0xef, 0xc9, 0xda, 0x6e, 0xff, 0xcc, 0xf6, 0x83, 0xed, 0xad, 0x0f,
	0xbe, 0xbe, 0xfb, 0x73, 0x1f, 0x7d, 0xf4, 0xc1, 0x2f, 0x5e, 0x1c, 0x50, 0x9e, 0xac, 0x75, 0x2c,
	0xa2, 0x74, 0x9f, 0xf7, 0xcb, 0x8b, 0x62, 0xe3, 0xf3, 0x8b, 0x7e, 0x3c, 0x8e, 0x45, 0xfc, 0xf3,
	0x73, 0xfb, 0x48, 0x9a, 0x45, 0x85, 0xe0, 0xa5, 0xd8, 0xea, 0xf7, 0xf3, 0x47, 0x72, 0x6f, 0xbc,
	0xd8, 0x8e, 0xd2, 0xd4, 0x26, 0x7f, 0x94, 0xcd, 0xb6, 0x49, 0x6b, 0x92, 0x21, 0xef, 0xcb, 0xa9,
	0x7d, 0x35, 0xf9, 0x7e, 0x81, 0x67, 0x79, 0xb8, 0x1f, 0x4a, 0xe3, 0xfe, 0xc0, 0xed, 0xcd, 0xe5,
	0x30, 0x54, 0xd9, 0xcd, 0x22, 0x10, 0x8d, 0xc5, 0x45, 0x86, 0xe8, 0xc9, 0xb6, 0xf9, 0xdc, 0xf6,
	0xb4, 0x1f, 0x10, 0x37, 0x5d, 0x5b, 0x00, 0x48, 0xed, 0xd4, 0x6d, 0x71, 0x30, 0x7c, 0x2e, 0x2e,
	0xdd, 0x76, 0xe0, 0xb3, 0x19, 0x58, 0x59, 0xb4, 0x18, 0x46, 0x55, 0x5e, 0x18, 0xee, 0x3c, 0xcb,
	0xb3, 0xc3, 0xfd, 0x7c, 0x58, 0xce, 0x02, 0x5a, 0x9a, 0xc5, 0xe2, 0x1b, 0x22, 0x1e, 0xaf, 0xc1,
	0xdc, 0x69, 0xd7, 0xec, 0x91, 0x27, 0x63, 0x76, 0x3c, 0xae, 0x56, 0xe8, 0x29, 0x50, 0xfc, 0xa0,
	0x89, 0xe2, 0x11, 0xb1, 0x38, 0x10, 0x12, 0x4e, 0x67, 0x9d, 0xf9, 0xa9, 0x80, 0x9b, 0x3d, 0x74,
	0x8e, 0x50, 0x76, 0x2e, 0xf3, 0xdf, 0x52, 0x07, 0x0f, 0xde, 0x9f, 0x3e, 0xff, 0x4f, 0xdd, 0x35,
	0xc7, 0x0d, 0x0f, 0x2b, 0x11, 0xe5, 0xb1, 0x3c, 0xf9, 0x81, 0x6f, 0xf8, 0x80, 0x02, 0x1f, 0x78,
	0x80, 0x20, 0xec, 0x51, 0x00, 0x89, 0x0f, 0x01, 0x80, 0x80, 0x04, 0x3e, 0x00, 0x80, 0x82, 0x24,
	0x26, 0x21, 0xd1, 0xfd, 0x50, 0xd3, 0x01, 0xa8, 0xa9, 0xe5, 0x1b, 0x08, 0x29, 0x24, 0xc8, 0x07,
	0x08, 0x00, 0x18, 0x24, 0x04, 0xfb, 0xcc, 0x8f, 0x03, 0xe0, 0x47, 0x3e, 0x21, 0x9e, 0x9f, 0xf8,
	0xa1, 0x4f, 0x7c, 0x01, 0xe6, 0xfe, 0x92, 0xbc, 0x4e, 0x90, 0x85, 0xdb, 0xb2, 0x3c, 0xe6, 0xc5,
	0xe0, 0xa9, 0xbf, 0x6a, 0x59, 0x10, 0x51, 0x24, 0x79, 0x33, 0x40, 0x01, 0x81, 0x0c, 0x68, 0xfe,
	0x0c, 0x48, 0x2b, 0x30, 0xc2, 0x10, 0xd3, 0xcf, 0x90, 0x13, 0xe2, 0x4b, 0x4b, 0x50, 0x48, 0xa0,
	0xec, 0xe3, 0x4c, 0xd2, 0x02, 0x4f, 0x8f, 0xa0, 0x04, 0x4c, 0xd0, 0xf9, 0x00, 0x10, 0x0a, 0x88,
	0xe7, 0x83, 0x24, 0x81, 0x0c, 0xfa, 0xf2, 0x37, 0x43, 0x0c, 0x30, 0x04, 0x7d, 0xc9, 0x93, 0x41,
	0x18, 0x30, 0x40, 0x08, 0x51, 0x92, 0x62, 0xc2, 0x00, 0x01, 0x18, 0xfb, 0x0c, 0x20, 0x28, 0x20,
	0x13, 0x20, 0x62, 0x21, 0x0f, 0x91, 0xa7, 0x74, 0x55, 0x14, 0x5c, 0xf2, 0xf5, 0x21, 0x40, 0x1e,
	0x50, 0x4f, 0xca, 0x36, 0xf2, 0x9b, 0x03, 0x18, 0x02, 0x4c, 0x11, 0xf4, 0x25, 0x9d, 0x88, 0x9b,
	0x2b, 0x27, 0x35, 0x02, 0x3e, 0x95, 0x94, 0x88, 0x78, 0xf2, 0x8d, 0x46, 0x52, 0x5f, 0x28, 0x7b,
	0x68, 0x12, 0x48, 0x1d, 0x98, 0x99, 0x35, 0x8c, 0x0c, 0x5f, 0x44, 0xc8, 0x54, 0xee, 0x00, 0x00,
	0x06, 0xea, 0x35, 0xa0, 0x50, 0x3f, 0x79, 0x40, 0x72, 0x40, 0x40, 0x73, 0xc7, 0x3e, 0x83, 0x14,
	0x2b, 0x4b, 0xd0, 0x24, 0xd0, 0xf2, 0x28, 0x82, 0xa1, 0x94, 0x33, 0xe2, 0xdf, 0xe6, 0x8c, 0x35,
	0xe7, 0x9a, 0x5f, 0x93, 0x33, 0x05, 0x14, 0x23, 0xc0, 0x3c, 0x06, 0x98, 0x47, 0x08, 0xc5, 0x04,
	0x52, 0x22, 0xfb, 0x18, 0x26, 0x90, 0x21, 0x86, 0x19, 0x64, 0x28, 0x48, 0xe2, 0x38, 0x41, 0x04,
	0xf1, 0x18, 0x86, 0x02, 0x45, 0x94, 0x85, 0x3e, 0x8b, 0x50, 0x08, 0x7c, 0x9a, 0x44, 0x38, 0xa0,
	0x31, 0xe7, 0x8c, 0xa0, 0x90, 0x07, 0x09, 0xf4, 0x71, 0xe4, 0x71, 0x08, 0x7d, 0x44, 0x13, 0x42,
	0xb8, 0x17, 0x27, 0x04, 0xe1, 0x10, 0x8b, 0x84, 0x21, 0x0a, 0x99, 0x42, 0x00, 0x83, 0x72, 0x15,
	0x39, 0x26, 0x80, 0xd4, 0x36, 0x06, 0x14, 0x51, 0x04, 0x20, 0xc5, 0x14, 0x42, 0xed, 0x1b, 0x90,
	0x89, 0xa6, 0x85, 0x19, 0x66, 0x48, 0xd1, 0xab, 0x11, 0x14, 0xe9, 0x35, 0x07, 0x50, 0xd9, 0x1c,
	0x42, 0x5f, 0x8f, 0x01, 0x00, 0x20, 0xa0, 0x67, 0x8a, 0x98, 0x41, 0x0d, 0x00, 0x7a, 0xbe, 0xbe,
	0xea, 0x94, 0x2d, 0x30, 0x91, 0x76, 0x91, 0xcf, 0xc0, 0xa3, 0x52, 0x92, 0xc2, 0x26, 0x4c, 0xa0,
	0x42, 0x96, 0xf0, 0x49, 0x20, 0x31, 0x5a, 0x23, 0x8a, 0x62, 0x2a, 0x25, 0x04, 0x94, 0x10, 0x29,
	0x03, 0x41, 0x5c, 0x6b, 0xa0, 0x2d, 0x0c, 0xa0, 0xec, 0xa1, 0x08, 0xd6, 0xbd, 0x01, 0x83, 0x72,
	0x2e, 0x8a, 0x06, 0x42, 0x38, 0x6e, 0xa7, 0x88, 0x40, 0x8a, 0x08, 0x61, 0xd0, 0xa0, 0x5f, 0x21,
	0x02, 0xc0, 0x1a, 0xd3, 0x09, 0x35, 0x98, 0x96, 0xf4, 0x12, 0xc5, 0x50, 0x3f, 0x23, 0xac, 0xdb,
	0x19, 0xa8, 0xb1, 0x89, 0x63, 0x39, 0x96, 0x84, 0x14, 0x50, 0x34, 0x92, 0x90, 0x18, 0x7b, 0x41,
	0x8d, 0x2b, 0x00, 0xd5, 0x58, 0x26, 0xc7, 0x8c, 0x46, 0x32, 0x8f, 0x50, 0xc5, 0xd3, 0x4b, 0x24,
	0x2d, 0x66, 0xf2, 0x67, 0x82, 0x13, 0x31, 0x5f, 0x74, 0x02, 0x1e, 0xf6, 0xa1, 0xf6, 0x13, 0x23,
	0x0d, 0x13, 0x1f, 0x08, 0x00, 0x23, 0x0a, 0x7c, 0x8c, 0x21, 0x8e, 0x04, 0xf1, 0x03, 0xa8, 0x3c,
	0x97, 0x46, 0xd2, 0x8e, 0x3e, 0x66, 0x24, 0xa6, 0x2c, 0xf4, 0xa0, 0x6e, 0xf5, 0xfd, 0x89, 0x56,
	0x89, 0x67, 0xc4, 0x89, 0x6e, 0xe5, 0x1e, 0x09, 0x22, 0x14, 0x07, 0xa6, 0x35, 0x36, 0xad, 0x0c,
	0x10, 0x16, 0x85, 0xa1, 0x6e, 0x15, 0x86, 0x43, 0x1c, 0xfb, 0x48, 0xc4, 0x58, 0xa8, 0x56, 0xac,
	0x66, 0xaf, 0xf5, 0x92, 0xab, 0xd3, 0xd4, 0x46, 0x8d, 0xc2, 0x50, 0x8f, 0xc2, 0x8c, 0x00, 0x89,
	0x6b, 0xd3, 0xca, 0x74, 0x6b, 0x00, 0x38, 0xa0, 0x08, 0x9b, 0xd6, 0x00, 0x4d, 0xf2, 0x42, 0x38,
	0xa4, 0x01, 0x8a, 0x63, 0x3d, 0x87, 0xd0, 0xe8, 0x35, 0x6a, 0x55, 0x3e, 0x19, 0x51, 0xd3, 0x2a,
	0x40, 0x82, 0x7c, 0x44, 0x34, 0x2f, 0x10, 0x9a, 0xd6, 0x24, 0x41, 0x82, 0xc5, 0x91, 0x6e, 0x45,
	0x6c, 0x52, 0x02, 0xf0, 0x93, 0x38, 0x16, 0x00, 0xab, 0x7e, 0x20, 0x3c, 0x3d, 0x0a, 0x30, 0x22,
	0x78, 0x10, 0xea, 0x56, 0x09, 0x72, 0xd5, 0xaa, 0x40, 0x1f, 0xd7, 0x72, 0xb9, 0x20, 0x81, 0xf1,
	0xa1, 0x3a, 0x16, 0x01, 0x11, 0x49, 0x9b, 0x10, 0x1d, 0xcb, 0x94, 0x87, 0x13, 0x85, 0x39, 0x89,
	0x17, 0x82, 0x94, 0x87, 0x43, 0x8a, 0x01, 0xd4, 0xcf, 0xd2, 0xbf, 0x29, 0x96, 0x51, 0x53, 0xb6,
	0x31, 0xa8, 0xa3, 0xac, 0x8c, 0x0a, 0x14, 0x2b, 0xff, 0x09, 0x9b, 0x7e, 0x89, 0xa4, 0xfd, 0xa1,
	0xf4, 0x1b, 0x22, 0xfd, 0x55, 0x22, 0xdd, 0xec, 0x16, 0xca, 0x03, 0x85, 0xc6, 0xaa, 0xfe, 0xc7,
	0xd4, 0x37, 0xd5, 0x08, 0x97, 0x1e, 0xe6, 0x1b, 0x6c, 0x41, 0x22, 0xfd, 0x01, 0x50, 0x04, 0xb0,
	0xd6, 0x4d, 0xfa, 0xbe, 0xe2, 0x82, 0x8d, 0x1f, 0x73, 0x80, 0x95, 0xf7, 0x8d, 0xb8, 0x4b, 0x6f,
	0x50, 0x5e, 0x60, 0xe2, 0x40, 0xbd, 0x7f, 0x31, 0x28, 0x63, 0x4a, 0x82, 0x75, 0x14, 0x66, 0x5c,
	0xa2, 0x94, 0x02, 0xec, 0xcb, 0xff, 0x3c, 0x30, 0xd6, 0x3b, 0x08, 0xda, 0x68, 0x0e, 0x70, 0x32,
	0xe7, 0x17, 0x85, 0x98, 0x40, 0xbf, 0xde, 0xb3, 0xb0, 0xe4, 0xe6, 0xe9, 0x79, 0xd6, 0xb6, 0x65,
	0x10, 0x12, 0x48, 0xa4, 0x6d, 0xe5, 0xde, 0xa6, 0xe3, 0x5c, 0xbd, 0xc3, 0xd5, 0x9a, 0x85, 0x72,
	0xdf, 0xf0, 0xb8, 0xd7, 0x1e, 0x77, 0xf2, 0x98, 0xf6, 0x6c, 0xfc, 0xc6, 0x6c, 0x62, 0x71, 0x96,
	0xd9, 0x50, 0x28, 0x77, 0x47, 0xbd, 0x0b, 0xc8, 0x19, 0xa9, 0x7d, 0x52, 0xcd, 0xd0, 0x1b, 0xcd,
	0x90, 0x8f, 0x76, 0x42, 0x28, 0xd7, 0x84, 0xb0, 0x09, 0x34, 0x25, 0x89, 0xde, 0x65, 0xe7, 0x98,
	0x35, 0x61, 0x49, 0x9b, 0x17, 0x8f, 0xcd, 0xfb, 0xec, 0xf5, 0x42, 0x5e, 0x72, 0x8e, 0xeb, 0x45,
	0x64, 0x8a, 0x34, 0xd2, 0xa8, 0x21, 0x11, 0x35, 0x24, 0x52, 0xda, 0x96, 0x88, 0xc9, 0xfc, 0x32,
	0x55, 0x56, 0xe0, 0xd3, 0xd0, 0x48, 0xd1, 0x1e, 0xe8, 0x87, 0xf8, 0xf4, 0x79, 0x46, 0xf8, 0x1c,
	0xe7, 0x19, 0x60, 0x74, 0xba, 0xc4, 0x24, 0x3a, 0x4f, 0x89, 0x8c, 0x4c, 0xb7, 0x6c, 0x43, 0x22,
	0xc6, 0xe4, 0x7c, 0xd0, 0x0a, 0x94, 0x7c, 0x29, 0x95, 0x87, 0x26, 0x73, 0xc0, 0x3a, 0x13, 0x18,
	0xc7, 0x38, 0x19, 0x67, 0xe4, 0xfe, 0x1f, 0x24, 0x67, 0xfd, 0xd2, 0x91, 0x48, 0xc5, 0x26, 0x2a,
	0x83, 0xaf, 0x4c, 0xde, 0x18, 0x60, 0xd2, 0x02, 0x2a, 0x57, 0x02, 0x1e, 0xc3, 0xd4, 0x93, 0x39,
	0x88, 0xc9, 0x24, 0x74, 0x0e, 0xa3, 0xa2, 0x1d, 0x93, 0x71, 0x16, 0xe9, 0xe8, 0xe5, 0x03, 0x26,
	0xb3, 0x1e, 0x99, 0x95, 0xaa, 0xa8, 0x2b, 0x73, 0x1d, 0x13, 0x07, 0x3d, 0xa0, 0x23, 0x7d, 0x9d,
	0x7d, 0xe0, 0x58, 0xef, 0x0c, 0x72, 0xff, 0x04, 0x14, 0x13, 0x0f, 0x78, 0x40, 0xc6, 0x68, 0x34,
	0xce, 0x19, 0xcc, 0x28, 0x95, 0x83, 0x8c, 0x72, 0x88, 0x89, 0x1c, 0x87, 0xc8, 0xf3, 0x82, 0xa7,
	0x72, 0xb8, 0x71, 0x86, 0xa1, 0xc6, 0x4b, 0xae, 0x6a, 0x17, 0xc3, 0x22, 0x90, 0x19, 0x89, 0xf6,
	0x59, 0x15, 0x99, 0x15, 0xb7, 0x71, 0xec, 0xae, 0xa3, 0x77, 0x9d, 0xa1, 0x2d, 0xb0, 0x66, 0x58,
	0xad, 0x91, 0x87, 0x5b, 0xf9, 0x03, 0xc6, 0xcd, 0xfc, 0xb3, 0xce, 0xc0, 0xda, 0x39, 0xe8, 0x02,
	0x32, 0xa8, 0xdc, 0x4b, 0x28, 0x21, 0x6a, 0xd7, 0x22, 0x48, 0x67, 0x97, 0x08, 0x50, 0x5f, 0x66,
	0xfb, 0x12, 0x0b, 0xd4, 0xd7, 0xf3, 0x37, 0x39, 0x2c, 0x0a, 0x12, 0x1a, 0x91, 0x50, 0x40, 0x41,
	0x44, 0x28, 0xa2, 0x20, 0x26, 0x61, 0x0c, 0xbd, 0x24, 0x80, 0x1e, 0x0a, 0x62, 0x28, 0xa8, 0x97,
	0xe0, 0x38, 0x96, 0xfb, 0x6f, 0x04, 0x92, 0x20, 0x44, 0x88, 0x41, 0x41, 0x42, 0x04, 0x00, 0x8f,
	0x68, 0x14, 0x44, 0x38, 0x64, 0x48, 0x9d, 0x52, 0x8e, 0xe7, 0xb0, 0x72, 0x2e, 0x3a, 0x57, 0x1b,
	0x65, 0xb3, 0x88, 0x78, 0xda, 0x6e, 0x0b, 0xda, 0xac, 0x91, 0xf9, 0x4f, 0xb7, 0x0f, 0xc6, 0xd4,
	0x23, 0x0a, 0x47, 0x04, 0xd1, 0xfa, 0x34, 0xe0, 0x89, 0x50, 0xda, 0xc0, 0xc7, 0x0d, 0xdc, 0x06,
	0x02, 0x43, 0x7f, 0x41, 0x0d, 0xc8, 0xa2, 0x1a, 0x48, 0x7b, 0xab, 0x9c, 0x98, 0xa0, 0x80, 0x7a,
	0xf2, 0x9f, 0x94, 0xac, 0xb3, 0xd8, 0x05, 0xe4, 0x7a, 0xed, 0x93, 0xc9, 0x4c, 0xb9, 0x53, 0x56,
	0x5b, 0x61, 0x1c, 0x6a, 0xda, 0xef, 0xd1, 0x4a, 0xb7, 0xce, 0x21, 0xea, 0x5c, 0x0b, 0xd5, 0xd3,
	0xd4, 0x13, 0xa5, 0xe9, 0x03, 0x80, 0x98, 0x13, 0xaa, 0x7f, 0x06, 0x7f, 0x22, 0x31, 0x3d, 0xee,
	0x4f, 0x27, 0xaf, 0xd6, 0x02, 0x32, 0x02, 0xe8, 0x4f, 0xac, 0xac, 0xa7, 0x52, 0x7d, 0x76, 0x0c,
	0x5b, 0xf2, 0x3c, 0xab, 0xb0, 0x75, 0xce, 0x1e, 0xcd, 0x66, 0x78, 0x34, 0xa9, 0x3d, 0x9a, 0x79,
	0xb2, 0x57, 0xe5, 0xab, 0xf8, 0x5c, 0xd6, 0x18, 0x9c, 0xee, 0xcd, 0x0b, 0x65, 0x00, 0x13, 0x27,
	0x77, 0x06, 0xea, 0x93, 0xbb, 0xb4, 0xe6, 0x68, 0xe5, 0xbd, 0xff, 0xbf, 0x3b, 0xd6, 0x53, 0xe1,
	0x3e, 0x20, 0xde, 0x85, 0xc0, 0xfd, 0x28, 0xa6, 0xfa, 0xba, 0x56, 0x14, 0x70, 0x24, 0xa3, 0x61,
	0x33, 0xea, 0x9d, 0x05, 0x3f, 0xf2, 0x2c, 0x30, 0x4f, 0x04, 0x56, 0x2b, 0xe3, 0xe9, 0xbc, 0x5b,
	0x57, 0xb8, 0x08, 0x6a, 0xe1, 0x4b, 0xd5, 0x52, 0x4c, 0x55, 0x20, 0x48, 0x50, 0x3b, 0xf3, 0xd2,
	0x78, 0x5f, 0x30, 0x42, 0xeb, 0x9a, 0x17, 0x85, 0xad, 0xf8, 0xf3, 0xf4, 0x7b, 0xdb, 0x71, 0xdf,
	0x90, 0xdc, 0x3d, 0xc1, 0x00, 0x45, 0x67, 0xde, 0xc5, 0xc0, 0xe4, 0x3e, 0xd6, 0x94, 0x26, 0x4f,
	0x9c, 0xc6, 0x82, 0x98, 0x10, 0x06, 0xe4, 0xde, 0x43, 0x8d, 0xfd, 0xa4, 0x0e, 0x0c, 0x1c, 0xd3,
	0x61, 0x14, 0xed, 0x16, 0xd2, 0xc1, 0x9b, 0x5d, 0x6d, 0x93, 0xeb, 0x2c, 0x67, 0x3d, 0xaa, 0xb7,
	0x81, 0x51, 0xbd, 0x0d, 0xe8, 0xd8, 0xc6, 0x90, 0x44, 0xe5, 0xf9, 0xd4, 0xdc, 0xb4, 0x34, 0x80,
	0x1b, 0x15, 0xb7, 0xd9, 0x35, 0x37, 0x19, 0x2a, 0x66, 0xd4, 0xdc, 0x12, 0xc1, 0x91, 0x4f, 0x7c,
	0x14, 0xf0, 0x80, 0x07, 0x08, 0x03, 0x42, 0x11, 0x40, 0x30, 0x64, 0x1e, 0x60, 0x31, 0x66, 0x71,
	0x44, 0x3c, 0x16, 0x60, 0xcf, 0x87, 0x88, 0x85, 0x5e, 0x42, 0xb9, 0x60, 0x3c, 0xa6, 0x81, 0x8f,
	0xa8, 0x60, 0x01, 0xc6, 0x82, 0xf9, 0x3c, 0xa0, 0x3c, 0xf1, 0x65, 0x26, 0x0a, 0x69, 0x10, 0x91,
	0x28, 0x89, 0x69, 0xe8, 0x7b, 0x01, 0xf6, 0x13, 0x3f, 0xf2, 0xb1, 0x87, 0x65, 0x0a, 0x0b, 0x38,
	0x00, 0x18, 0xb9, 0x6b, 0x8e, 0x1b, 0x8b, 0x41, 0x3f, 0x3f, 0x14, 0xf1, 0xdd, 0xc5, 0x0b, 0xe8,
	0xcb, 0x12, 0xd5, 0xb2, 0x44, 0xb5, 0x2c, 0x51, 0x2d, 0x4b, 0x54, 0xcb, 0x12, 0xd5, 0xb2, 0x44,
	0xb5, 0x2c, 0x51, 0x2d, 0x4b, 0x54, 0xcb, 0x12, 0xd5, 0xb2, 0x44, 0xb5, 0x2c, 0x51, 0x2d, 0x4b,
	0x54, 0xcb, 0x12, 0xd5, 0xb2, 0x44, 0xb5, 0x2c, 0x51, 0x2d, 0x4b, 0x54, 0xcb, 0x12, 0xd5, 0xb2,
	0x44, 0x75, 0xe6, 0x12, 0xd5, 0x91, 0x73, 0xe4, 0xbe, 0x65, 0xdd, 0x38, 0x7e, 0xf1, 0xb0, 0x1c,
	0xe4, 0x59, 0x29, 0x36, 0x9f, 0x7b, 0xb2, 0xf5, 0x0c, 0xba, 0x6c, 0xaf, 0x3c, 0x3e, 0x72, 0x3f,
	0xb0, 0xde, 0xb8, 0x2f, 0x8a, 0x19, 0x37, 0x14, 0xbb, 0x96, 0x55, 0xdf, 0x15, 0xdc, 0x8e, 0xcd,
	0x1d, 0xc5, 0x6b, 0xad, 0x3b, 0x8a, 0xdb, 0xf1, 0x4e, 0x83, 0xc4, 0x7d, 0xd3, 0xea, 0x4c, 0xe3,
	0xa6, 0xc5, 0xba, 0x3f, 0x6e, 0xbd, 0x7a, 0x5f, 0xf4, 0x45, 0x25, 0xb6, 0x8a, 0x2a, 0x4d, 0x1a,
	0x72, 0x5c, 0xeb, 0x85, 0xfa, 0x6f, 0x51, 0x7f, 0x9a, 0x97, 0x0f, 0x95, 0xa4, 0xe7, 0x76, 0x5a,
	0x6d, 0xee, 0x0d, 0xeb, 0xb5, 0xc9, 0xc1, 0x86, 0xed, 0xbb, 0x96, 0xfd, 0x9e, 0xa8, 0xce, 0xac,
	0xfb, 0x1d, 0xeb, 0xe5, 0x16, 0x1b, 0xcd, 0xdd, 0x7e, 0xe7, 0x94, 0x5b, 0x9a, 0xe3, 0xeb, 0x98,
	0xee, 0x6d, 0xeb, 0xb5, 0x06, 0x87, 0xad, 0xbb, 0xdb, 0x23, 0x26, 0xd7, 0xad, 0x55, 0x1e, 0xa6,
	0x66, 0x5e, 0xf2, 0xd1, 0x65, 0xd6, 0x0f, 0x35, 0x68, 0xeb, 0x42, 0xe2, 0x68, 0x40, 0xc7, 0xba,
	0x52, 0xcf, 0xde, 0x8c, 0x1a, 0xbd, 0xbb, 0x3f, 0x6b, 0x7d, 0xa9, 0x31, 0xf4, 0xfe, 0x44, 0x2d,
	0x72, 0xc4, 0xe2, 0xb6, 0x75, 0x7d, 0xb2, 0x4e, 0x69, 0x58, 0x1d, 0x6b, 0x77, 0x5f, 0xb6, 0x5e,
	0x92, 0x2c, 0x79, 0xc5, 0xfb, 0x79, 0xcf, 0x58, 0xd0, 0xbd, 0xad, 0xed, 0x5a, 0x37, 0x1a, 0xb6,
	0xaf, 0x58, 0x5f, 0xcc, 0xf8, 0xbe, 0x28, 0x6f, 0x5c, 0x72, 0x56, 0x6f, 0x3d, 0xb7, 0xa3, 0x5f,
	0xdc, 0x9b, 0xd6, 0x8b, 0xef, 0x89, 0xea, 0x01, 0xef, 0x95, 0xb5, 0xfd, 0x6d, 0xeb, 0xb2, 0xec,
	0x32, 0x22, 0xd5, 0xb3, 0xfb, 0x96, 0x75, 0x6d, 0x44, 0x65, 0xd8, 0xd9, 0xd6, 0xe5, 0x8a, 0xf7,
	0x6a, 0x6e, 0xea, 0xd9, 0xfd, 0x55, 0x65, 0x9b, 0x0f, 0x45, 0xf5, 0x30, 0x8f, 0xcb, 0xbb, 0x87,
	0xbb, 0xa2, 0x2f, 0xa2, 0x2a, 0x2f, 0x6a, 0xce, 0x1d, 0xeb, 0x4a, 0x69, 0x9a, 0x14, 0xf7, 0x17,
	0x76, 0x46, 0xef, 0xf6, 0x96, 0x75, 0xcd, 0xdc, 0xc4, 0xdd, 0x36, 0x17, 0x71, 0x6f, 0xac, 0xa8,
	0x45, 0x7b, 0x7d, 0x43, 0x5f, 0xd4, 0xdd, 0xd8, 0x6a, 0x77, 0xef, 0x4c, 0xd2, 0xbb, 0xbf, 0x64,
	0xbd, 0x39, 0x5d, 0xba, 0xd1, 0xf8, 0x35, 0xeb, 0x99, 0x7d, 0xd5, 0x69, 0xa6, 0x66, 0xde, 0xec,
	0x2f, 0x5b, 0x2f, 0xc6, 0x22, 0xe1, 0xc3, 0x7e, 0x3d, 0xf6, 0xc6, 0x8a, 0x9a, 0xd3, 0x44, 0xab,
	0xfb, 0xc7, 0x97, 0xac, 0x37, 0xde, 0x13, 0xd5, 0xbb, 0x07, 0x22, 0xab, 0x24, 0xff, 0xb4, 0x27,
	0xf1, 0x5d, 0x4f, 0xee, 0x86, 0xf5, 0x6c, 0xa9, 0x5b, 0x0c, 0xfb, 0xfa, 0xf5, 0x1c, 0xa6, 0x66,
	0xaf, 0x59, 0x2f, 0x99, 0xbf, 0x2d, 0xdf, 0xce, 0x06, 0xc3, 0xea, 0x9e, 0xec, 0xbc, 0xb1, 0xea,
	0x5c, 0xba, 0x75, 0x75, 0xe7, 0x78, 0x87, 0xfb, 0x35, 0xab, 0x33, 0x4d, 0xcf, 0x31, 0x0e, 0xd4,
	0x1f, 0x93, 0x1b, 0x35, 0xf5, 0x8b, 0x7d, 0xd3, 0xba, 0x6a, 0xa6, 0xab, 0xc7, 0x19, 0x1b, 0xb4,
	0x1b, 0xdd, 0x6f, 0x5a, 0x6f, 0xec, 0x8a, 0xca, 0xa8, 0x7b, 0xcf, 0x78, 0x78, 0x6d, 0x81, 0x29,
	0xf3, 0xbc, 0xb4, 0xe0, 0x3c, 0x3b, 0xd2, 0x67, 0x4d, 0x2c, 0x59, 0xd1, 0xde, 0x33, 0x8a, 0x23,
	0x6f, 0x5a, 0x9d, 0x69, 0xb2, 0xf5, 0xac, 0xd0, 0x77, 0x6e, 0x5a, 0xd7, 0xc7, 0x21, 0x40, 0x5f,
	0x29, 0xb7, 0xff, 0xf6, 0x19, 0xeb, 0xfa, 0x64, 0x2c, 0xb5, 0xdf, 0xd9, 0x98, 0xbc, 0x7a, 0xbe,
	0x31, 0xe3, 0xa2, 0x77, 0xe7, 0xf6, 0x3c, 0xa4, 0x26, 0x98, 0x7d, 0xf7, 0x8b, 0x4f, 0xb6, 0xfe,
	0xfa, 0x8b, 0xef, 0xff, 0xd9, 0x8a, 0xb5, 0xea, 0x01, 0x60, 0x7f, 0x67, 0xc5, 0x7a, 0xfe, 0x2e,
	0x8f, 0x9d, 0xda, 0x27, 0xff, 0x68, 0xc5, 0xba, 0xce, 0x07, 0x83, 0x7e, 0x1a, 0xa9, 0x8b, 0xea,
	0xdd, 0x5f, 0x2e, 0xf3, 0xcc, 0xfe, 0xed, 0x95, 0xc7, 0x8e, 0x2b, 0x8a, 0x22, 0x2f, 0xdc, 0x4d,
	0xc7, 0xcd, 0x72, 0x67, 0x7c, 0x65, 0xbc, 0xc8, 0x0f, 0xd2, 0x58, 0xc4, 0x4e, 0x9a, 0xd5, 0x17,
	0xc2, 0xdd, 0x35, 0xc7, 0xd5, 0xff, 0xcf, 0xc2, 0xc1, 0x6b, 0x8e, 0xbb, 0x2f, 0xca, 0x92, 0xf7,
	0xc4, 0x9c, 0x03, 0x63, 0x51, 0xf1, 0xb4, 0x5f, 0xba, 0x9b, 0xce, 0x27, 0xce, 0x63, 0xc7, 0xbd,
	0x53, 0x1d, 0x0e, 0xd4, 0x50, 0xf9, 0x7b, 0x43, 0x5f, 0xbc, 0xe7, 0x83, 0xb4, 0x94, 0x0b, 0xd5,
	0x55, 0x0a, 0x6d, 0xbc, 0xab, 0xd4, 0x5a, 0x58, 0x90, 0xd1, 0xd0, 0x45, 0x81, 0xcc, 0x46, 0x74,
	0xcb, 0xfe, 0x20, 0xcf, 0x44, 0x56, 0xc9, 0xe6, 0x63, 0x9f, 0x0e, 0xb0, 0xae, 0xa1, 0xe1, 0x3a,
	0x47, 0xce, 0xa7, 0xce, 0xd1, 0xfb, 0xbf, 0xb1, 0x6a, 0xad, 0x12, 0x00, 0xec, 0xff, 0x5d, 0xb1,
	0x5e, 0xdd, 0xce, 0x2a, 0x51, 0x64, 0xbc, 0xef, 0xec, 0x8a, 0xe2, 0x40, 0x14, 0x8e, 0xd6, 0xe8,
	0x9f, 0xa7, 0x19, 0xf2, 0xef, 0x5a, 0x86, 0x4c, 0xb3, 0x03, 0xde, 0x4f, 0x63, 0x27, 0x7a, 0xc8,
	0xd5, 0x7d, 0xb2, 0xc2, 0x79, 0xfb, 0xce, 0xdb, 0x4e, 0x3f, 0xcf, 0x3f, 0x4b, 0xb3, 0x9e, 0x93,
	0xe4, 0x85, 0x13, 0x8a, 0x5e, 0x9a, 0x65, 0xf2, 0x2d, 0x4f, 0x1c, 0x75, 0x35, 0xa3, 0xa1, 0x3b,
	0x9c, 0x30, 0xef, 0xd3, 0xb2, 0x3b, 0x1f, 0x9b, 0x9f, 0x71, 0x32, 0x2e, 0x04, 0x9e, 0xe7, 0x51,
	0xb0, 0xe8, 0x4a, 0xfc, 0xfa, 0x3f, 0xfc, 0xd3, 0xb7, 0x56, 0xae, 0xb9, 0xd6, 0xe8, 0xf3, 0x1c,
	0xca, 0xcd, 0x4b, 0xb7, 0xed, 0xdc, 0xb2, 0x8f, 0xa7, 0x09, 0xf6, 0x8f, 0x1d, 0x77, 0x93, 0x99,
	0xa9, 0x49, 0x67, 0x6d, 0x3e, 0x62, 0x13, 0xac, 0x22, 0xeb, 0xc5, 0x76, 0xf2, 0x60, 0xbf, 0x3d,
	0x6d, 0xfc, 0x94, 0xdc, 0xa4, 0x73, 0xeb, 0x74, 0x42, 0x23, 0xe4, 0xdb, 0x97, 0xad, 0xe7, 0x1b,
	0x1b, 0xb3, 0x7d, 0xf3, 0xf8, 0xc8, 0xe3, 0x79, 0x4a, 0xe7, 0xad, 0x53, 0xa8, 0x4c, 0x5c, 0xf8,
	0xd3, 0xd5, 0x27, 0x5b, 0xbf, 0xb6, 0xfa, 0xfe, 0xff, 0xac, 0x68, 0x60, 0xff, 0xd7, 0x4c, 0x60,
	0xff, 0xe3, 0x34, 0x60, 0xff, 0x65, 0x0b, 0xd8, 0x51, 0x3e, 0xec, 0xc7, 0x4e, 0x96, 0x57, 0x4e,
	0x3f, 0xe7, 0xf1, 0xd8, 0x17, 0x6f, 0x0d, 0x7a, 0x9b, 0x4e, 0x96, 0x3b, 0x45, 0xfe, 0xa8, 0xd4,
	0xfe, 0x58, 0x0e, 0xfb, 0x95, 0x53, 0x8a, 0xea, 0x9d, 0x06, 0x14, 0x50, 0x1b, 0x58, 0x4f, 0xc9,
	0xec, 0x7c, 0x50, 0x7d, 0xb6, 0x99, 0xb8, 0x94, 0x05, 0x00, 0x79, 0xa7, 0x63, 0x7a, 0x63, 0xd0,
	0x6b, 0xe2, 0xb9, 0x6b, 0xaf, 0x8f, 0xf1, 0xdc, 0x7d, 0x3c, 0xce, 0x21, 0x37, 0x64, 0x96, 0x73,
	0xd4, 0x6a, 0xa9, 0x78, 0xef, 0xc8, 0xfe, 0xc3, 0xcb, 0x2a, 0x3d, 0x6a, 0x64, 0x86, 0x73, 0x82,
	0xe3, 0xd6, 0x89, 0x54, 0x8d, 0x0c, 0xd3, 0xfd, 0xf3, 0x25, 0x3e, 0x2e, 0x0c, 0x3e, 0xb0, 0x0d,
	0x17, 0xc2, 0x47, 0x97, 0x87, 0xa9, 0xfd, 0x27, 0x97, 0x5b, 0xe7, 0x8f, 0x3a, 0x35, 0x9f, 0x13,
	0x28, 0xeb, 0x27, 0x52, 0x4d, 0x9e, 0x0d, 0xdc, 0xbf, 0x58, 0xa2, 0xe5, 0xc2, 0xa0, 0x85, 0xda,
	0xfe, 0x62, 0x68, 0xa9, 0x0f, 0x82, 0xf6, 0x5f, 0x5d, 0x6e, 0x1d, 0x22, 0x27, 0x4f, 0x82, 0x73,
	0x42, 0x87, 0x9c, 0x48, 0x35, 0xeb, 0x78, 0xe9, 0xfe, 0xcd, 0x12, 0x42, 0x17, 0x06, 0x42, 0x77,
	0xec, 0x9f, 0x58, 0x0c, 0x42, 0x93, 0x05, 0x00, 0xfb, 0x3f, 0x57, 0x2d, 0x6b, 0x7c, 0xd8, 0xb7,
	0xbf, 0x34, 0x1d, 0x13, 0xad, 0xfa, 0x40, 0xe7, 0xe6, 0xc9, 0x44, 0x06, 0x27, 0xdf, 0x5e, 0xe2,
	0xe4, 0xc2, 0xe0, 0xe4, 0x05, 0xbb, 0x91, 0x88, 0xdb, 0xff, 0xbe, 0x6a, 0x3d, 0x6b, 0xca, 0x31,
	0xb6, 0x33, 0x75, 0x2d, 0x1b, 0xf5, 0x9c, 0xce, 0x8f, 0x9e, 0x40, 0x61, 0x96, 0xfa, 0xf7, 0x97,
	0x4b, 0x7d, 0x61, 0x96, 0xfa, 0x65, 0xfb, 0xa5, 0x66, 0x48, 0x50, 0x71, 0xc0, 0x1e, 0x5a, 0xaf,
	0x4c, 0x2b, 0x6d, 0xd9, 0xd3, 0xb3, 0x87, 0x59, 0x05, 0xb8, 0xce, 0xc6, 0xbc, 0xe4, 0xe6, 0x60,
	0x94, 0xab, 0x42, 0xe2, 0x44, 0x21, 0x69, 0xda, 0x71, 0x6f, 0x66, 0x59, 0x6c, 0xda, 0x71, 0xef,
	0x84, 0xda, 0x54, 0x6e, 0xd9, 0xc7, 0x6b, 0x3c, 0xd3, 0x04, 0xce, 0xac, 0x42, 0x4d, 0x13, 0x38,
	0xbb, 0x6c, 0x74, 0xf7, 0xdf, 0x56, 0x9e, 0x6c, 0xfd, 0xd6, 0x8a, 0xbd, 0x6d, 0xbd, 0x54, 0xef,
	0x9b, 0xeb, 0x75, 0xf5, 0xc8, 0xed, 0x5a, 0xaf, 0x7f, 0xf7, 0xf7, 0x7e, 0xd3, 0xf9, 0x48, 0xf4,
	0xf8, 0xee, 0x61, 0xe9, 0x7c, 0xb5, 0x88, 0x1e, 0x8a, 0xb2, 0x2a, 0x78, 0x25, 0x3a, 0xaf, 0x94,
	0xc3, 0xc1, 0x20, 0x2f, 0xaa, 0x3b, 0x03, 0xd1, 0xe3, 0xe5, 0x61, 0xb9, 0x51, 0x89, 0xe8, 0x21,
	0x5a, 0x85, 0x1b, 0xe0, 0xe3, 0x9f, 0xb4, 0x7e, 0xc4, 0x7a, 0xf6, 0xfd, 0x5f, 0x78, 0xb0, 0x35,
	0xac, 0x1e, 0xda, 0x2f, 0x5f, 0x59, 0xe9, 0x5c, 0x95, 0x4f, 0x79, 0x91, 0x7e, 0x53, 0xb9, 0x8c,
	0xb3, 0x62, 0xfd, 0xb0, 0x65, 0x6d, 0x0d, 0xd2, 0xaf, 0x88, 0x43, 0x45, 0x72, 0xed, 0xca, 0x4a,
	0xe7, 0xb9, 0xaf, 0xad, 0x6f, 0x7d, 0xb4, 0xbd, 0xfe, 0x15, 0x71, 0xe8, 0xac, 0x84, 0x57, 0xad,
	0xe7, 0xc7, 0x0c, 0xbe, 0x10, 0x5e, 0xb7, 0x5e, 0x6c, 0xd1, 0x7f, 0xa1, 0xf8, 0xd4, 0x7a, 0xe7,
	0x3f, 0xfe, 0xe0, 0x5b, 0x4f, 0x9c, 0xfb, 0x79, 0x34, 0xdc, 0x17, 0x99, 0xfe, 0xe4, 0x43, 0x79,
	0xf6, 0x9f, 0xa2, 0xa9, 0x0d, 0x1e, 0x56, 0xd5, 0xa0, 0xdc, 0xec, 0x76, 0xe3, 0x3c, 0x2a, 0x37,
	0xf2, 0x71, 0xcf, 0x46, 0x53, 0xf5, 0xae, 0xc8, 0xba, 0x7d, 0x5e, 0x89, 0xb2, 0xea, 0x7e, 0xfc,
	0x71, 0x2f, 0xad, 0xfa, 0x3c, 0x54, 0xce, 0x71, 0x4f, 0x1a, 0x29, 0xdb, 0x3d, 0x2c, 0xbb, 0x51,
	0x3f, 0x15, 0x59, 0xd5, 0x4d, 0x8a, 0x6e, 0x94, 0x17, 0x62, 0xbd, 0xac, 0x78, 0xf4, 0x59, 0xb7,
	0xc9, 0xae, 0x97, 0x56, 0xa7, 0x7e, 0x08, 0x64, 0xf8, 0x8c, 0xfa, 0x85, 0xff, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0x8b, 0x8f, 0x05, 0xfd, 0x2f, 0x52, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContractRegistryClient is the client API for ContractRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContractRegistryClient interface {
	// Register a contract
	RegisterContract(ctx context.Context, in *RegisterContractRequest, opts ...grpc.CallOption) (*RegisterContractResponse, error)
	// DeregisterContract remove the name + tag association to a contract artifact (abi, bytecode, deployedBytecode). Artifacts are not deleted.
	DeregisterContract(ctx context.Context, in *DeregisterContractRequest, opts ...grpc.CallOption) (*DeregisterContractResponse, error)
	// DeleteArtifact delete a contract artifact (abi, bytecode, deployedBytecode).
	DeleteArtifact(ctx context.Context, in *DeleteArtifactRequest, opts ...grpc.CallOption) (*DeleteArtifactResponse, error)
	// Retrieve contract
	GetContract(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*GetContractResponse, error)
	// Retrieve contract ABI
	GetContractABI(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*GetContractABIResponse, error)
	// Returns the bytecode
	GetContractBytecode(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*GetContractBytecodeResponse, error)
	// Returns the deployed bytecode
	GetContractDeployedBytecode(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*GetContractDeployedBytecodeResponse, error)
	// Returns a list of all registered contracts
	GetCatalog(ctx context.Context, in *GetCatalogRequest, opts ...grpc.CallOption) (*GetCatalogResponse, error)
	// Returns a list of all tags associated to a contract
	GetTags(ctx context.Context, in *GetTagsRequest, opts ...grpc.CallOption) (*GetTagsResponse, error)
	// Retrieve methods using 4 bytes unique selector
	GetMethodsBySelector(ctx context.Context, in *GetMethodsBySelectorRequest, opts ...grpc.CallOption) (*GetMethodsBySelectorResponse, error)
	// Retrieve events using hash of signature
	GetEventsBySigHash(ctx context.Context, in *GetEventsBySigHashRequest, opts ...grpc.CallOption) (*GetEventsBySigHashResponse, error)
	// Set the codeHash of the given account
	SetAccountCodeHash(ctx context.Context, in *SetAccountCodeHashRequest, opts ...grpc.CallOption) (*SetAccountCodeHashResponse, error)
}

type contractRegistryClient struct {
	cc grpc.ClientConnInterface
}

func NewContractRegistryClient(cc grpc.ClientConnInterface) ContractRegistryClient {
	return &contractRegistryClient{cc}
}

func (c *contractRegistryClient) RegisterContract(ctx context.Context, in *RegisterContractRequest, opts ...grpc.CallOption) (*RegisterContractResponse, error) {
	out := new(RegisterContractResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/RegisterContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) DeregisterContract(ctx context.Context, in *DeregisterContractRequest, opts ...grpc.CallOption) (*DeregisterContractResponse, error) {
	out := new(DeregisterContractResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/DeregisterContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) DeleteArtifact(ctx context.Context, in *DeleteArtifactRequest, opts ...grpc.CallOption) (*DeleteArtifactResponse, error) {
	out := new(DeleteArtifactResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/DeleteArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) GetContract(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*GetContractResponse, error) {
	out := new(GetContractResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/GetContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) GetContractABI(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*GetContractABIResponse, error) {
	out := new(GetContractABIResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/GetContractABI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) GetContractBytecode(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*GetContractBytecodeResponse, error) {
	out := new(GetContractBytecodeResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/GetContractBytecode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) GetContractDeployedBytecode(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*GetContractDeployedBytecodeResponse, error) {
	out := new(GetContractDeployedBytecodeResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/GetContractDeployedBytecode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) GetCatalog(ctx context.Context, in *GetCatalogRequest, opts ...grpc.CallOption) (*GetCatalogResponse, error) {
	out := new(GetCatalogResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/GetCatalog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) GetTags(ctx context.Context, in *GetTagsRequest, opts ...grpc.CallOption) (*GetTagsResponse, error) {
	out := new(GetTagsResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/GetTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) GetMethodsBySelector(ctx context.Context, in *GetMethodsBySelectorRequest, opts ...grpc.CallOption) (*GetMethodsBySelectorResponse, error) {
	out := new(GetMethodsBySelectorResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/GetMethodsBySelector", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) GetEventsBySigHash(ctx context.Context, in *GetEventsBySigHashRequest, opts ...grpc.CallOption) (*GetEventsBySigHashResponse, error) {
	out := new(GetEventsBySigHashResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/GetEventsBySigHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractRegistryClient) SetAccountCodeHash(ctx context.Context, in *SetAccountCodeHashRequest, opts ...grpc.CallOption) (*SetAccountCodeHashResponse, error) {
	out := new(SetAccountCodeHashResponse)
	err := c.cc.Invoke(ctx, "/contractregistry.ContractRegistry/SetAccountCodeHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContractRegistryServer is the server API for ContractRegistry service.
type ContractRegistryServer interface {
	// Register a contract
	RegisterContract(context.Context, *RegisterContractRequest) (*RegisterContractResponse, error)
	// DeregisterContract remove the name + tag association to a contract artifact (abi, bytecode, deployedBytecode). Artifacts are not deleted.
	DeregisterContract(context.Context, *DeregisterContractRequest) (*DeregisterContractResponse, error)
	// DeleteArtifact delete a contract artifact (abi, bytecode, deployedBytecode).
	DeleteArtifact(context.Context, *DeleteArtifactRequest) (*DeleteArtifactResponse, error)
	// Retrieve contract
	GetContract(context.Context, *GetContractRequest) (*GetContractResponse, error)
	// Retrieve contract ABI
	GetContractABI(context.Context, *GetContractRequest) (*GetContractABIResponse, error)
	// Returns the bytecode
	GetContractBytecode(context.Context, *GetContractRequest) (*GetContractBytecodeResponse, error)
	// Returns the deployed bytecode
	GetContractDeployedBytecode(context.Context, *GetContractRequest) (*GetContractDeployedBytecodeResponse, error)
	// Returns a list of all registered contracts
	GetCatalog(context.Context, *GetCatalogRequest) (*GetCatalogResponse, error)
	// Returns a list of all tags associated to a contract
	GetTags(context.Context, *GetTagsRequest) (*GetTagsResponse, error)
	// Retrieve methods using 4 bytes unique selector
	GetMethodsBySelector(context.Context, *GetMethodsBySelectorRequest) (*GetMethodsBySelectorResponse, error)
	// Retrieve events using hash of signature
	GetEventsBySigHash(context.Context, *GetEventsBySigHashRequest) (*GetEventsBySigHashResponse, error)
	// Set the codeHash of the given account
	SetAccountCodeHash(context.Context, *SetAccountCodeHashRequest) (*SetAccountCodeHashResponse, error)
}

// UnimplementedContractRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedContractRegistryServer struct {
}

func (*UnimplementedContractRegistryServer) RegisterContract(ctx context.Context, req *RegisterContractRequest) (*RegisterContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterContract not implemented")
}
func (*UnimplementedContractRegistryServer) DeregisterContract(ctx context.Context, req *DeregisterContractRequest) (*DeregisterContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeregisterContract not implemented")
}
func (*UnimplementedContractRegistryServer) DeleteArtifact(ctx context.Context, req *DeleteArtifactRequest) (*DeleteArtifactResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArtifact not implemented")
}
func (*UnimplementedContractRegistryServer) GetContract(ctx context.Context, req *GetContractRequest) (*GetContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContract not implemented")
}
func (*UnimplementedContractRegistryServer) GetContractABI(ctx context.Context, req *GetContractRequest) (*GetContractABIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractABI not implemented")
}
func (*UnimplementedContractRegistryServer) GetContractBytecode(ctx context.Context, req *GetContractRequest) (*GetContractBytecodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractBytecode not implemented")
}
func (*UnimplementedContractRegistryServer) GetContractDeployedBytecode(ctx context.Context, req *GetContractRequest) (*GetContractDeployedBytecodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractDeployedBytecode not implemented")
}
func (*UnimplementedContractRegistryServer) GetCatalog(ctx context.Context, req *GetCatalogRequest) (*GetCatalogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCatalog not implemented")
}
func (*UnimplementedContractRegistryServer) GetTags(ctx context.Context, req *GetTagsRequest) (*GetTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTags not implemented")
}
func (*UnimplementedContractRegistryServer) GetMethodsBySelector(ctx context.Context, req *GetMethodsBySelectorRequest) (*GetMethodsBySelectorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMethodsBySelector not implemented")
}
func (*UnimplementedContractRegistryServer) GetEventsBySigHash(ctx context.Context, req *GetEventsBySigHashRequest) (*GetEventsBySigHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEventsBySigHash not implemented")
}
func (*UnimplementedContractRegistryServer) SetAccountCodeHash(ctx context.Context, req *SetAccountCodeHashRequest) (*SetAccountCodeHashResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetAccountCodeHash not implemented")
}

func RegisterContractRegistryServer(s *grpc.Server, srv ContractRegistryServer) {
	s.RegisterService(&_ContractRegistry_serviceDesc, srv)
}

func _ContractRegistry_RegisterContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).RegisterContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/RegisterContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).RegisterContract(ctx, req.(*RegisterContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_DeregisterContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeregisterContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).DeregisterContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/DeregisterContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).DeregisterContract(ctx, req.(*DeregisterContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_DeleteArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).DeleteArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/DeleteArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).DeleteArtifact(ctx, req.(*DeleteArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_GetContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).GetContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/GetContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).GetContract(ctx, req.(*GetContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_GetContractABI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).GetContractABI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/GetContractABI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).GetContractABI(ctx, req.(*GetContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_GetContractBytecode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).GetContractBytecode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/GetContractBytecode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).GetContractBytecode(ctx, req.(*GetContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_GetContractDeployedBytecode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).GetContractDeployedBytecode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/GetContractDeployedBytecode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).GetContractDeployedBytecode(ctx, req.(*GetContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_GetCatalog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCatalogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).GetCatalog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/GetCatalog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).GetCatalog(ctx, req.(*GetCatalogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_GetTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).GetTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/GetTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).GetTags(ctx, req.(*GetTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_GetMethodsBySelector_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMethodsBySelectorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).GetMethodsBySelector(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/GetMethodsBySelector",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).GetMethodsBySelector(ctx, req.(*GetMethodsBySelectorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_GetEventsBySigHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventsBySigHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).GetEventsBySigHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/GetEventsBySigHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).GetEventsBySigHash(ctx, req.(*GetEventsBySigHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContractRegistry_SetAccountCodeHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAccountCodeHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractRegistryServer).SetAccountCodeHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contractregistry.ContractRegistry/SetAccountCodeHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractRegistryServer).SetAccountCodeHash(ctx, req.(*SetAccountCodeHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContractRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contractregistry.ContractRegistry",
	HandlerType: (*ContractRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterContract",
			Handler:    _ContractRegistry_RegisterContract_Handler,
		},
		{
			MethodName: "DeregisterContract",
			Handler:    _ContractRegistry_DeregisterContract_Handler,
		},
		{
			MethodName: "DeleteArtifact",
			Handler:    _ContractRegistry_DeleteArtifact_Handler,
		},
		{
			MethodName: "GetContract",
			Handler:    _ContractRegistry_GetContract_Handler,
		},
		{
			MethodName: "GetContractABI",
			Handler:    _ContractRegistry_GetContractABI_Handler,
		},
		{
			MethodName: "GetContractBytecode",
			Handler:    _ContractRegistry_GetContractBytecode_Handler,
		},
		{
			MethodName: "GetContractDeployedBytecode",
			Handler:    _ContractRegistry_GetContractDeployedBytecode_Handler,
		},
		{
			MethodName: "GetCatalog",
			Handler:    _ContractRegistry_GetCatalog_Handler,
		},
		{
			MethodName: "GetTags",
			Handler:    _ContractRegistry_GetTags_Handler,
		},
		{
			MethodName: "GetMethodsBySelector",
			Handler:    _ContractRegistry_GetMethodsBySelector_Handler,
		},
		{
			MethodName: "GetEventsBySigHash",
			Handler:    _ContractRegistry_GetEventsBySigHash_Handler,
		},
		{
			MethodName: "SetAccountCodeHash",
			Handler:    _ContractRegistry_SetAccountCodeHash_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/contract-registry/proto/registry.proto",
}
