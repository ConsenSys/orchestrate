{
  "openapi": "3.0.0",
  "info": {
    "title": "Pegasys Orchestrate REST API",
    "version": "2.5.0",
    "contact": {
      "name": "âœ‰ PegaSys Orchestrate",
      "email": "support@pegasys.tech"
    },
    "description": "# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->"
  },
  "externalDocs": {
    "description": "ðŸ“’ Documentation of PegaSys Orchestrate",
    "url": "https://docs.orchestrate.pegasys.tech/en/latest/"
  },
  "paths": {
    "/chains": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Retrieves a list of all registered chains",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "privateTxManagers"
                    ],
                    "properties": {
                      "chainID": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "listenerBackOffDuration": {
                        "type": "string"
                      },
                      "listenerCurrentBlock": {
                        "type": "string",
                        "example": "0"
                      },
                      "listenerDepth": {
                        "type": "integer"
                      },
                      "listenerExternalTxEnabled": {
                        "type": "boolean"
                      },
                      "listenerStartingBlock": {
                        "type": "string",
                        "example": "0"
                      },
                      "name": {
                        "type": "string"
                      },
                      "privateTxManagers": {
                        "type": "array",
                        "items": {
                          "type": "PrivateTxManagerModel"
                        }
                      },
                      "tenantID": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "urls": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "uuid": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Registers a new chain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "urls"
                ],
                "properties": {
                  "listener": {
                    "type": "object",
                    "properties": {
                      "backOffDuration": {
                        "type": "string"
                      },
                      "depth": {
                        "type": "integer"
                      },
                      "externalTxEnabled": {
                        "type": "boolean"
                      },
                      "fromBlock": {
                        "type": "string"
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "privateTxManager": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "description": "Chain registration request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "privateTxManagers"
                  ],
                  "properties": {
                    "chainID": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "listenerBackOffDuration": {
                      "type": "string"
                    },
                    "listenerCurrentBlock": {
                      "type": "string",
                      "example": "0"
                    },
                    "listenerDepth": {
                      "type": "integer"
                    },
                    "listenerExternalTxEnabled": {
                      "type": "boolean"
                    },
                    "listenerStartingBlock": {
                      "type": "string",
                      "example": "0"
                    },
                    "name": {
                      "type": "string"
                    },
                    "privateTxManagers": {
                      "type": "array",
                      "items": {
                        "type": "PrivateTxManagerModel"
                      }
                    },
                    "tenantID": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      }
    },
    "/chains/{uuid}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Retrieves a chain by ID",
        "parameters": [
          {
            "description": "ID of the chain",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "privateTxManagers"
                  ],
                  "properties": {
                    "chainID": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "listenerBackOffDuration": {
                      "type": "string"
                    },
                    "listenerCurrentBlock": {
                      "type": "string",
                      "example": "0"
                    },
                    "listenerDepth": {
                      "type": "integer"
                    },
                    "listenerExternalTxEnabled": {
                      "type": "boolean"
                    },
                    "listenerStartingBlock": {
                      "type": "string",
                      "example": "0"
                    },
                    "name": {
                      "type": "string"
                    },
                    "privateTxManagers": {
                      "type": "array",
                      "items": {
                        "type": "PrivateTxManagerModel"
                      }
                    },
                    "tenantID": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Chain not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Deletes a chain by ID",
        "parameters": [
          {
            "description": "ID of the chain",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Chain deleted successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Chain not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      },
      "patch": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Updates a chain by ID",
        "parameters": [
          {
            "description": "ID of the chain",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listener": {
                    "type": "object",
                    "properties": {
                      "backOffDuration": {
                        "type": "string"
                      },
                      "currentBlock": {
                        "type": "integer"
                      },
                      "depth": {
                        "type": "integer"
                      },
                      "externalTxEnabled": {
                        "type": "boolean"
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "privateTxManager": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "description": "Chain update request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "privateTxManagers"
                  ],
                  "properties": {
                    "chainID": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "listenerBackOffDuration": {
                      "type": "string"
                    },
                    "listenerCurrentBlock": {
                      "type": "string",
                      "example": "0"
                    },
                    "listenerDepth": {
                      "type": "integer"
                    },
                    "listenerExternalTxEnabled": {
                      "type": "boolean"
                    },
                    "listenerStartingBlock": {
                      "type": "string",
                      "example": "0"
                    },
                    "name": {
                      "type": "string"
                    },
                    "privateTxManagers": {
                      "type": "array",
                      "items": {
                        "type": "PrivateTxManagerModel"
                      }
                    },
                    "tenantID": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "uuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Chain not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      }
    },
    "/faucets": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Retrieves a list of all registered faucet",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "string"
                      },
                      "chainRule": {
                        "type": "string"
                      },
                      "cooldown": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "creditorAccountAddress": {
                        "type": "string"
                      },
                      "maxBalance": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "tenantID": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      },
                      "uuid": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Registers a new faucet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "chainRule",
                  "cooldown",
                  "creditorAccount",
                  "maxBalance",
                  "name"
                ],
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "chainRule": {
                    "type": "string"
                  },
                  "cooldown": {
                    "type": "string"
                  },
                  "creditorAccount": {
                    "type": "string"
                  },
                  "maxBalance": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Faucet registration request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "chainRule": {
                      "type": "string"
                    },
                    "cooldown": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "creditorAccountAddress": {
                      "type": "string"
                    },
                    "maxBalance": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "tenantID": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      }
    },
    "/faucets/candidate": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Retrieve faucet candidate for provided sender and chain",
        "parameters": [
          {
            "description": "chain uuid to calculate faucet candidate",
            "name": "chain_uuid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "hex address of account sender",
            "name": "account",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "cooldown": {
                      "type": "string"
                    },
                    "creditor": {
                      "type": "string"
                    },
                    "maxBalance": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      }
    },
    "/faucets/{uuid}": {
      "get": {
        "summary": "Retrieves a faucet by ID",
        "parameters": [
          {
            "description": "ID of the faucet",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "chainRule": {
                      "type": "string"
                    },
                    "cooldown": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "creditorAccountAddress": {
                      "type": "string"
                    },
                    "maxBalance": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "tenantID": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Faucet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Deletes a faucet by ID",
        "parameters": [
          {
            "description": "ID of the faucet",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Faucet deleted successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Faucet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      },
      "patch": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "summary": "Updates a faucet by ID",
        "parameters": [
          {
            "description": "ID of the faucet",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "string"
                  },
                  "chainRule": {
                    "type": "string"
                  },
                  "cooldown": {
                    "type": "string"
                  },
                  "creditorAccount": {
                    "type": "string"
                  },
                  "maxBalance": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "Faucet update request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "string"
                    },
                    "chainRule": {
                      "type": "string"
                    },
                    "cooldown": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "creditorAccountAddress": {
                      "type": "string"
                    },
                    "maxBalance": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "tenantID": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Chain not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Chain Registry"
        ]
      }
    },
    "/contracts": {
      "get": {
        "summary": "Returns a list of all registered contracts",
        "operationId": "GetCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "names": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "could not load contract (pg: no rows in result set)",
                      "code": 2,
                      "message": "could not load contract (pg: no rows in result set)",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "could not load contract (pg: no rows in result set)",
                          "code": "897024",
                          "component": "contract-registry.pg"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                          }
                        },
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Contract Registry"
        ],
        "security": [
          {
            "JWTAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Register a contract",
        "operationId": "RegisterContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "no contract provided in request",
                      "code": 3,
                      "message": "no contract provided in request",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "no contract provided in request",
                          "code": "270851",
                          "component": "contract-registry-common"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "invalid character '@' looking for beginning of value",
                      "code": 13,
                      "message": "invalid character '@' looking for beginning of value",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "invalid character '@' looking for beginning of value",
                          "code": "1044480",
                          "component": "contract-registry-common"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                          }
                        },
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "contract": {
                    "id": {
                      "name": "SimpleToken",
                      "tag": "v0.0.1"
                    },
                    "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
                    "bytecode": "0x608060405234801561001057600080fd5b506040518060400160405280600b81526020017f53696d706c65546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f53494d0000000000000000000000000000000000000000000000000000000000815250601282600390805190602001906100959291906101a5565b5081516100a99060049060208501906101a5565b506005805460ff191660ff92909216919091179055506100d590503369021e19e0c9bab24000006100da565b610240565b6001600160a01b0382166100ed57600080fd5b6101068160025461018c60201b6108f71790919060201c565b6002556001600160a01b038216600090815260208181526040909120546101369183906108f761018c821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561019e57600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101e657805160ff1916838001178555610213565b82800160010185558215610213579182015b828111156102135782518255916020019190600101906101f8565b5061021f929150610223565b5090565b61023d91905b8082111561021f5760008155600101610229565b90565b6109458061024f6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b41146102a5578063a457c2d7146102ad578063a9059cbb146102e6578063dd62ed3e1461031f576100df565b8063313ce56714610231578063395093511461023957806370a0823114610272576100df565b806323b872dd116100bd57806323b872dd146101c85780632e0f26251461020b5780632ff2e9dc14610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec61035a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561040e565b604080519115158252519081900360200190f35b6101b66104a4565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356104aa565b61021361059a565b6040805160ff9092168252519081900360200190f35b6101b661059f565b6102136105ad565b61019a6004803603604081101561024f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b6565b6101b66004803603602081101561028857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661068b565b6100ec6106b3565b61019a600480360360408110156102c357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610732565b61019a600480360360408110156102fc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610795565b6101b66004803603604081101561033557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff831661043057600080fd5b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602090815260408083203384529091528120546104eb908363ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff851660009081526001602090815260408083203384529091529020556105278484846107f8565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b601281565b69021e19e0c9bab240000081565b60055460ff1690565b600073ffffffffffffffffffffffffffffffffffffffff83166105d857600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6108f716565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b600073ffffffffffffffffffffffffffffffffffffffff831661075457600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6107e316565b60006107a23384846107f8565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6000828211156107f257600080fd5b50900390565b73ffffffffffffffffffffffffffffffffffffffff821661081857600080fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461084e908263ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610890908263ffffffff6108f716565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561090957600080fd5b939250505056fea265627a7a7230582021b9409d39dc5497346129b4f8ae9ad87628e9733e96a78af60101187c5cfd8b64736f6c634300050a0032",
                    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b41146102a5578063a457c2d7146102ad578063a9059cbb146102e6578063dd62ed3e1461031f576100df565b8063313ce56714610231578063395093511461023957806370a0823114610272576100df565b806323b872dd116100bd57806323b872dd146101c85780632e0f26251461020b5780632ff2e9dc14610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec61035a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561040e565b604080519115158252519081900360200190f35b6101b66104a4565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356104aa565b61021361059a565b6040805160ff9092168252519081900360200190f35b6101b661059f565b6102136105ad565b61019a6004803603604081101561024f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b6565b6101b66004803603602081101561028857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661068b565b6100ec6106b3565b61019a600480360360408110156102c357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610732565b61019a600480360360408110156102fc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610795565b6101b66004803603604081101561033557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff831661043057600080fd5b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602090815260408083203384529091528120546104eb908363ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff851660009081526001602090815260408083203384529091529020556105278484846107f8565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b601281565b69021e19e0c9bab240000081565b60055460ff1690565b600073ffffffffffffffffffffffffffffffffffffffff83166105d857600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6108f716565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b600073ffffffffffffffffffffffffffffffffffffffff831661075457600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6107e316565b60006107a23384846107f8565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6000828211156107f257600080fd5b50900390565b73ffffffffffffffffffffffffffffffffffffffff821661081857600080fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461084e908263ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610890908263ffffffff6108f716565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561090957600080fd5b939250505056fea265627a7a7230582021b9409d39dc5497346129b4f8ae9ad87628e9733e96a78af60101187c5cfd8b64736f6c634300050a0032"
                  }
                },
                "properties": {
                  "contract": {
                    "description": "contract payload",
                    "title": "Contract to register",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "A set of fields that identify a contract on a particular chain",
                        "type": "object",
                        "properties": {
                          "registry": {
                            "type": "string",
                            "title": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\""
                          },
                          "name": {
                            "type": "string",
                            "title": "Name of contract\ne.g. \"ERC20\""
                          },
                          "tag": {
                            "type": "string",
                            "title": "Contract tag\ne.g \"v2.1.3\""
                          }
                        }
                      },
                      "abi": {
                        "type": "string",
                        "title": "Contract ABI (optional)"
                      },
                      "bytecode": {
                        "type": "string",
                        "title": "Contract deployment bytecode (optional)"
                      },
                      "methods": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "title": "Signature of the method to call on contract\ne.g \"transfer(address,uint256)\""
                            },
                            "abi": {
                              "type": "string",
                              "title": "ABI of the method (Optional)"
                            }
                          },
                          "title": "Method"
                        },
                        "title": "Methods of the contract"
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "title": "Name of the event to call on contract\ne.g \"Transfer(address, address, uint256)\""
                            },
                            "abi": {
                              "type": "string",
                              "title": "ABI of the method (Optional)"
                            }
                          },
                          "title": "Event"
                        },
                        "title": "Event of the contract"
                      },
                      "deployedBytecode": {
                        "type": "string",
                        "title": "Contract deployed bytecode (optional)"
                      },
                      "constructor": {
                        "title": "Constructor of the contract",
                        "type": "object",
                        "properties": {
                          "signature": {
                            "type": "string",
                            "title": "Signature of the method to call on contract\ne.g \"transfer(address,uint256)\""
                          },
                          "abi": {
                            "type": "string",
                            "title": "ABI of the method (Optional)"
                          }
                        }
                      }
                    }
                  }
                },
                "title": "Register Contract request",
                "required": [
                  "contract"
                ]
              }
            }
          },
          "required": true
        },
        "tags": [
          "Contract Registry"
        ],
        "security": [
          {
            "JWTAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}": {
      "get": {
        "summary": "Retrieve contract",
        "operationId": "GetContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contract": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "A set of fields that identify a contract on a particular chain",
                          "type": "object",
                          "properties": {
                            "registry": {
                              "type": "string",
                              "title": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\""
                            },
                            "name": {
                              "type": "string",
                              "title": "Name of contract\ne.g. \"ERC20\""
                            },
                            "tag": {
                              "type": "string",
                              "title": "Contract tag\ne.g \"v2.1.3\""
                            }
                          }
                        },
                        "abi": {
                          "type": "string",
                          "title": "Contract ABI (optional)"
                        },
                        "bytecode": {
                          "type": "string",
                          "title": "Contract deployment bytecode (optional)"
                        },
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "signature": {
                                "type": "string",
                                "title": "Signature of the method to call on contract\ne.g \"transfer(address,uint256)\""
                              },
                              "abi": {
                                "type": "string",
                                "title": "ABI of the method (Optional)"
                              }
                            },
                            "title": "Method"
                          },
                          "title": "Methods of the contract"
                        },
                        "events": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "signature": {
                                "type": "string",
                                "title": "Name of the event to call on contract\ne.g \"Transfer(address, address, uint256)\""
                              },
                              "abi": {
                                "type": "string",
                                "title": "ABI of the method (Optional)"
                              }
                            },
                            "title": "Event"
                          },
                          "title": "Event of the contract"
                        },
                        "deployedBytecode": {
                          "type": "string",
                          "title": "Contract deployed bytecode (optional)"
                        },
                        "constructor": {
                          "title": "Constructor of the contract",
                          "type": "object",
                          "properties": {
                            "signature": {
                              "type": "string",
                              "title": "Signature of the method to call on contract\ne.g \"transfer(address,uint256)\""
                            },
                            "abi": {
                              "type": "string",
                              "title": "ABI of the method (Optional)"
                            }
                          }
                        }
                      },
                      "title": "Contract holds contract information"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "could not load contract (pg: no rows in result set)",
                      "code": 2,
                      "message": "could not load contract (pg: no rows in result set)",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "could not load contract (pg: no rows in result set)",
                          "code": "897024",
                          "component": "contract-registry.pg"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                          }
                        },
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Contract Registry"
        ],
        "security": [
          {
            "JWTAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}/abi": {
      "get": {
        "summary": "Retrieve contract ABI",
        "operationId": "GetContractABI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "abi": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "could not load contract (pg: no rows in result set)",
                      "code": 2,
                      "message": "could not load contract (pg: no rows in result set)",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "could not load contract (pg: no rows in result set)",
                          "code": "897024",
                          "component": "contract-registry.pg"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                          }
                        },
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Contract Registry"
        ],
        "security": [
          {
            "JWTAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}/bytecode": {
      "get": {
        "summary": "Returns the bytecode",
        "operationId": "GetContractBytecode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bytecode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "could not load contract (pg: no rows in result set)",
                      "code": 2,
                      "message": "could not load contract (pg: no rows in result set)",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "could not load contract (pg: no rows in result set)",
                          "code": "897024",
                          "component": "contract-registry.pg"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                          }
                        },
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Contract Registry"
        ],
        "security": [
          {
            "JWTAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}/deployedBytecode": {
      "get": {
        "summary": "Returns the deployed bytecode",
        "operationId": "GetContractDeployedBytecode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deployedBytecode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "could not load contract (pg: no rows in result set)",
                      "code": 2,
                      "message": "could not load contract (pg: no rows in result set)",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "could not load contract (pg: no rows in result set)",
                          "code": "897024",
                          "component": "contract-registry.pg"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                          }
                        },
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Contract Registry"
        ],
        "security": [
          {
            "JWTAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}/method-signatures": {
      "get": {
        "summary": "Returns a list of all method signatures matching the method name",
        "operationId": "GetMethodSignatures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "signatures": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "could not load contract (pg: no rows in result set)",
                      "code": 2,
                      "message": "could not load contract (pg: no rows in result set)",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "could not load contract (pg: no rows in result set)",
                          "code": "897024",
                          "component": "contract-registry.pg"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                          }
                        },
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "methodName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Contract Registry"
        ],
        "security": [
          {
            "JWTAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/contracts/{name}": {
      "get": {
        "summary": "Returns a list of all tags associated to a contract",
        "operationId": "GetTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {}
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "error": "could not load contract (pg: no rows in result set)",
                      "code": 2,
                      "message": "could not load contract (pg: no rows in result set)",
                      "details": [
                        {
                          "@type": "type.googleapis.com/error.Error",
                          "message": "could not load contract (pg: no rows in result set)",
                          "code": "897024",
                          "component": "contract-registry.pg"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "code": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type_url": {
                            "type": "string",
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                          },
                          "value": {
                            "type": "string",
                            "format": "byte",
                            "description": "Must be a valid serialized protocol buffer of the above specified type."
                          }
                        },
                        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is used to filter contractIds based on their contract name, empty to list all contract names & tags.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "Contract Registry"
        ],
        "security": [
          {
            "JWTAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/jobs": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Get a list of filtered jobs",
        "summary": "Search jobs by provided filters",
        "parameters": [
          {
            "description": "List of transaction hashes",
            "name": "tx_hashes",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Chain UUID",
            "name": "chain_uuid",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Jobs found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "properties": {
                            "gasPricePolicy": {
                              "type": "object",
                              "properties": {
                                "priority": {
                                  "type": "string",
                                  "example": "very-high"
                                },
                                "retryPolicy": {
                                  "type": "object",
                                  "properties": {
                                    "increment": {
                                      "type": "number",
                                      "example": 0.05
                                    },
                                    "interval": {
                                      "type": "string",
                                      "example": "2m"
                                    },
                                    "limit": {
                                      "type": "number",
                                      "example": 0.5
                                    }
                                  }
                                }
                              }
                            },
                            "hasBeenRetried": {
                              "type": "boolean",
                              "example": false
                            },
                            "oneTimeKey": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "chainUUID": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "at": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "message": {
                                "type": "string",
                                "example": "Log message"
                              },
                              "status": {
                                "type": "string",
                                "example": "MINED"
                              }
                            }
                          }
                        },
                        "nextJobUUID": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        },
                        "parentJobUUID": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        },
                        "scheduleUUID": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        },
                        "status": {
                          "type": "string",
                          "example": "MINED"
                        },
                        "tenantID": {
                          "type": "string",
                          "example": "foo"
                        },
                        "transaction": {
                          "type": "object",
                          "properties": {
                            "createdAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "data": {
                              "type": "string",
                              "example": "0xfe378324abcde723"
                            },
                            "enclaveKey": {
                              "type": "string",
                              "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                            },
                            "from": {
                              "type": "string",
                              "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                            },
                            "gas": {
                              "type": "string",
                              "example": "21000"
                            },
                            "gasPrice": {
                              "type": "string",
                              "example": "71500000 (wei)"
                            },
                            "hash": {
                              "type": "string",
                              "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                            },
                            "nonce": {
                              "type": "string",
                              "example": "1"
                            },
                            "privacyGroupID": {
                              "type": "string",
                              "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            },
                            "privateFor": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              ]
                            },
                            "privateFrom": {
                              "type": "string",
                              "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            },
                            "raw": {
                              "type": "string",
                              "example": "0xfe378324abcde723"
                            },
                            "to": {
                              "type": "string",
                              "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "value": {
                              "type": "string",
                              "example": "71500000 (wei)"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "eth://ethereum/transaction"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "uuid": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "gasPricePolicy": {
                                  "type": "object",
                                  "properties": {
                                    "priority": {
                                      "type": "string",
                                      "example": "very-high"
                                    },
                                    "retryPolicy": {
                                      "type": "object",
                                      "properties": {
                                        "increment": {
                                          "type": "number",
                                          "example": 0.05
                                        },
                                        "interval": {
                                          "type": "string",
                                          "example": "2m"
                                        },
                                        "limit": {
                                          "type": "number",
                                          "example": 0.5
                                        }
                                      }
                                    }
                                  }
                                },
                                "hasBeenRetried": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "oneTimeKey": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "gasPricePolicy": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "priority": {
                                          "type": "string",
                                          "example": "very-high"
                                        },
                                        "retryPolicy": {
                                          "type": "object",
                                          "properties": {
                                            "increment": {
                                              "type": "number",
                                              "example": 0.05
                                            },
                                            "interval": {
                                              "type": "string",
                                              "example": "2m"
                                            },
                                            "limit": {
                                              "type": "number",
                                              "example": 0.5
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "retryPolicy": {
                                          "type": "object",
                                          "properties": {
                                            "increment": {
                                              "type": "number",
                                              "example": 0.05
                                            },
                                            "interval": {
                                              "type": "string",
                                              "example": "2m"
                                            },
                                            "limit": {
                                              "type": "number",
                                              "example": 0.5
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "at": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "message": {
                                "type": "string",
                                "example": "Log message"
                              },
                              "status": {
                                "type": "string",
                                "example": "MINED"
                              }
                            }
                          }
                        },
                        "transaction": {
                          "type": "object",
                          "properties": {
                            "createdAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "data": {
                              "type": "string",
                              "example": "0xfe378324abcde723"
                            },
                            "enclaveKey": {
                              "type": "string",
                              "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                            },
                            "from": {
                              "type": "string",
                              "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                            },
                            "gas": {
                              "type": "string",
                              "example": "21000"
                            },
                            "gasPrice": {
                              "type": "string",
                              "example": "71500000 (wei)"
                            },
                            "hash": {
                              "type": "string",
                              "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                            },
                            "nonce": {
                              "type": "string",
                              "example": "1"
                            },
                            "privacyGroupID": {
                              "type": "string",
                              "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            },
                            "privateFor": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              ]
                            },
                            "privateFrom": {
                              "type": "string",
                              "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            },
                            "raw": {
                              "type": "string",
                              "example": "0xfe378324abcde723"
                            },
                            "to": {
                              "type": "string",
                              "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "value": {
                              "type": "string",
                              "example": "71500000 (wei)"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid filter in the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Creates a new job as part of an already created schedule",
        "summary": "Creates a new Job",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "chainUUID",
                      "scheduleUUID",
                      "transaction",
                      "type"
                    ],
                    "properties": {
                      "annotations": {
                        "type": "object",
                        "properties": {
                          "gasPricePolicy": {
                            "type": "object",
                            "properties": {
                              "priority": {
                                "type": "string",
                                "example": "very-high"
                              },
                              "retryPolicy": {
                                "type": "object",
                                "properties": {
                                  "increment": {
                                    "type": "number",
                                    "example": 0.05
                                  },
                                  "interval": {
                                    "type": "string",
                                    "example": "2m"
                                  },
                                  "limit": {
                                    "type": "number",
                                    "example": 0.5
                                  }
                                }
                              }
                            }
                          },
                          "hasBeenRetried": {
                            "type": "boolean",
                            "example": false
                          },
                          "oneTimeKey": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      },
                      "chainUUID": {
                        "type": "string",
                        "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "nextJobUUID": {
                        "type": "string",
                        "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                      },
                      "parentJobUUID": {
                        "type": "string",
                        "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                      },
                      "scheduleUUID": {
                        "type": "string",
                        "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                      },
                      "transaction": {
                        "type": "object",
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "data": {
                            "type": "string",
                            "example": "0xfe378324abcde723"
                          },
                          "enclaveKey": {
                            "type": "string",
                            "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                          },
                          "from": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "gas": {
                            "type": "string",
                            "example": "21000"
                          },
                          "gasPrice": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          },
                          "hash": {
                            "type": "string",
                            "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                          },
                          "nonce": {
                            "type": "string",
                            "example": "1"
                          },
                          "privacyGroupID": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "privateFor": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                              "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            ]
                          },
                          "privateFrom": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "raw": {
                            "type": "string",
                            "example": "0xfe378324abcde723"
                          },
                          "to": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "value": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          }
                        }
                      },
                      "type": {
                        "type": "string",
                        "example": "eth://ethereum/transaction"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "hasBeenRetried": {
                                "type": "boolean",
                                "example": false
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "priority": {
                                        "type": "string",
                                        "example": "very-high"
                                      },
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "transaction": {
                        "type": "object",
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "data": {
                            "type": "string",
                            "example": "0xfe378324abcde723"
                          },
                          "enclaveKey": {
                            "type": "string",
                            "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                          },
                          "from": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "gas": {
                            "type": "string",
                            "example": "21000"
                          },
                          "gasPrice": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          },
                          "hash": {
                            "type": "string",
                            "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                          },
                          "nonce": {
                            "type": "string",
                            "example": "1"
                          },
                          "privacyGroupID": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "privateFor": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                              "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            ]
                          },
                          "privateFrom": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "raw": {
                            "type": "string",
                            "example": "0xfe378324abcde723"
                          },
                          "to": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "value": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "description": "Job creation request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created Job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "type": "object",
                      "properties": {
                        "gasPricePolicy": {
                          "type": "object",
                          "properties": {
                            "priority": {
                              "type": "string",
                              "example": "very-high"
                            },
                            "retryPolicy": {
                              "type": "object",
                              "properties": {
                                "increment": {
                                  "type": "number",
                                  "example": 0.05
                                },
                                "interval": {
                                  "type": "string",
                                  "example": "2m"
                                },
                                "limit": {
                                  "type": "number",
                                  "example": 0.5
                                }
                              }
                            }
                          }
                        },
                        "hasBeenRetried": {
                          "type": "boolean",
                          "example": false
                        },
                        "oneTimeKey": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "chainUUID": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "at": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "message": {
                            "type": "string",
                            "example": "Log message"
                          },
                          "status": {
                            "type": "string",
                            "example": "MINED"
                          }
                        }
                      }
                    },
                    "nextJobUUID": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    },
                    "parentJobUUID": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    },
                    "scheduleUUID": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    },
                    "status": {
                      "type": "string",
                      "example": "MINED"
                    },
                    "tenantID": {
                      "type": "string",
                      "example": "foo"
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "data": {
                          "type": "string",
                          "example": "0xfe378324abcde723"
                        },
                        "enclaveKey": {
                          "type": "string",
                          "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                        },
                        "from": {
                          "type": "string",
                          "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                        },
                        "gas": {
                          "type": "string",
                          "example": "21000"
                        },
                        "gasPrice": {
                          "type": "string",
                          "example": "71500000 (wei)"
                        },
                        "hash": {
                          "type": "string",
                          "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                        },
                        "nonce": {
                          "type": "string",
                          "example": "1"
                        },
                        "privacyGroupID": {
                          "type": "string",
                          "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                        },
                        "privateFor": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                            "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          ]
                        },
                        "privateFrom": {
                          "type": "string",
                          "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                        },
                        "raw": {
                          "type": "string",
                          "example": "0xfe378324abcde723"
                        },
                        "to": {
                          "type": "string",
                          "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "value": {
                          "type": "string",
                          "example": "71500000 (wei)"
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "eth://ethereum/transaction"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable parameters were sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/jobs/{uuid}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Fetch a single job by uuid",
        "summary": "Fetch a job by uuid",
        "parameters": [
          {
            "description": "UUID of the job",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job found",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "object",
                          "properties": {
                            "gasPricePolicy": {
                              "type": "object",
                              "properties": {
                                "priority": {
                                  "type": "string",
                                  "example": "very-high"
                                },
                                "retryPolicy": {
                                  "type": "object",
                                  "properties": {
                                    "increment": {
                                      "type": "number",
                                      "example": 0.05
                                    },
                                    "interval": {
                                      "type": "string",
                                      "example": "2m"
                                    },
                                    "limit": {
                                      "type": "number",
                                      "example": 0.5
                                    }
                                  }
                                }
                              }
                            },
                            "hasBeenRetried": {
                              "type": "boolean",
                              "example": false
                            },
                            "oneTimeKey": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "chainUUID": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "logs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "at": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "message": {
                                "type": "string",
                                "example": "Log message"
                              },
                              "status": {
                                "type": "string",
                                "example": "MINED"
                              }
                            }
                          }
                        },
                        "nextJobUUID": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        },
                        "parentJobUUID": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        },
                        "scheduleUUID": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        },
                        "status": {
                          "type": "string",
                          "example": "MINED"
                        },
                        "tenantID": {
                          "type": "string",
                          "example": "foo"
                        },
                        "transaction": {
                          "type": "object",
                          "properties": {
                            "createdAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "data": {
                              "type": "string",
                              "example": "0xfe378324abcde723"
                            },
                            "enclaveKey": {
                              "type": "string",
                              "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                            },
                            "from": {
                              "type": "string",
                              "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                            },
                            "gas": {
                              "type": "string",
                              "example": "21000"
                            },
                            "gasPrice": {
                              "type": "string",
                              "example": "71500000 (wei)"
                            },
                            "hash": {
                              "type": "string",
                              "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                            },
                            "nonce": {
                              "type": "string",
                              "example": "1"
                            },
                            "privacyGroupID": {
                              "type": "string",
                              "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            },
                            "privateFor": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              ]
                            },
                            "privateFrom": {
                              "type": "string",
                              "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            },
                            "raw": {
                              "type": "string",
                              "example": "0xfe378324abcde723"
                            },
                            "to": {
                              "type": "string",
                              "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "value": {
                              "type": "string",
                              "example": "71500000 (wei)"
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "example": "eth://ethereum/transaction"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "uuid": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "gasPricePolicy": {
                                  "type": "object",
                                  "properties": {
                                    "priority": {
                                      "type": "string",
                                      "example": "very-high"
                                    },
                                    "retryPolicy": {
                                      "type": "object",
                                      "properties": {
                                        "increment": {
                                          "type": "number",
                                          "example": 0.05
                                        },
                                        "interval": {
                                          "type": "string",
                                          "example": "2m"
                                        },
                                        "limit": {
                                          "type": "number",
                                          "example": 0.5
                                        }
                                      }
                                    }
                                  }
                                },
                                "hasBeenRetried": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "oneTimeKey": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "gasPricePolicy": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "priority": {
                                          "type": "string",
                                          "example": "very-high"
                                        },
                                        "retryPolicy": {
                                          "type": "object",
                                          "properties": {
                                            "increment": {
                                              "type": "number",
                                              "example": 0.05
                                            },
                                            "interval": {
                                              "type": "string",
                                              "example": "2m"
                                            },
                                            "limit": {
                                              "type": "number",
                                              "example": 0.5
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "retryPolicy": {
                                          "type": "object",
                                          "properties": {
                                            "increment": {
                                              "type": "number",
                                              "example": 0.05
                                            },
                                            "interval": {
                                              "type": "string",
                                              "example": "2m"
                                            },
                                            "limit": {
                                              "type": "number",
                                              "example": 0.5
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      },
      "patch": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Update a specific job by UUID\nWARNING: Reserved for advanced users. Orchestrate does not recommend using this endpoint.",
        "summary": "Update job by UUID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "type": "object",
                        "properties": {
                          "gasPricePolicy": {
                            "type": "object",
                            "properties": {
                              "priority": {
                                "type": "string",
                                "example": "very-high"
                              },
                              "retryPolicy": {
                                "type": "object",
                                "properties": {
                                  "increment": {
                                    "type": "number",
                                    "example": 0.05
                                  },
                                  "interval": {
                                    "type": "string",
                                    "example": "2m"
                                  },
                                  "limit": {
                                    "type": "number",
                                    "example": 0.5
                                  }
                                }
                              }
                            }
                          },
                          "hasBeenRetried": {
                            "type": "boolean",
                            "example": false
                          },
                          "oneTimeKey": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "message": {
                        "type": "string",
                        "example": "Update message"
                      },
                      "status": {
                        "type": "string",
                        "example": "MINED"
                      },
                      "transaction": {
                        "type": "object",
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "data": {
                            "type": "string",
                            "example": "0xfe378324abcde723"
                          },
                          "enclaveKey": {
                            "type": "string",
                            "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                          },
                          "from": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "gas": {
                            "type": "string",
                            "example": "21000"
                          },
                          "gasPrice": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          },
                          "hash": {
                            "type": "string",
                            "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                          },
                          "nonce": {
                            "type": "string",
                            "example": "1"
                          },
                          "privacyGroupID": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "privateFor": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                              "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            ]
                          },
                          "privateFrom": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "raw": {
                            "type": "string",
                            "example": "0xfe378324abcde723"
                          },
                          "to": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "value": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "hasBeenRetried": {
                                "type": "boolean",
                                "example": false
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "priority": {
                                        "type": "string",
                                        "example": "very-high"
                                      },
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "transaction": {
                        "type": "object",
                        "properties": {
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "data": {
                            "type": "string",
                            "example": "0xfe378324abcde723"
                          },
                          "enclaveKey": {
                            "type": "string",
                            "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                          },
                          "from": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "gas": {
                            "type": "string",
                            "example": "21000"
                          },
                          "gasPrice": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          },
                          "hash": {
                            "type": "string",
                            "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                          },
                          "nonce": {
                            "type": "string",
                            "example": "1"
                          },
                          "privacyGroupID": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "privateFor": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                              "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            ]
                          },
                          "privateFrom": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "raw": {
                            "type": "string",
                            "example": "0xfe378324abcde723"
                          },
                          "to": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "value": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "description": "Job update request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Job found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "type": "object",
                      "properties": {
                        "gasPricePolicy": {
                          "type": "object",
                          "properties": {
                            "priority": {
                              "type": "string",
                              "example": "very-high"
                            },
                            "retryPolicy": {
                              "type": "object",
                              "properties": {
                                "increment": {
                                  "type": "number",
                                  "example": 0.05
                                },
                                "interval": {
                                  "type": "string",
                                  "example": "2m"
                                },
                                "limit": {
                                  "type": "number",
                                  "example": 0.5
                                }
                              }
                            }
                          }
                        },
                        "hasBeenRetried": {
                          "type": "boolean",
                          "example": false
                        },
                        "oneTimeKey": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "chainUUID": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "at": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "message": {
                            "type": "string",
                            "example": "Log message"
                          },
                          "status": {
                            "type": "string",
                            "example": "MINED"
                          }
                        }
                      }
                    },
                    "nextJobUUID": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    },
                    "parentJobUUID": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    },
                    "scheduleUUID": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    },
                    "status": {
                      "type": "string",
                      "example": "MINED"
                    },
                    "tenantID": {
                      "type": "string",
                      "example": "foo"
                    },
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "data": {
                          "type": "string",
                          "example": "0xfe378324abcde723"
                        },
                        "enclaveKey": {
                          "type": "string",
                          "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                        },
                        "from": {
                          "type": "string",
                          "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                        },
                        "gas": {
                          "type": "string",
                          "example": "21000"
                        },
                        "gasPrice": {
                          "type": "string",
                          "example": "71500000 (wei)"
                        },
                        "hash": {
                          "type": "string",
                          "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                        },
                        "nonce": {
                          "type": "string",
                          "example": "1"
                        },
                        "privacyGroupID": {
                          "type": "string",
                          "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                        },
                        "privateFor": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                            "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          ]
                        },
                        "privateFrom": {
                          "type": "string",
                          "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                        },
                        "raw": {
                          "type": "string",
                          "example": "0xfe378324abcde723"
                        },
                        "to": {
                          "type": "string",
                          "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "value": {
                          "type": "string",
                          "example": "71500000 (wei)"
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "example": "eth://ethereum/transaction"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Job in invalid state for the given status update",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/jobs/{uuid}/resent": {
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Resend transaction of specific job by UUID, effectively executing the re-sending of transaction asynchronously",
        "summary": "Resend Job transaction by UUID",
        "parameters": [
          {
            "description": "UUID of the job",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/jobs/{uuid}/start": {
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Starts a specific job by UUID, effectively executing the transaction asynchronously",
        "summary": "Start a Job by UUID",
        "parameters": [
          {
            "description": "UUID of the job",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": ""
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/schedules": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Get all schedules",
        "summary": "Get all schedules",
        "responses": {
          "200": {
            "description": "List of schedules found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "type": "string",
                        "example": "2020-07-09T12:35:42.115395Z"
                      },
                      "jobs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "type": "object",
                              "properties": {
                                "gasPricePolicy": {
                                  "type": "object",
                                  "properties": {
                                    "priority": {
                                      "type": "string",
                                      "example": "very-high"
                                    },
                                    "retryPolicy": {
                                      "type": "object",
                                      "properties": {
                                        "increment": {
                                          "type": "number",
                                          "example": 0.05
                                        },
                                        "interval": {
                                          "type": "string",
                                          "example": "2m"
                                        },
                                        "limit": {
                                          "type": "number",
                                          "example": 0.5
                                        }
                                      }
                                    }
                                  }
                                },
                                "hasBeenRetried": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "oneTimeKey": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            "chainUUID": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "labels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "logs": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "at": {
                                    "type": "string",
                                    "example": "2020-07-09T12:35:42.115395Z"
                                  },
                                  "message": {
                                    "type": "string",
                                    "example": "Log message"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "MINED"
                                  }
                                }
                              }
                            },
                            "nextJobUUID": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            },
                            "parentJobUUID": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            },
                            "scheduleUUID": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            },
                            "status": {
                              "type": "string",
                              "example": "MINED"
                            },
                            "tenantID": {
                              "type": "string",
                              "example": "foo"
                            },
                            "transaction": {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "data": {
                                  "type": "string",
                                  "example": "0xfe378324abcde723"
                                },
                                "enclaveKey": {
                                  "type": "string",
                                  "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                                },
                                "from": {
                                  "type": "string",
                                  "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                                },
                                "gas": {
                                  "type": "string",
                                  "example": "21000"
                                },
                                "gasPrice": {
                                  "type": "string",
                                  "example": "71500000 (wei)"
                                },
                                "hash": {
                                  "type": "string",
                                  "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                                },
                                "nonce": {
                                  "type": "string",
                                  "example": "1"
                                },
                                "privacyGroupID": {
                                  "type": "string",
                                  "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                },
                                "privateFor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                    "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                  ]
                                },
                                "privateFrom": {
                                  "type": "string",
                                  "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                },
                                "raw": {
                                  "type": "string",
                                  "example": "0xfe378324abcde723"
                                },
                                "to": {
                                  "type": "string",
                                  "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "71500000 (wei)"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "example": "eth://ethereum/transaction"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "uuid": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            }
                          }
                        }
                      },
                      "tenantID": {
                        "type": "string",
                        "example": "tenant_id"
                      },
                      "uuid": {
                        "type": "string",
                        "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Creates a new schedule",
        "summary": "Creates a new Schedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          },
          "description": "Schedule creation request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created schedule",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "createdAt": {
                          "type": "string",
                          "example": "2020-07-09T12:35:42.115395Z"
                        },
                        "jobs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "object",
                                "properties": {
                                  "gasPricePolicy": {
                                    "type": "object",
                                    "properties": {
                                      "priority": {
                                        "type": "string",
                                        "example": "very-high"
                                      },
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "hasBeenRetried": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "oneTimeKey": {
                                    "type": "boolean",
                                    "example": true
                                  }
                                }
                              },
                              "chainUUID": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "labels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "at": {
                                      "type": "string",
                                      "example": "2020-07-09T12:35:42.115395Z"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "Log message"
                                    },
                                    "status": {
                                      "type": "string",
                                      "example": "MINED"
                                    }
                                  }
                                }
                              },
                              "nextJobUUID": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              },
                              "parentJobUUID": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              },
                              "scheduleUUID": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              },
                              "status": {
                                "type": "string",
                                "example": "MINED"
                              },
                              "tenantID": {
                                "type": "string",
                                "example": "foo"
                              },
                              "transaction": {
                                "type": "object",
                                "properties": {
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-07-09T12:35:42.115395Z"
                                  },
                                  "data": {
                                    "type": "string",
                                    "example": "0xfe378324abcde723"
                                  },
                                  "enclaveKey": {
                                    "type": "string",
                                    "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                                  },
                                  "from": {
                                    "type": "string",
                                    "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                                  },
                                  "gas": {
                                    "type": "string",
                                    "example": "21000"
                                  },
                                  "gasPrice": {
                                    "type": "string",
                                    "example": "71500000 (wei)"
                                  },
                                  "hash": {
                                    "type": "string",
                                    "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                                  },
                                  "nonce": {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  "privacyGroupID": {
                                    "type": "string",
                                    "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                  },
                                  "privateFor": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                      "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                    ]
                                  },
                                  "privateFrom": {
                                    "type": "string",
                                    "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                  },
                                  "raw": {
                                    "type": "string",
                                    "example": "0xfe378324abcde723"
                                  },
                                  "to": {
                                    "type": "string",
                                    "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2020-07-09T12:35:42.115395Z"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "71500000 (wei)"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "example": "eth://ethereum/transaction"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "uuid": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              }
                            }
                          }
                        },
                        "tenantID": {
                          "type": "string",
                          "example": "tenant_id"
                        },
                        "uuid": {
                          "type": "string",
                          "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "jobs": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "annotations": {
                                "type": "object",
                                "properties": {
                                  "gasPricePolicy": {
                                    "type": "object",
                                    "properties": {
                                      "priority": {
                                        "type": "string",
                                        "example": "very-high"
                                      },
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "hasBeenRetried": {
                                    "type": "boolean",
                                    "example": false
                                  },
                                  "oneTimeKey": {
                                    "type": "boolean",
                                    "example": true
                                  }
                                }
                              },
                              "chainUUID": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "labels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "logs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "at": {
                                      "type": "string",
                                      "example": "2020-07-09T12:35:42.115395Z"
                                    },
                                    "message": {
                                      "type": "string",
                                      "example": "Log message"
                                    },
                                    "status": {
                                      "type": "string",
                                      "example": "MINED"
                                    }
                                  }
                                }
                              },
                              "nextJobUUID": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              },
                              "parentJobUUID": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              },
                              "scheduleUUID": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              },
                              "status": {
                                "type": "string",
                                "example": "MINED"
                              },
                              "tenantID": {
                                "type": "string",
                                "example": "foo"
                              },
                              "transaction": {
                                "type": "object",
                                "properties": {
                                  "createdAt": {
                                    "type": "string",
                                    "example": "2020-07-09T12:35:42.115395Z"
                                  },
                                  "data": {
                                    "type": "string",
                                    "example": "0xfe378324abcde723"
                                  },
                                  "enclaveKey": {
                                    "type": "string",
                                    "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                                  },
                                  "from": {
                                    "type": "string",
                                    "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                                  },
                                  "gas": {
                                    "type": "string",
                                    "example": "21000"
                                  },
                                  "gasPrice": {
                                    "type": "string",
                                    "example": "71500000 (wei)"
                                  },
                                  "hash": {
                                    "type": "string",
                                    "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                                  },
                                  "nonce": {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  "privacyGroupID": {
                                    "type": "string",
                                    "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                  },
                                  "privateFor": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                      "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                    ]
                                  },
                                  "privateFrom": {
                                    "type": "string",
                                    "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                  },
                                  "raw": {
                                    "type": "string",
                                    "example": "0xfe378324abcde723"
                                  },
                                  "to": {
                                    "type": "string",
                                    "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "example": "2020-07-09T12:35:42.115395Z"
                                  },
                                  "value": {
                                    "type": "string",
                                    "example": "71500000 (wei)"
                                  }
                                }
                              },
                              "type": {
                                "type": "string",
                                "example": "eth://ethereum/transaction"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "uuid": {
                                "type": "string",
                                "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable parameters were sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/schedules/{uuid}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Fetch a single schedule by uuid",
        "summary": "Fetch a schedule by uuid",
        "parameters": [
          {
            "description": "UUID of the schedule",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Schedule found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "hasBeenRetried": {
                                "type": "boolean",
                                "example": false
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          "chainUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "logs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "at": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Log message"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "MINED"
                                }
                              }
                            }
                          },
                          "nextJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "parentJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "scheduleUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "status": {
                            "type": "string",
                            "example": "MINED"
                          },
                          "tenantID": {
                            "type": "string",
                            "example": "foo"
                          },
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "data": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "enclaveKey": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "hash": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "nonce": {
                                "type": "string",
                                "example": "1"
                              },
                              "privacyGroupID": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "privateFor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                  "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                ]
                              },
                              "privateFrom": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "raw": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "to": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "eth://ethereum/transaction"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          }
                        }
                      }
                    },
                    "tenantID": {
                      "type": "string",
                      "example": "tenant_id"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Schedule not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/transactions": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Get a list of filtered transaction requests",
        "summary": "Search transaction requests by provided filters",
        "parameters": [
          {
            "description": "List of idempotency keys",
            "name": "idempotency_keys",
            "in": "query",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of transaction requests found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "chain": {
                        "type": "string",
                        "example": "myChain"
                      },
                      "createdAt": {
                        "type": "string",
                        "example": "2020-07-09T12:35:42.115395Z"
                      },
                      "idempotencyKey": {
                        "type": "string",
                        "example": "myIdempotencyKey"
                      },
                      "jobs": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "type": "object",
                              "properties": {
                                "gasPricePolicy": {
                                  "type": "object",
                                  "properties": {
                                    "priority": {
                                      "type": "string",
                                      "example": "very-high"
                                    },
                                    "retryPolicy": {
                                      "type": "object",
                                      "properties": {
                                        "increment": {
                                          "type": "number",
                                          "example": 0.05
                                        },
                                        "interval": {
                                          "type": "string",
                                          "example": "2m"
                                        },
                                        "limit": {
                                          "type": "number",
                                          "example": 0.5
                                        }
                                      }
                                    }
                                  }
                                },
                                "hasBeenRetried": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "oneTimeKey": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            "chainUUID": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            },
                            "createdAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "labels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "logs": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "at": {
                                    "type": "string",
                                    "example": "2020-07-09T12:35:42.115395Z"
                                  },
                                  "message": {
                                    "type": "string",
                                    "example": "Log message"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "MINED"
                                  }
                                }
                              }
                            },
                            "nextJobUUID": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            },
                            "parentJobUUID": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            },
                            "scheduleUUID": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            },
                            "status": {
                              "type": "string",
                              "example": "MINED"
                            },
                            "tenantID": {
                              "type": "string",
                              "example": "foo"
                            },
                            "transaction": {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "data": {
                                  "type": "string",
                                  "example": "0xfe378324abcde723"
                                },
                                "enclaveKey": {
                                  "type": "string",
                                  "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                                },
                                "from": {
                                  "type": "string",
                                  "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                                },
                                "gas": {
                                  "type": "string",
                                  "example": "21000"
                                },
                                "gasPrice": {
                                  "type": "string",
                                  "example": "71500000 (wei)"
                                },
                                "hash": {
                                  "type": "string",
                                  "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                                },
                                "nonce": {
                                  "type": "string",
                                  "example": "1"
                                },
                                "privacyGroupID": {
                                  "type": "string",
                                  "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                },
                                "privateFor": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                    "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                  ]
                                },
                                "privateFrom": {
                                  "type": "string",
                                  "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                },
                                "raw": {
                                  "type": "string",
                                  "example": "0xfe378324abcde723"
                                },
                                "to": {
                                  "type": "string",
                                  "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                                },
                                "updatedAt": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "71500000 (wei)"
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "example": "eth://ethereum/transaction"
                            },
                            "updatedAt": {
                              "type": "string",
                              "example": "2020-07-09T12:35:42.115395Z"
                            },
                            "uuid": {
                              "type": "string",
                              "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                            }
                          }
                        }
                      },
                      "params": {
                        "type": "string"
                      },
                      "uuid": {
                        "type": "string",
                        "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid filter in the request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/transactions/deploy-contract": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Creates and executes a new contract deployment request\nThe transaction can be private (Tessera, Orion).\nThe transaction can be a One Time Key transaction in 0 gas private networks",
        "summary": "Creates and sends a new contract deployment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "chain",
                      "params"
                    ],
                    "properties": {
                      "chain": {
                        "type": "string",
                        "example": "myChain"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "params": {
                        "type": "object",
                        "required": [
                          "contractName"
                        ],
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "contractName": {
                            "type": "string",
                            "example": "MyContract"
                          },
                          "contractTag": {
                            "type": "string",
                            "example": "v1.1.0"
                          },
                          "from": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "gas": {
                            "type": "string",
                            "example": "21000"
                          },
                          "gasPrice": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          },
                          "gasPricePolicy": {
                            "type": "object",
                            "properties": {
                              "priority": {
                                "type": "string",
                                "example": "very-high"
                              },
                              "retryPolicy": {
                                "type": "object",
                                "properties": {
                                  "increment": {
                                    "type": "number",
                                    "example": 0.05
                                  },
                                  "interval": {
                                    "type": "string",
                                    "example": "2m"
                                  },
                                  "limit": {
                                    "type": "number",
                                    "example": 0.5
                                  }
                                }
                              }
                            }
                          },
                          "oneTimeKey": {
                            "type": "boolean",
                            "example": true
                          },
                          "privacyGroupId": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "privateFor": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                              "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            ]
                          },
                          "privateFrom": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "protocol": {
                            "type": "string",
                            "example": "Tessera"
                          },
                          "value": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "params": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "contractName"
                            ],
                            "properties": {
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "contractName": {
                                "type": "string",
                                "example": "MyContract"
                              },
                              "contractTag": {
                                "type": "string",
                                "example": "v1.1.0"
                              },
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              },
                              "privacyGroupId": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "privateFor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                  "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                ]
                              },
                              "privateFrom": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "protocol": {
                                "type": "string",
                                "example": "Tessera"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "priority": {
                                        "type": "string",
                                        "example": "very-high"
                                      },
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "description": "Deployment transaction request",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Created deployment transaction request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chain": {
                      "type": "string",
                      "example": "myChain"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "idempotencyKey": {
                      "type": "string",
                      "example": "myIdempotencyKey"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "hasBeenRetried": {
                                "type": "boolean",
                                "example": false
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          "chainUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "logs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "at": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Log message"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "MINED"
                                }
                              }
                            }
                          },
                          "nextJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "parentJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "scheduleUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "status": {
                            "type": "string",
                            "example": "MINED"
                          },
                          "tenantID": {
                            "type": "string",
                            "example": "foo"
                          },
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "data": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "enclaveKey": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "hash": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "nonce": {
                                "type": "string",
                                "example": "1"
                              },
                              "privacyGroupID": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "privateFor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                  "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                ]
                              },
                              "privateFrom": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "raw": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "to": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "eth://ethereum/transaction"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          }
                        }
                      }
                    },
                    "params": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Already existing transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable parameters were sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/transactions/send": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Creates and executes a new smart contract transaction request\nThe transaction can be private (Tessera, Orion).\nThe transaction can be a One Time Key transaction in 0 gas private networks",
        "summary": "Creates and sends a new contract transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "chain",
                      "params"
                    ],
                    "properties": {
                      "chain": {
                        "type": "string",
                        "example": "myChain"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "params": {
                        "type": "object",
                        "required": [
                          "methodSignature",
                          "to"
                        ],
                        "properties": {
                          "args": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "from": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "gas": {
                            "type": "string",
                            "example": "21000"
                          },
                          "gasPrice": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          },
                          "gasPricePolicy": {
                            "type": "object",
                            "properties": {
                              "priority": {
                                "type": "string",
                                "example": "very-high"
                              },
                              "retryPolicy": {
                                "type": "object",
                                "properties": {
                                  "increment": {
                                    "type": "number",
                                    "example": 0.05
                                  },
                                  "interval": {
                                    "type": "string",
                                    "example": "2m"
                                  },
                                  "limit": {
                                    "type": "number",
                                    "example": 0.5
                                  }
                                }
                              }
                            }
                          },
                          "methodSignature": {
                            "type": "string",
                            "example": "transfer(address,uint256)"
                          },
                          "oneTimeKey": {
                            "type": "boolean",
                            "example": true
                          },
                          "privacyGroupId": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "privateFor": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                              "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                            ]
                          },
                          "privateFrom": {
                            "type": "string",
                            "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                          },
                          "protocol": {
                            "type": "string",
                            "example": "Tessera"
                          },
                          "to": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "value": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "params": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "methodSignature",
                              "to"
                            ],
                            "properties": {
                              "args": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "methodSignature": {
                                "type": "string",
                                "example": "transfer(address,uint256)"
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              },
                              "privacyGroupId": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "privateFor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                  "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                ]
                              },
                              "privateFrom": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "protocol": {
                                "type": "string",
                                "example": "Tessera"
                              },
                              "to": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "priority": {
                                        "type": "string",
                                        "example": "very-high"
                                      },
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "description": "Contract transaction request",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Created contract transaction request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chain": {
                      "type": "string",
                      "example": "myChain"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "idempotencyKey": {
                      "type": "string",
                      "example": "myIdempotencyKey"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "hasBeenRetried": {
                                "type": "boolean",
                                "example": false
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          "chainUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "logs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "at": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Log message"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "MINED"
                                }
                              }
                            }
                          },
                          "nextJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "parentJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "scheduleUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "status": {
                            "type": "string",
                            "example": "MINED"
                          },
                          "tenantID": {
                            "type": "string",
                            "example": "foo"
                          },
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "data": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "enclaveKey": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "hash": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "nonce": {
                                "type": "string",
                                "example": "1"
                              },
                              "privacyGroupID": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "privateFor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                  "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                ]
                              },
                              "privateFrom": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "raw": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "to": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "eth://ethereum/transaction"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          }
                        }
                      }
                    },
                    "params": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Already existing transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable parameters were sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/transactions/send-raw": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Creates and executes a new raw transaction request",
        "summary": "Creates and sends a raw transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "chain",
                      "params"
                    ],
                    "properties": {
                      "chain": {
                        "type": "string",
                        "example": "myChain"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "params": {
                        "type": "object",
                        "required": [
                          "raw"
                        ],
                        "properties": {
                          "raw": {
                            "type": "string",
                            "example": "0xfe378324abcde723..."
                          },
                          "retryPolicy": {
                            "type": "object",
                            "properties": {
                              "interval": {
                                "type": "string",
                                "example": "2m"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "params": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "raw"
                            ],
                            "properties": {
                              "raw": {
                                "type": "string",
                                "example": "0xfe378324abcde723..."
                              },
                              "retryPolicy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "string",
                                    "example": "2m"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "retryPolicy": {
                                "type": "object",
                                "properties": {
                                  "interval": {
                                    "type": "string",
                                    "example": "2m"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "description": "Raw transaction request",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Created raw transaction request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chain": {
                      "type": "string",
                      "example": "myChain"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "idempotencyKey": {
                      "type": "string",
                      "example": "myIdempotencyKey"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "hasBeenRetried": {
                                "type": "boolean",
                                "example": false
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          "chainUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "logs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "at": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Log message"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "MINED"
                                }
                              }
                            }
                          },
                          "nextJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "parentJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "scheduleUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "status": {
                            "type": "string",
                            "example": "MINED"
                          },
                          "tenantID": {
                            "type": "string",
                            "example": "foo"
                          },
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "data": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "enclaveKey": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "hash": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "nonce": {
                                "type": "string",
                                "example": "1"
                              },
                              "privacyGroupID": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "privateFor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                  "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                ]
                              },
                              "privateFrom": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "raw": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "to": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "eth://ethereum/transaction"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          }
                        }
                      }
                    },
                    "params": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Already existing transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable parameters were sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/transactions/transfer": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Creates and executes a new transfer request",
        "summary": "Creates and sends a transfer transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "required": [
                      "chain",
                      "params"
                    ],
                    "properties": {
                      "chain": {
                        "type": "string",
                        "example": "myChain"
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "params": {
                        "type": "object",
                        "required": [
                          "from",
                          "to",
                          "value"
                        ],
                        "properties": {
                          "from": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "gas": {
                            "type": "string",
                            "example": "21000"
                          },
                          "gasPrice": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          },
                          "gasPricePolicy": {
                            "type": "object",
                            "properties": {
                              "priority": {
                                "type": "string",
                                "example": "very-high"
                              },
                              "retryPolicy": {
                                "type": "object",
                                "properties": {
                                  "increment": {
                                    "type": "number",
                                    "example": 0.05
                                  },
                                  "interval": {
                                    "type": "string",
                                    "example": "2m"
                                  },
                                  "limit": {
                                    "type": "number",
                                    "example": 0.5
                                  }
                                }
                              }
                            }
                          },
                          "to": {
                            "type": "string",
                            "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                          },
                          "value": {
                            "type": "string",
                            "example": "71500000 (wei)"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "params": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "from",
                              "to",
                              "value"
                            ],
                            "properties": {
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "to": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "priority": {
                                        "type": "string",
                                        "example": "very-high"
                                      },
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "retryPolicy": {
                                        "type": "object",
                                        "properties": {
                                          "increment": {
                                            "type": "number",
                                            "example": 0.05
                                          },
                                          "interval": {
                                            "type": "string",
                                            "example": "2m"
                                          },
                                          "limit": {
                                            "type": "number",
                                            "example": 0.5
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "description": "Transfer transaction request",
          "required": true
        },
        "responses": {
          "202": {
            "description": "Created transfer transaction request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chain": {
                      "type": "string",
                      "example": "myChain"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "idempotencyKey": {
                      "type": "string",
                      "example": "myIdempotencyKey"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "hasBeenRetried": {
                                "type": "boolean",
                                "example": false
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          "chainUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "logs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "at": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Log message"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "MINED"
                                }
                              }
                            }
                          },
                          "nextJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "parentJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "scheduleUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "status": {
                            "type": "string",
                            "example": "MINED"
                          },
                          "tenantID": {
                            "type": "string",
                            "example": "foo"
                          },
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "data": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "enclaveKey": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "hash": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "nonce": {
                                "type": "string",
                                "example": "1"
                              },
                              "privacyGroupID": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "privateFor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                  "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                ]
                              },
                              "privateFrom": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "raw": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "to": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "eth://ethereum/transaction"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          }
                        }
                      }
                    },
                    "params": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Already existing transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable parameters were sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    },
    "/transactions/{uuid}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "JWTAuth": []
          }
        ],
        "description": "Fetch a single transaction request by uuid",
        "summary": "Fetch a transaction request by uuid",
        "parameters": [
          {
            "description": "UUID of the transaction request",
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction request found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chain": {
                      "type": "string",
                      "example": "myChain"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2020-07-09T12:35:42.115395Z"
                    },
                    "idempotencyKey": {
                      "type": "string",
                      "example": "myIdempotencyKey"
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "type": "object",
                            "properties": {
                              "gasPricePolicy": {
                                "type": "object",
                                "properties": {
                                  "priority": {
                                    "type": "string",
                                    "example": "very-high"
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "increment": {
                                        "type": "number",
                                        "example": 0.05
                                      },
                                      "interval": {
                                        "type": "string",
                                        "example": "2m"
                                      },
                                      "limit": {
                                        "type": "number",
                                        "example": 0.5
                                      }
                                    }
                                  }
                                }
                              },
                              "hasBeenRetried": {
                                "type": "boolean",
                                "example": false
                              },
                              "oneTimeKey": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          "chainUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "labels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "logs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "at": {
                                  "type": "string",
                                  "example": "2020-07-09T12:35:42.115395Z"
                                },
                                "message": {
                                  "type": "string",
                                  "example": "Log message"
                                },
                                "status": {
                                  "type": "string",
                                  "example": "MINED"
                                }
                              }
                            }
                          },
                          "nextJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "parentJobUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "scheduleUUID": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          },
                          "status": {
                            "type": "string",
                            "example": "MINED"
                          },
                          "tenantID": {
                            "type": "string",
                            "example": "foo"
                          },
                          "transaction": {
                            "type": "object",
                            "properties": {
                              "createdAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "data": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "enclaveKey": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715eadc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "from": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "gas": {
                                "type": "string",
                                "example": "21000"
                              },
                              "gasPrice": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              },
                              "hash": {
                                "type": "string",
                                "example": "0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"
                              },
                              "nonce": {
                                "type": "string",
                                "example": "1"
                              },
                              "privacyGroupID": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "privateFor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=",
                                  "B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                                ]
                              },
                              "privateFrom": {
                                "type": "string",
                                "example": "A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="
                              },
                              "raw": {
                                "type": "string",
                                "example": "0xfe378324abcde723"
                              },
                              "to": {
                                "type": "string",
                                "example": "0x1abae27a0cbfb02945720425d3b80c7e09728534"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2020-07-09T12:35:42.115395Z"
                              },
                              "value": {
                                "type": "string",
                                "example": "71500000 (wei)"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "eth://ethereum/transaction"
                          },
                          "updatedAt": {
                            "type": "string",
                            "example": "2020-07-09T12:35:42.115395Z"
                          },
                          "uuid": {
                            "type": "string",
                            "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                          }
                        }
                      }
                    },
                    "params": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string",
                      "example": "b4374e6f-b28a-4bad-b4fe-bda36eaf849c"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction request not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 24000
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid status update for the current job state"
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Transaction Scheduler"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      },
      "JWTAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
