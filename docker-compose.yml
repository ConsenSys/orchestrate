version: '3.7'

x-default-variables: &default-variables
  ENVELOPE_STORE_URL: ${ENVELOPE_STORE_URL-envelope-store:8080}
  CONTRACT_REGISTRY_URL: ${CONTRACT_REGISTRY_URL-contract-registry:8080}
  KAFKA_URL: ${KAFKA_URL-kafka:29092}
  ETH_CLIENT_URL: ${ETH_CLIENT_URL-http://geth:8545}
  LOG_LEVEL: ${LOG_LEVEL-debug}
  LOG_FORMAT: ${LOG_FORMAT-}
  JAEGER_AGENT_HOST: ${JAEGER_AGENT_HOST-jaeger}
  JAEGER_AGENT_PORT: ${JAEGER_AGENT_PORT-6831}
  NONCE_MANAGER_TYPE: ${NONCE_MANAGER_TYPE-}
  REDIS_URL: ${REDIS_URL-redis:6379}
  VAULT_ADDR: ${VAULT_ADDR-http://vault:8200}
  # FAUCET_CREDITOR_ADDRESS: ${FAUCET_CREDITOR_ADDRESS-0x93f7274c9059e601be4512f656b57b830e019e41}@${GETH_NETWORKID-888}
  ABI: ${ABI-}
  ETH_CLIENT_RETRY_MAX_ELAPSED_TIME: 5s

x-container-common: &container-common
  restart: ${CONTAINER_RESTART-on-failure}
  networks:
    - orchestrate
    - quorum-tessera
  volumes:
    - ./build/bin/orchestrate:/bin/main
  image: golang:1.13
  entrypoint: /bin/main

x-contract-registry-common: &contract-registry-common
  CONTRACT_REGISTRY_TYPE: ${CONTRACT_REGISTRY_TYPE-}
  DB_HOST: postgres-contract-registry

x-envelope-store-common: &envelope-store-common
  ENVELOPE_STORE_TYPE: ${ENVELOPE_STORE_TYPE-}
  DB_HOST: postgres-envelope-store

services:
  contract-registry-migration-init:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *contract-registry-common
    restart: "no"
    command: contract-registry migrate init

  contract-registry-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *contract-registry-common
    restart: "no"
    depends_on:
      - contract-registry-migration-init
    command: contract-registry migrate

  contract-registry:
    <<: *container-common
    ports:
      - 8081:8080
    environment:
      <<: *default-variables
      <<: *contract-registry-common
    depends_on:
      - contract-registry-migration
    command: contract-registry run

  envelope-store-migration-init:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *envelope-store-common
    restart: "no"
    command: envelope-store migrate init

  envelope-store-migration:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *envelope-store-common
    restart: "no"
    depends_on:
      - envelope-store-migration-init
    command: envelope-store migrate

  envelope-store:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *envelope-store-common
    depends_on:
      - envelope-store-migration
    command: envelope-store run

  tx-crafter:
    <<: *container-common
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-CRAFTER
    depends_on:
      - contract-registry
    command: tx-crafter run

  tx-nonce:
    <<: *container-common
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-NONCE
    command: tx-nonce run

  tx-signer-init:
    image: alpine:3.10
    <<: *container-common
    environment:
      <<: *default-variables
    restart: "no"
    working_dir: /scripts
    volumes:
      - ./scripts/hashicorp:/scripts
      - vault-token:/vault/token
    entrypoint: ""
    command: /bin/sh ./init.sh

  tx-signer:
    <<: *container-common
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-SIGNER
      TESSERA_URL: ${TESSERA_URL}
      SECRET_PKEY: ${SECRET_PKEY-}
      SECRET_STORE: ${SECRET_STORE-hashicorp}
    volumes:
      - vault-token:/vault/token:ro
      - ./build/bin/orchestrate:/bin/main
    depends_on:
      - tx-signer-init
    command: tx-signer run

  tx-sender:
    <<: *container-common
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-SENDER
    command: tx-sender run

  tx-listener:
    <<: *container-common
    environment:
      <<: *default-variables
      LISTENER_START_DEFAULT: latest
      JAEGER_SERVICE_NAME: TX-LISTENER
    depends_on:
      - envelope-store
    command: tx-listener run

  tx-decoder:
    <<: *container-common
    environment:
      <<: *default-variables
      JAEGER_SERVICE_NAME: TX-DECODER
    depends_on:
      - contract-registry
    command: tx-decoder run

  e2e:
    <<: *container-common
    environment:
      <<: *default-variables
      CUCUMBER_OUTPUTPATH: "/report/output/report.json"
      CUCUMBER_PATHS: "/features"
      CUCUMBER_FORMAT: "cucumber"
      CUCUMBER_ALIAS: "chain.primary:888 chain.private:10"
      # Uncomment CUCUMBER_TAGS if only run features and scenarios with @public-tx or @wallet tags ("," = OR, "&&" = AND, "~" = NOT)
      # CUCUMBER_TAGS: "@public-tx,@wallet"
    restart: "no"
    command: e2e run
    volumes:
      - ./build/bin/e2e:/bin/main
      - ./build/report:/report/output
      - ./tests/features:/features

volumes:
  vault-token:
    driver: local

networks:
  orchestrate:
    external:
      name: deps_orchestrate
  quorum-tessera:
    external:
      name: deps_quorum-tessera
