syntax = "proto3";

option go_package = "gitlab.com/ConsenSys/client/fr/core-stack/pkg.git/protos/ethereum";

package ethereum;

// Ethereum Log
message Log {
    string address = 1; // DATA (20 Bytes) - Address from which log originated.
    repeated string topics = 2; // Array of DATA (32 Bytes) - Array of 0 to 4 indexed log arguments 
    bytes data = 3; // DATA - Non-indexed arguments of the log. 
    map<string, string> decoded_data = 4;

    uint64 block_number = 5; // QUANTITY - Block number where this transaction was in.
    string tx_hash = 6; // DATA (32 Bytes) - Hash of the transaction.
    uint64 tx_index = 7; // QUANTITY - Integer of the transactions index position in the block.
     
    string block_hash = 8; // DATA (32 Bytes) - Hash of the block where this transaction was in.
    uint64 index = 9; // QUANTITY - Integer of the log index position in the block.

    bool removed = 10; // Removed field is true if this log was reverted due to a chain reorganisation.
}

// Transaction Receipt
message Receipt {
    string tx_hash = 1; // DATA (32 Bytes) - Hash of the transaction. TODO: maybe not necessary
    string block_hash = 2; // DATA (32 Bytes) - Hash of the block where this transaction was in.
    uint64 block_number = 3; // QUANTITY - Block number where this transaction was in.
    uint64 tx_index = 4; // QUANTITY - Integer of the transactions index position in the block.
    
    string contract_address = 6; // DATA (20 Bytes) - The contract address created, if the transaction was a contract creation
    
    bytes post_state = 7; // DATA (32 Bytes) - State root hash after executing transaction
    uint64 status = 8; // QUANTITY - 0x0 indicates transaction failure , 0x1 indicates transaction success.

    bytes bloom = 10; // DATA (256 Bytes) - Bloom filter of logs/events generated by contracts during transaction execution.
    repeated Log logs = 11; // Array - Array of log objects, which this transaction generated.

    uint64 gas_used = 12; // QUANTITY - The amount of gas used by this specific transaction alone.
    uint64 cumulative_gas_used = 13; // QUANTITY - The total amount of gas used when this transaction was executed in the block.
}
