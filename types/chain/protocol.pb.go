// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/chain/protocol.proto

package chain

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProtocolType int32

const (
	ProtocolType_ETHEREUM_CONSTANTINOPLE ProtocolType = 0
	ProtocolType_QUORUM_CONSTELLATION    ProtocolType = 1
	ProtocolType_QUORUM_TESSERA          ProtocolType = 2
	ProtocolType_PANTHEON_ORION          ProtocolType = 3
)

var ProtocolType_name = map[int32]string{
	0: "ETHEREUM_CONSTANTINOPLE",
	1: "QUORUM_CONSTELLATION",
	2: "QUORUM_TESSERA",
	3: "PANTHEON_ORION",
}

var ProtocolType_value = map[string]int32{
	"ETHEREUM_CONSTANTINOPLE": 0,
	"QUORUM_CONSTELLATION":    1,
	"QUORUM_TESSERA":          2,
	"PANTHEON_ORION":          3,
}

func (x ProtocolType) String() string {
	return proto.EnumName(ProtocolType_name, int32(x))
}

func (ProtocolType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_97f5b19fa7cf3c7d, []int{0}
}

// Information about a Chain
type Protocol struct {
	// Type of a protocol that should be used
	Type ProtocolType `protobuf:"varint,1,opt,name=type,proto3,enum=chain.ProtocolType" json:"type,omitempty"`
	// Extra information (optional)
	Extra                map[string]string `protobuf:"bytes,3,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Protocol) Reset()         { *m = Protocol{} }
func (m *Protocol) String() string { return proto.CompactTextString(m) }
func (*Protocol) ProtoMessage()    {}
func (*Protocol) Descriptor() ([]byte, []int) {
	return fileDescriptor_97f5b19fa7cf3c7d, []int{0}
}

func (m *Protocol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Protocol.Unmarshal(m, b)
}
func (m *Protocol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Protocol.Marshal(b, m, deterministic)
}
func (m *Protocol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Protocol.Merge(m, src)
}
func (m *Protocol) XXX_Size() int {
	return xxx_messageInfo_Protocol.Size(m)
}
func (m *Protocol) XXX_DiscardUnknown() {
	xxx_messageInfo_Protocol.DiscardUnknown(m)
}

var xxx_messageInfo_Protocol proto.InternalMessageInfo

func (m *Protocol) GetType() ProtocolType {
	if m != nil {
		return m.Type
	}
	return ProtocolType_ETHEREUM_CONSTANTINOPLE
}

func (m *Protocol) GetExtra() map[string]string {
	if m != nil {
		return m.Extra
	}
	return nil
}

func init() {
	proto.RegisterEnum("chain.ProtocolType", ProtocolType_name, ProtocolType_value)
	proto.RegisterType((*Protocol)(nil), "chain.Protocol")
	proto.RegisterMapType((map[string]string)(nil), "chain.Protocol.ExtraEntry")
}

func init() { proto.RegisterFile("types/chain/protocol.proto", fileDescriptor_97f5b19fa7cf3c7d) }

var fileDescriptor_97f5b19fa7cf3c7d = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x41, 0x4b, 0xf3, 0x30,
	0x1c, 0xc6, 0xdf, 0xae, 0xef, 0x44, 0xff, 0xca, 0x28, 0x71, 0x60, 0x99, 0x97, 0xe1, 0xc5, 0x21,
	0xd8, 0xc8, 0xbc, 0x0c, 0x6f, 0x75, 0x04, 0x37, 0x98, 0xc9, 0x4c, 0xb3, 0x8b, 0x97, 0xd1, 0x85,
	0x38, 0x4b, 0xbb, 0xa6, 0xb4, 0x51, 0xec, 0xa7, 0xf1, 0xab, 0x4a, 0xb3, 0x0d, 0x87, 0xb7, 0x27,
	0xcf, 0xef, 0x17, 0x12, 0x1e, 0xe8, 0x99, 0xba, 0x50, 0x15, 0x96, 0xef, 0x71, 0x92, 0xe3, 0xa2,
	0xd4, 0x46, 0x4b, 0x9d, 0x05, 0x36, 0xa0, 0xb6, 0x6d, 0xaf, 0xbe, 0x1d, 0x38, 0x9e, 0xef, 0x08,
	0xba, 0x86, 0xff, 0xcd, 0x0d, 0xdf, 0xe9, 0x3b, 0x83, 0xce, 0xf0, 0x3c, 0xb0, 0x4a, 0xb0, 0xc7,
	0xa2, 0x2e, 0x14, 0xb7, 0x02, 0xba, 0x83, 0xb6, 0xfa, 0x32, 0x65, 0xec, 0xbb, 0x7d, 0x77, 0x70,
	0x3a, 0xec, 0xfd, 0x31, 0x03, 0xd2, 0x40, 0x92, 0x9b, 0xb2, 0xe6, 0x5b, 0xb1, 0x37, 0x02, 0xf8,
	0x2d, 0x91, 0x07, 0x6e, 0xaa, 0x6a, 0xfb, 0xce, 0x09, 0x6f, 0x22, 0xea, 0x42, 0xfb, 0x33, 0xce,
	0x3e, 0x94, 0xdf, 0xb2, 0xdd, 0xf6, 0xf0, 0xd0, 0x1a, 0x39, 0x37, 0x1b, 0x38, 0x3b, 0xfc, 0x01,
	0xba, 0x84, 0x0b, 0x22, 0x26, 0x84, 0x93, 0xc5, 0xf3, 0x72, 0xcc, 0x68, 0x24, 0x42, 0x2a, 0xa6,
	0x94, 0xcd, 0x67, 0xc4, 0xfb, 0x87, 0x7c, 0xe8, 0xbe, 0x2c, 0x18, 0xdf, 0x23, 0x32, 0x9b, 0x85,
	0x62, 0xca, 0xa8, 0xe7, 0x20, 0x04, 0x9d, 0x1d, 0x11, 0x24, 0x8a, 0x08, 0x0f, 0xbd, 0x56, 0xd3,
	0xcd, 0x43, 0x2a, 0x26, 0x84, 0xd1, 0x25, 0xe3, 0x8d, 0xe7, 0x3e, 0x4e, 0x5f, 0x9f, 0xd6, 0x89,
	0xc9, 0xe2, 0x55, 0x20, 0xf5, 0x06, 0x8f, 0x75, 0x5e, 0xa9, 0x3c, 0xaa, 0x2b, 0x2c, 0xb3, 0x44,
	0xe5, 0x06, 0xbf, 0x95, 0x58, 0xea, 0x52, 0xdd, 0x56, 0x26, 0x96, 0xa9, 0x8d, 0x36, 0x05, 0xeb,
	0xc4, 0xe0, 0x22, 0x5d, 0xe3, 0x83, 0xc5, 0x57, 0x47, 0x76, 0xe9, 0xfb, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xbc, 0xa3, 0x00, 0x98, 0x87, 0x01, 0x00, 0x00,
}
