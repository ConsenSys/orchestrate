// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/envelope-store/store.proto

package envelope_store

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	tx "gitlab.com/ConsenSys/client/fr/core-stack/orchestrate.git/types/tx"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Possible statuses for a transaction
type Status int32

const (
	Status_STORED  Status = 0
	Status_PENDING Status = 1
	Status_MINED   Status = 2
	Status_ERROR   Status = 3
)

var Status_name = map[int32]string{
	0: "STORED",
	1: "PENDING",
	2: "MINED",
	3: "ERROR",
}

var Status_value = map[string]int32{
	"STORED":  0,
	"PENDING": 1,
	"MINED":   2,
	"ERROR":   3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{0}
}

type StatusInfo struct {
	// Status of Transaction
	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=envelopestore.Status" json:"status,omitempty"`
	// Date events for envelope
	StoredAt             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=storedAt,proto3" json:"storedAt,omitempty"`
	SentAt               *timestamp.Timestamp `protobuf:"bytes,3,opt,name=sentAt,proto3" json:"sentAt,omitempty"`
	MinedAt              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=minedAt,proto3" json:"minedAt,omitempty"`
	ErrorAt              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=errorAt,proto3" json:"errorAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StatusInfo) Reset()         { *m = StatusInfo{} }
func (m *StatusInfo) String() string { return proto.CompactTextString(m) }
func (*StatusInfo) ProtoMessage()    {}
func (*StatusInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{0}
}

func (m *StatusInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusInfo.Unmarshal(m, b)
}
func (m *StatusInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusInfo.Marshal(b, m, deterministic)
}
func (m *StatusInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusInfo.Merge(m, src)
}
func (m *StatusInfo) XXX_Size() int {
	return xxx_messageInfo_StatusInfo.Size(m)
}
func (m *StatusInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StatusInfo proto.InternalMessageInfo

func (m *StatusInfo) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STORED
}

func (m *StatusInfo) GetStoredAt() *timestamp.Timestamp {
	if m != nil {
		return m.StoredAt
	}
	return nil
}

func (m *StatusInfo) GetSentAt() *timestamp.Timestamp {
	if m != nil {
		return m.SentAt
	}
	return nil
}

func (m *StatusInfo) GetMinedAt() *timestamp.Timestamp {
	if m != nil {
		return m.MinedAt
	}
	return nil
}

func (m *StatusInfo) GetErrorAt() *timestamp.Timestamp {
	if m != nil {
		return m.ErrorAt
	}
	return nil
}

type StoreRequest struct {
	Envelope             *tx.TxEnvelope `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StoreRequest) Reset()         { *m = StoreRequest{} }
func (m *StoreRequest) String() string { return proto.CompactTextString(m) }
func (*StoreRequest) ProtoMessage()    {}
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{1}
}

func (m *StoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreRequest.Unmarshal(m, b)
}
func (m *StoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreRequest.Marshal(b, m, deterministic)
}
func (m *StoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreRequest.Merge(m, src)
}
func (m *StoreRequest) XXX_Size() int {
	return xxx_messageInfo_StoreRequest.Size(m)
}
func (m *StoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreRequest proto.InternalMessageInfo

func (m *StoreRequest) GetEnvelope() *tx.TxEnvelope {
	if m != nil {
		return m.Envelope
	}
	return nil
}

type StoreResponse struct {
	// Envelope
	Envelope             *tx.TxEnvelope `protobuf:"bytes,1,opt,name=envelope,proto3" json:"envelope,omitempty"`
	StatusInfo           *StatusInfo    `protobuf:"bytes,2,opt,name=status_info,json=statusInfo,proto3" json:"status_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StoreResponse) Reset()         { *m = StoreResponse{} }
func (m *StoreResponse) String() string { return proto.CompactTextString(m) }
func (*StoreResponse) ProtoMessage()    {}
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{2}
}

func (m *StoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreResponse.Unmarshal(m, b)
}
func (m *StoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreResponse.Marshal(b, m, deterministic)
}
func (m *StoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreResponse.Merge(m, src)
}
func (m *StoreResponse) XXX_Size() int {
	return xxx_messageInfo_StoreResponse.Size(m)
}
func (m *StoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreResponse proto.InternalMessageInfo

func (m *StoreResponse) GetEnvelope() *tx.TxEnvelope {
	if m != nil {
		return m.Envelope
	}
	return nil
}

func (m *StoreResponse) GetStatusInfo() *StatusInfo {
	if m != nil {
		return m.StatusInfo
	}
	return nil
}

type LoadByIDRequest struct {
	// Envelope identifier
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadByIDRequest) Reset()         { *m = LoadByIDRequest{} }
func (m *LoadByIDRequest) String() string { return proto.CompactTextString(m) }
func (*LoadByIDRequest) ProtoMessage()    {}
func (*LoadByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{3}
}

func (m *LoadByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadByIDRequest.Unmarshal(m, b)
}
func (m *LoadByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadByIDRequest.Marshal(b, m, deterministic)
}
func (m *LoadByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadByIDRequest.Merge(m, src)
}
func (m *LoadByIDRequest) XXX_Size() int {
	return xxx_messageInfo_LoadByIDRequest.Size(m)
}
func (m *LoadByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadByIDRequest proto.InternalMessageInfo

func (m *LoadByIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type LoadByTxHashRequest struct {
	// Chain the transaction has been sent to
	ChainId string `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Hash of the transaction
	TxHash               string   `protobuf:"bytes,3,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadByTxHashRequest) Reset()         { *m = LoadByTxHashRequest{} }
func (m *LoadByTxHashRequest) String() string { return proto.CompactTextString(m) }
func (*LoadByTxHashRequest) ProtoMessage()    {}
func (*LoadByTxHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{4}
}

func (m *LoadByTxHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadByTxHashRequest.Unmarshal(m, b)
}
func (m *LoadByTxHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadByTxHashRequest.Marshal(b, m, deterministic)
}
func (m *LoadByTxHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadByTxHashRequest.Merge(m, src)
}
func (m *LoadByTxHashRequest) XXX_Size() int {
	return xxx_messageInfo_LoadByTxHashRequest.Size(m)
}
func (m *LoadByTxHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadByTxHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadByTxHashRequest proto.InternalMessageInfo

func (m *LoadByTxHashRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *LoadByTxHashRequest) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

type SetStatusRequest struct {
	// Envelope identifier
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Status
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=envelopestore.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetStatusRequest) Reset()         { *m = SetStatusRequest{} }
func (m *SetStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SetStatusRequest) ProtoMessage()    {}
func (*SetStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{5}
}

func (m *SetStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetStatusRequest.Unmarshal(m, b)
}
func (m *SetStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetStatusRequest.Marshal(b, m, deterministic)
}
func (m *SetStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetStatusRequest.Merge(m, src)
}
func (m *SetStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SetStatusRequest.Size(m)
}
func (m *SetStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetStatusRequest proto.InternalMessageInfo

func (m *SetStatusRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetStatusRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_STORED
}

type StatusResponse struct {
	StatusInfo           *StatusInfo `protobuf:"bytes,1,opt,name=status_info,json=statusInfo,proto3" json:"status_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{6}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatusInfo() *StatusInfo {
	if m != nil {
		return m.StatusInfo
	}
	return nil
}

type LoadPendingRequest struct {
	// Pending duration
	Duration             *duration.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LoadPendingRequest) Reset()         { *m = LoadPendingRequest{} }
func (m *LoadPendingRequest) String() string { return proto.CompactTextString(m) }
func (*LoadPendingRequest) ProtoMessage()    {}
func (*LoadPendingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{7}
}

func (m *LoadPendingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadPendingRequest.Unmarshal(m, b)
}
func (m *LoadPendingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadPendingRequest.Marshal(b, m, deterministic)
}
func (m *LoadPendingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadPendingRequest.Merge(m, src)
}
func (m *LoadPendingRequest) XXX_Size() int {
	return xxx_messageInfo_LoadPendingRequest.Size(m)
}
func (m *LoadPendingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadPendingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadPendingRequest proto.InternalMessageInfo

func (m *LoadPendingRequest) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type LoadPendingResponse struct {
	// Pending envelopes
	Responses            []*StoreResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LoadPendingResponse) Reset()         { *m = LoadPendingResponse{} }
func (m *LoadPendingResponse) String() string { return proto.CompactTextString(m) }
func (*LoadPendingResponse) ProtoMessage()    {}
func (*LoadPendingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8943bd8e2a955ec2, []int{8}
}

func (m *LoadPendingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadPendingResponse.Unmarshal(m, b)
}
func (m *LoadPendingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadPendingResponse.Marshal(b, m, deterministic)
}
func (m *LoadPendingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadPendingResponse.Merge(m, src)
}
func (m *LoadPendingResponse) XXX_Size() int {
	return xxx_messageInfo_LoadPendingResponse.Size(m)
}
func (m *LoadPendingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadPendingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoadPendingResponse proto.InternalMessageInfo

func (m *LoadPendingResponse) GetResponses() []*StoreResponse {
	if m != nil {
		return m.Responses
	}
	return nil
}

func init() {
	proto.RegisterEnum("envelopestore.Status", Status_name, Status_value)
	proto.RegisterType((*StatusInfo)(nil), "envelopestore.StatusInfo")
	proto.RegisterType((*StoreRequest)(nil), "envelopestore.StoreRequest")
	proto.RegisterType((*StoreResponse)(nil), "envelopestore.StoreResponse")
	proto.RegisterType((*LoadByIDRequest)(nil), "envelopestore.LoadByIDRequest")
	proto.RegisterType((*LoadByTxHashRequest)(nil), "envelopestore.LoadByTxHashRequest")
	proto.RegisterType((*SetStatusRequest)(nil), "envelopestore.SetStatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "envelopestore.StatusResponse")
	proto.RegisterType((*LoadPendingRequest)(nil), "envelopestore.LoadPendingRequest")
	proto.RegisterType((*LoadPendingResponse)(nil), "envelopestore.LoadPendingResponse")
}

func init() { proto.RegisterFile("types/envelope-store/store.proto", fileDescriptor_8943bd8e2a955ec2) }

var fileDescriptor_8943bd8e2a955ec2 = []byte{
	// 1015 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0x41, 0x73, 0xdb, 0x44,
	0x14, 0xae, 0x65, 0xe2, 0xd8, 0xcf, 0x8d, 0xe3, 0x6e, 0xe9, 0x34, 0x35, 0x6d, 0xba, 0xdd, 0x53,
	0xe8, 0xc4, 0x52, 0x70, 0x49, 0x0b, 0xbe, 0x50, 0x07, 0x1b, 0x70, 0x53, 0x12, 0x57, 0xf6, 0x0c,
	0x4c, 0x99, 0x4e, 0x46, 0x96, 0xd6, 0xb2, 0xc0, 0xde, 0x15, 0xda, 0x75, 0x6b, 0x93, 0xc9, 0x01,
	0x6e, 0xbd, 0x31, 0xc9, 0x85, 0x19, 0x98, 0xe1, 0x5f, 0xf0, 0x2b, 0xb8, 0x71, 0xe6, 0x00, 0xc3,
	0x0f, 0xe0, 0xc4, 0x99, 0xd1, 0x4a, 0x72, 0x1c, 0x63, 0x92, 0xf6, 0x62, 0xad, 0xf6, 0x7d, 0xef,
	0xbd, 0x6f, 0xdf, 0xfb, 0x9e, 0xd6, 0x80, 0xe5, 0xc4, 0xa7, 0xc2, 0xa0, 0xec, 0x39, 0x1d, 0x70,
	0x9f, 0x96, 0x85, 0xe4, 0x01, 0x35, 0xd4, 0xaf, 0xee, 0x07, 0x5c, 0x72, 0xb4, 0x92, 0xd8, 0xd4,
	0x66, 0xe9, 0xa6, 0xcb, 0xb9, 0x3b, 0xa0, 0x86, 0xe5, 0x7b, 0x86, 0xc5, 0x18, 0x97, 0x96, 0xf4,
	0x38, 0x13, 0x11, 0xb8, 0xb4, 0x1e, 0x5b, 0xd5, 0x5b, 0x77, 0xd4, 0x33, 0x9c, 0x51, 0xa0, 0x00,
	0xb1, 0xfd, 0xf6, 0xbc, 0x5d, 0x7a, 0x43, 0x2a, 0xa4, 0x35, 0xf4, 0x63, 0xc0, 0xa6, 0x7a, 0xd8,
	0x65, 0x97, 0xb2, 0xb2, 0x78, 0x61, 0xb9, 0x2e, 0x0d, 0x0c, 0xee, 0xab, 0x14, 0x0b, 0xd2, 0x5d,
	0x89, 0xd8, 0xcb, 0xb1, 0x21, 0xc7, 0xd1, 0x16, 0x39, 0xd1, 0x00, 0xda, 0xd2, 0x92, 0x23, 0xd1,
	0x64, 0x3d, 0x8e, 0xca, 0x90, 0x11, 0xea, 0x6d, 0x2d, 0x85, 0x53, 0x1b, 0x85, 0xca, 0x35, 0xfd,
	0xcc, 0x71, 0xf4, 0x08, 0x6a, 0xc6, 0x20, 0x74, 0x1f, 0xb2, 0x6a, 0xdf, 0xa9, 0xc9, 0x35, 0x0d,
	0xa7, 0x36, 0xf2, 0x95, 0x92, 0x1e, 0x51, 0xd6, 0x13, 0xca, 0x7a, 0x27, 0xa1, 0x6c, 0x4e, 0xb1,
	0xa8, 0x02, 0x19, 0x41, 0x99, 0xac, 0xc9, 0xb5, 0xf4, 0x85, 0x5e, 0x31, 0x12, 0xbd, 0x0b, 0xcb,
	0x43, 0x8f, 0xa9, 0x54, 0x6f, 0x5c, 0xe8, 0x94, 0x40, 0x43, 0x2f, 0x1a, 0x04, 0x3c, 0xa8, 0xc9,
	0xb5, 0xa5, 0x8b, 0xbd, 0x62, 0x28, 0xa9, 0xc2, 0xe5, 0x76, 0xc8, 0xd5, 0xa4, 0x5f, 0x8f, 0xa8,
	0x90, 0xe8, 0x2e, 0x64, 0x93, 0x3a, 0xa8, 0xc2, 0xe4, 0x2b, 0x05, 0x5d, 0x8e, 0xf5, 0xce, 0xb8,
	0x11, 0xef, 0x9a, 0x53, 0x3b, 0x79, 0x01, 0x2b, 0xb1, 0xaf, 0xf0, 0x39, 0x13, 0xf4, 0x75, 0x9c,
	0x51, 0x15, 0xf2, 0x51, 0x69, 0x0f, 0x3c, 0xd6, 0xe3, 0x71, 0x4d, 0x6f, 0x2c, 0x6c, 0x42, 0xd8,
	0x2f, 0x13, 0xc4, 0x74, 0x4d, 0xee, 0xc0, 0xea, 0x63, 0x6e, 0x39, 0x3b, 0x93, 0x66, 0x3d, 0xe1,
	0x5d, 0x00, 0xcd, 0x73, 0x54, 0xd2, 0x9c, 0xa9, 0x79, 0x0e, 0x69, 0xc2, 0xd5, 0x08, 0xd2, 0x19,
	0x7f, 0x62, 0x89, 0x7e, 0x02, 0xbb, 0x01, 0x59, 0xbb, 0x6f, 0x79, 0xec, 0xc0, 0x73, 0x54, 0xca,
	0x9c, 0xb9, 0xac, 0xde, 0x9b, 0x0e, 0xba, 0x0e, 0xcb, 0x72, 0x7c, 0xd0, 0xb7, 0x44, 0x5f, 0xb5,
	0x2a, 0x67, 0x66, 0xa4, 0x72, 0x25, 0x4f, 0xa0, 0xd8, 0xa6, 0x32, 0xd6, 0xc3, 0xe2, 0x74, 0x33,
	0x6a, 0xd2, 0x5e, 0x41, 0x4d, 0xe4, 0x31, 0x14, 0x92, 0x78, 0x71, 0xe9, 0xe6, 0xca, 0x91, 0x7a,
	0x9d, 0x72, 0xec, 0x02, 0x0a, 0xcf, 0xda, 0xa2, 0xcc, 0xf1, 0x98, 0x9b, 0x50, 0xdc, 0x86, 0x6c,
	0x32, 0x63, 0xd3, 0x70, 0xf3, 0x82, 0xa8, 0xc7, 0x00, 0x73, 0x0a, 0x25, 0x4f, 0xa2, 0xc2, 0x4d,
	0x83, 0x4d, 0xf9, 0xe5, 0x82, 0x78, 0x1d, 0x4e, 0x4c, 0x7a, 0x23, 0x5f, 0xb9, 0xf9, 0x1f, 0x76,
	0x33, 0x5a, 0x30, 0x4f, 0xe1, 0x77, 0x1f, 0x40, 0x26, 0x62, 0x8e, 0x00, 0x32, 0xed, 0xce, 0xbe,
	0xd9, 0xa8, 0x17, 0x2f, 0xa1, 0x3c, 0x2c, 0xb7, 0x1a, 0x7b, 0xf5, 0xe6, 0xde, 0xc7, 0xc5, 0x14,
	0xca, 0xc1, 0xd2, 0xa7, 0xcd, 0xbd, 0x46, 0xbd, 0xa8, 0x85, 0xcb, 0x86, 0x69, 0xee, 0x9b, 0xc5,
	0x74, 0xe5, 0xd7, 0x25, 0x58, 0x49, 0xa4, 0xa3, 0xa2, 0xa3, 0x1d, 0x58, 0x8a, 0x16, 0x6f, 0x2d,
	0x4e, 0xae, 0x8e, 0x5e, 0x3a, 0x97, 0x19, 0xfa, 0x36, 0x0d, 0xd9, 0x44, 0x3e, 0x68, 0x7d, 0x0e,
	0x3a, 0xa7, 0xab, 0xf3, 0x43, 0x91, 0x5f, 0xb4, 0xe3, 0xda, 0x8f, 0xda, 0xa3, 0x1f, 0x34, 0x48,
	0x6f, 0x6f, 0x6d, 0xa1, 0xef, 0x35, 0xb8, 0xd6, 0x64, 0x92, 0x06, 0xcc, 0x1a, 0xe0, 0x36, 0x0d,
	0x9e, 0xd3, 0x00, 0x37, 0xc2, 0x41, 0x23, 0xff, 0xa4, 0xa0, 0x68, 0xf9, 0xfe, 0xc0, 0xb3, 0x55,
	0x95, 0x8d, 0x2f, 0x05, 0x67, 0xe8, 0x8f, 0xd4, 0x21, 0x26, 0x6a, 0x10, 0x49, 0x15, 0x93, 0x24,
	0x0f, 0x66, 0x5c, 0xe2, 0x1e, 0x1f, 0x31, 0x87, 0x6c, 0x62, 0x62, 0x73, 0x87, 0x92, 0x2a, 0xde,
	0xde, 0xc4, 0x64, 0x48, 0x85, 0xb0, 0x5c, 0xfa, 0xff, 0x58, 0x87, 0x4a, 0xcb, 0x1b, 0x08, 0x52,
	0xc5, 0x5f, 0xe0, 0x43, 0x4c, 0x1e, 0x86, 0xdf, 0xc0, 0x10, 0x1d, 0x3e, 0xe3, 0xd6, 0x5b, 0xbe,
	0x27, 0x74, 0x9b, 0x0f, 0x0d, 0x95, 0x56, 0x8f, 0xc8, 0xbd, 0x4a, 0xec, 0x98, 0x07, 0x79, 0xef,
	0xfd, 0x07, 0xdb, 0xf7, 0xee, 0x47, 0x3b, 0x43, 0x9f, 0x33, 0xca, 0xe4, 0xac, 0x53, 0x39, 0xbe,
	0x20, 0x5c, 0x82, 0x8f, 0xf0, 0x33, 0x7c, 0xf4, 0xdd, 0x6f, 0x7f, 0x9d, 0x68, 0x57, 0xd0, 0xea,
	0xf4, 0x1e, 0x11, 0xc6, 0xa1, 0xe7, 0x1c, 0xa1, 0x16, 0x5c, 0x9e, 0x1d, 0x4f, 0x44, 0x16, 0xb6,
	0xe1, 0xcc, 0xec, 0x5e, 0xd0, 0xd5, 0x5d, 0xc8, 0x4d, 0xa7, 0x14, 0xdd, 0x9e, 0x87, 0xce, 0xcd,
	0x6f, 0xe9, 0xd6, 0xe2, 0xf9, 0x4c, 0x82, 0x75, 0x20, 0x3f, 0x33, 0x04, 0xe8, 0xce, 0x02, 0x76,
	0x67, 0xa7, 0xad, 0x44, 0xce, 0x83, 0x44, 0x51, 0x77, 0x7e, 0xd7, 0x8e, 0x6b, 0x2f, 0x35, 0xf4,
	0x11, 0x14, 0x12, 0x51, 0x97, 0xd5, 0x19, 0x88, 0x01, 0xd7, 0xff, 0xfc, 0xe9, 0x25, 0x6e, 0x51,
	0xd7, 0x6a, 0x4f, 0x04, 0xde, 0x0f, 0xec, 0x3e, 0x15, 0x32, 0xb0, 0x24, 0x2d, 0xbd, 0x29, 0x46,
	0xbe, 0xcf, 0x03, 0xf9, 0xd0, 0xa7, 0xae, 0x25, 0x26, 0x42, 0x97, 0xd4, 0xee, 0x57, 0xd2, 0xef,
	0xe8, 0x5b, 0x4f, 0x3f, 0x80, 0x75, 0x58, 0x7e, 0xf4, 0x59, 0xa7, 0x36, 0x92, 0x7d, 0x74, 0x35,
	0xab, 0x95, 0x56, 0xc2, 0x15, 0x0f, 0xbc, 0x6f, 0x94, 0xc6, 0xb0, 0x06, 0xb7, 0x00, 0x6a, 0xbe,
	0xb7, 0x4b, 0x27, 0x0a, 0xb2, 0x9a, 0xd5, 0x4a, 0xb9, 0xcf, 0xcb, 0xb5, 0x56, 0xb3, 0xbc, 0x4b,
	0x27, 0x58, 0xeb, 0xae, 0x40, 0xfe, 0x34, 0xc0, 0xa5, 0x6e, 0x11, 0x0a, 0x67, 0xf0, 0x97, 0x82,
	0x67, 0xf0, 0xf6, 0xdf, 0x3f, 0x9f, 0x1c, 0xe3, 0x3a, 0xb7, 0x47, 0x43, 0xca, 0xa2, 0x2b, 0x16,
	0xf3, 0xde, 0x22, 0xa6, 0x68, 0xab, 0x2f, 0xa5, 0x2f, 0xaa, 0x86, 0xe1, 0x70, 0x5b, 0xe8, 0xfc,
	0xd4, 0xa2, 0xcf, 0x52, 0x37, 0x28, 0x33, 0x06, 0x96, 0xa4, 0x42, 0x1a, 0x4f, 0xf7, 0x5c, 0x4f,
	0x0e, 0xac, 0xae, 0xd2, 0xe3, 0x87, 0x61, 0x85, 0x58, 0x7b, 0x22, 0x0c, 0x7b, 0xe0, 0x51, 0x26,
	0x8d, 0x5e, 0x60, 0xd8, 0x3c, 0x08, 0x05, 0x65, 0xd9, 0x5f, 0x19, 0xb3, 0xe1, 0x5c, 0x4f, 0x1a,
	0x8b, 0xfe, 0x9c, 0x74, 0x33, 0xea, 0xbb, 0x76, 0xef, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x27,
	0x4d, 0x73, 0x9f, 0xbb, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EnvelopeStoreClient is the client API for EnvelopeStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EnvelopeStoreClient interface {
	// Store an envelope
	Store(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreResponse, error)
	// Load envelope by identifier
	LoadByID(ctx context.Context, in *LoadByIDRequest, opts ...grpc.CallOption) (*StoreResponse, error)
	// Load Envelope by transaction hash
	LoadByTxHash(ctx context.Context, in *LoadByTxHashRequest, opts ...grpc.CallOption) (*StoreResponse, error)
	// SetStatus set an envelope status
	SetStatus(ctx context.Context, in *SetStatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// LoadPending load envelopes of pending transactions
	LoadPending(ctx context.Context, in *LoadPendingRequest, opts ...grpc.CallOption) (*LoadPendingResponse, error)
}

type envelopeStoreClient struct {
	cc *grpc.ClientConn
}

func NewEnvelopeStoreClient(cc *grpc.ClientConn) EnvelopeStoreClient {
	return &envelopeStoreClient{cc}
}

func (c *envelopeStoreClient) Store(ctx context.Context, in *StoreRequest, opts ...grpc.CallOption) (*StoreResponse, error) {
	out := new(StoreResponse)
	err := c.cc.Invoke(ctx, "/envelopestore.EnvelopeStore/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envelopeStoreClient) LoadByID(ctx context.Context, in *LoadByIDRequest, opts ...grpc.CallOption) (*StoreResponse, error) {
	out := new(StoreResponse)
	err := c.cc.Invoke(ctx, "/envelopestore.EnvelopeStore/LoadByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envelopeStoreClient) LoadByTxHash(ctx context.Context, in *LoadByTxHashRequest, opts ...grpc.CallOption) (*StoreResponse, error) {
	out := new(StoreResponse)
	err := c.cc.Invoke(ctx, "/envelopestore.EnvelopeStore/LoadByTxHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envelopeStoreClient) SetStatus(ctx context.Context, in *SetStatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/envelopestore.EnvelopeStore/SetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *envelopeStoreClient) LoadPending(ctx context.Context, in *LoadPendingRequest, opts ...grpc.CallOption) (*LoadPendingResponse, error) {
	out := new(LoadPendingResponse)
	err := c.cc.Invoke(ctx, "/envelopestore.EnvelopeStore/LoadPending", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EnvelopeStoreServer is the server API for EnvelopeStore service.
type EnvelopeStoreServer interface {
	// Store an envelope
	Store(context.Context, *StoreRequest) (*StoreResponse, error)
	// Load envelope by identifier
	LoadByID(context.Context, *LoadByIDRequest) (*StoreResponse, error)
	// Load Envelope by transaction hash
	LoadByTxHash(context.Context, *LoadByTxHashRequest) (*StoreResponse, error)
	// SetStatus set an envelope status
	SetStatus(context.Context, *SetStatusRequest) (*StatusResponse, error)
	// LoadPending load envelopes of pending transactions
	LoadPending(context.Context, *LoadPendingRequest) (*LoadPendingResponse, error)
}

// UnimplementedEnvelopeStoreServer can be embedded to have forward compatible implementations.
type UnimplementedEnvelopeStoreServer struct {
}

func (*UnimplementedEnvelopeStoreServer) Store(ctx context.Context, req *StoreRequest) (*StoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Store not implemented")
}
func (*UnimplementedEnvelopeStoreServer) LoadByID(ctx context.Context, req *LoadByIDRequest) (*StoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadByID not implemented")
}
func (*UnimplementedEnvelopeStoreServer) LoadByTxHash(ctx context.Context, req *LoadByTxHashRequest) (*StoreResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadByTxHash not implemented")
}
func (*UnimplementedEnvelopeStoreServer) SetStatus(ctx context.Context, req *SetStatusRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStatus not implemented")
}
func (*UnimplementedEnvelopeStoreServer) LoadPending(ctx context.Context, req *LoadPendingRequest) (*LoadPendingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadPending not implemented")
}

func RegisterEnvelopeStoreServer(s *grpc.Server, srv EnvelopeStoreServer) {
	s.RegisterService(&_EnvelopeStore_serviceDesc, srv)
}

func _EnvelopeStore_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvelopeStoreServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envelopestore.EnvelopeStore/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvelopeStoreServer).Store(ctx, req.(*StoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvelopeStore_LoadByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvelopeStoreServer).LoadByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envelopestore.EnvelopeStore/LoadByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvelopeStoreServer).LoadByID(ctx, req.(*LoadByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvelopeStore_LoadByTxHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadByTxHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvelopeStoreServer).LoadByTxHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envelopestore.EnvelopeStore/LoadByTxHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvelopeStoreServer).LoadByTxHash(ctx, req.(*LoadByTxHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvelopeStore_SetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvelopeStoreServer).SetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envelopestore.EnvelopeStore/SetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvelopeStoreServer).SetStatus(ctx, req.(*SetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EnvelopeStore_LoadPending_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadPendingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EnvelopeStoreServer).LoadPending(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/envelopestore.EnvelopeStore/LoadPending",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EnvelopeStoreServer).LoadPending(ctx, req.(*LoadPendingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EnvelopeStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "envelopestore.EnvelopeStore",
	HandlerType: (*EnvelopeStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Store",
			Handler:    _EnvelopeStore_Store_Handler,
		},
		{
			MethodName: "LoadByID",
			Handler:    _EnvelopeStore_LoadByID_Handler,
		},
		{
			MethodName: "LoadByTxHash",
			Handler:    _EnvelopeStore_LoadByTxHash_Handler,
		},
		{
			MethodName: "SetStatus",
			Handler:    _EnvelopeStore_SetStatus_Handler,
		},
		{
			MethodName: "LoadPending",
			Handler:    _EnvelopeStore_LoadPending_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types/envelope-store/store.proto",
}
