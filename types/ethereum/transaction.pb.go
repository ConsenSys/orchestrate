// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/ethereum/transaction.proto

package ethereum

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Transaction data
type TxData struct {
	// QUANTITY - Integer of a nonce.
	Nonce uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// DATA (20 Bytes) - The address of the receiver. null when itâ€™s a contract creation transaction.
	// e.g. 0xAf84242d70aE9D268E2bE3616ED497BA28A7b62C
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// QUANTITY - Integer of the value sent with this transaction.
	// e.g 0xaf23
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// QUANTITY - Integer of the gas provided for the transaction execution.
	Gas uint64 `protobuf:"varint,4,opt,name=gas,proto3" json:"gas,omitempty"`
	// QUANTITY - Integer of the gas price used for each paid gas.
	// e.g 0xaf23b
	GasPrice string `protobuf:"bytes,5,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	// DATA - Hash of the method signature (4 bytes) followed by encoded parameters.
	// e.g 0xa9059cbb000000000000000000000000ff778b716fc07d98839f48ddb88d8be583beb684000000000000000000000000000000000000000000000000002386f26fc10000
	Data                 string   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxData) Reset()         { *m = TxData{} }
func (m *TxData) String() string { return proto.CompactTextString(m) }
func (*TxData) ProtoMessage()    {}
func (*TxData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8c15aa666d7a06d, []int{0}
}

func (m *TxData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxData.Unmarshal(m, b)
}
func (m *TxData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxData.Marshal(b, m, deterministic)
}
func (m *TxData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxData.Merge(m, src)
}
func (m *TxData) XXX_Size() int {
	return xxx_messageInfo_TxData.Size(m)
}
func (m *TxData) XXX_DiscardUnknown() {
	xxx_messageInfo_TxData.DiscardUnknown(m)
}

var xxx_messageInfo_TxData proto.InternalMessageInfo

func (m *TxData) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *TxData) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *TxData) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TxData) GetGas() uint64 {
	if m != nil {
		return m.Gas
	}
	return 0
}

func (m *TxData) GetGasPrice() string {
	if m != nil {
		return m.GasPrice
	}
	return ""
}

func (m *TxData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// Transaction
type Transaction struct {
	TxData *TxData `protobuf:"bytes,1,opt,name=tx_data,json=txData,proto3" json:"tx_data,omitempty"`
	// DATA - The signed, RLP encoded transaction
	Raw string `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	// DATA (32 Bytes) - Hash of the transaction.
	// e.g. 0x0a0cafa26ca3f411e6629e9e02c53f23713b0033d7a72e534136104b5447a210
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8c15aa666d7a06d, []int{1}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTxData() *TxData {
	if m != nil {
		return m.TxData
	}
	return nil
}

func (m *Transaction) GetRaw() string {
	if m != nil {
		return m.Raw
	}
	return ""
}

func (m *Transaction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func init() {
	proto.RegisterType((*TxData)(nil), "ethereum.TxData")
	proto.RegisterType((*Transaction)(nil), "ethereum.Transaction")
}

func init() { proto.RegisterFile("types/ethereum/transaction.proto", fileDescriptor_e8c15aa666d7a06d) }

var fileDescriptor_e8c15aa666d7a06d = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcd, 0x4a, 0x33, 0x31,
	0x14, 0x86, 0x99, 0x9f, 0xce, 0xd7, 0xa6, 0xf0, 0x31, 0x04, 0x17, 0x01, 0x37, 0x43, 0x57, 0x75,
	0xe1, 0x04, 0xf4, 0x06, 0xa4, 0x7a, 0x01, 0x32, 0x76, 0xe5, 0xc2, 0x72, 0x1a, 0x8f, 0x99, 0xa1,
	0xd3, 0x64, 0x48, 0x4e, 0xb5, 0xbd, 0x02, 0x6f, 0x5b, 0x92, 0x69, 0x11, 0x77, 0xcf, 0x7b, 0xf2,
	0xe6, 0xf0, 0x70, 0x58, 0x45, 0xa7, 0x01, 0xbd, 0x44, 0x6a, 0xd1, 0xe1, 0x61, 0x2f, 0xc9, 0x81,
	0xf1, 0xa0, 0xa8, 0xb3, 0xa6, 0x1e, 0x9c, 0x25, 0xcb, 0xa7, 0x97, 0xb7, 0xc5, 0x77, 0xc2, 0x8a,
	0xf5, 0xf1, 0x09, 0x08, 0xf8, 0x15, 0x9b, 0x18, 0x6b, 0x14, 0x8a, 0xa4, 0x4a, 0x96, 0x79, 0x33,
	0x06, 0xfe, 0x9f, 0xa5, 0x64, 0x45, 0x5a, 0x25, 0xcb, 0x59, 0x93, 0x92, 0x0d, 0xad, 0x4f, 0xe8,
	0x0f, 0x28, 0xb2, 0x38, 0x1a, 0x03, 0x2f, 0x59, 0xa6, 0xc1, 0x8b, 0x3c, 0xfe, 0x0c, 0xc8, 0xaf,
	0xd9, 0x4c, 0x83, 0xdf, 0x0c, 0xae, 0x53, 0x28, 0x26, 0xb1, 0x3b, 0xd5, 0xe0, 0x9f, 0x43, 0xe6,
	0x9c, 0xe5, 0xef, 0x40, 0x20, 0x8a, 0x38, 0x8f, 0xbc, 0x78, 0x63, 0xf3, 0xf5, 0xaf, 0x28, 0xbf,
	0x61, 0xff, 0xe8, 0xb8, 0x89, 0xad, 0xe0, 0x33, 0xbf, 0x2b, 0xeb, 0x8b, 0x74, 0x3d, 0x0a, 0x37,
	0x05, 0x8d, 0xe2, 0x25, 0xcb, 0x1c, 0x7c, 0x9d, 0x1d, 0x03, 0x86, 0xfd, 0x2d, 0xf8, 0xf6, 0xec,
	0x18, 0x79, 0xb5, 0x7a, 0x7d, 0xd0, 0x1d, 0xf5, 0xb0, 0xad, 0x95, 0xdd, 0xcb, 0x47, 0x6b, 0x3c,
	0x9a, 0x97, 0x93, 0x97, 0xaa, 0xef, 0xd0, 0x90, 0xfc, 0x70, 0x52, 0x59, 0x87, 0xb7, 0x9e, 0x40,
	0xed, 0xe4, 0xb0, 0xd3, 0xb5, 0xee, 0x48, 0xfe, 0xbd, 0xe4, 0xb6, 0x88, 0xe7, 0xbb, 0xff, 0x09,
	0x00, 0x00, 0xff, 0xff, 0xd9, 0xe7, 0x6f, 0xc6, 0x62, 0x01, 0x00, 0x00,
}
