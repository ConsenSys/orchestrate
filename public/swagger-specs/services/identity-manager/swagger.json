{
    "swagger": "2.0",
    "info": {
        "description": "PegaSys Orchestrate Identity API. Enables dynamic management of identities.\nIdentities correspond to an Ethereum accounts. It can be a user account or a deployed smart contract. By usage of the generated cryptographic key pair, identities can be used to sign/verify and to encrypt/decrypt messages.",
        "title": "Identity Manager API",
        "contact": {
            "name": "Contact PegaSys Orchestrate",
            "url": "https://pegasys.tech/contact/",
            "email": "support@pegasys.tech"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "paths": {
        "/identities": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Creates a new Identity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new Identity",
                "parameters": [
                    {
                        "description": "Identity creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/identitymanager.CreateIdentityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identity object",
                        "schema": {
                            "$ref": "#/definitions/identitymanager.IdentityResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/identities/import": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "description": "Creates a new Identity by importing a private key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new Identity by importing a private key",
                "parameters": [
                    {
                        "description": "Identity creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/identitymanager.ImportIdentityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Identity object",
                        "schema": {
                            "$ref": "#/definitions/identitymanager.IdentityResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponse"
                        }
                    },
                    "405": {
                        "description": "Now allowed",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 24000
                },
                "message": {
                    "type": "string",
                    "example": "invalid status update for the current job state"
                }
            }
        },
        "identitymanager.CreateIdentityRequest": {
            "type": "object",
            "required": [
                "alias"
            ],
            "properties": {
                "alias": {
                    "type": "string",
                    "example": "personal-account"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "chainUUID": {
                    "type": "string",
                    "example": "besu"
                }
            }
        },
        "identitymanager.IdentityResponse": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "address": {
                    "type": "string",
                    "example": "1abae27a0cbfb02945720425d3b80c7e09728534"
                },
                "alias": {
                    "type": "string",
                    "example": "personal-account"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "compressedPublicKey": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2020-07-09T12:35:42.115395Z"
                },
                "publicKey": {
                    "type": "string",
                    "example": "048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"
                },
                "tenantID": {
                    "type": "string",
                    "example": "foo"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2020-07-09T12:35:42.115395Z"
                }
            }
        },
        "identitymanager.ImportIdentityRequest": {
            "type": "object",
            "required": [
                "alias",
                "privateKey"
            ],
            "properties": {
                "alias": {
                    "type": "string",
                    "example": "personal-account"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "chainUUID": {
                    "type": "string",
                    "example": "quorum"
                },
                "privateKey": {
                    "type": "string",
                    "example": "66232652FDFFD802B7252A456DBD8F3ECC0352BBDE76C23B40AFE8AEBD714E2D"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "JWTAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}