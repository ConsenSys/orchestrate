{
    "swagger": "2.0",
    "info": {
        "description": "PegaSys Orchestrate Chain Registry API. Enables dynamic management of chains",
        "title": "Chain Registry API",
        "contact": {
            "name": "Contact PegaSys Orchestrate",
            "url": "https://pegasys.tech/contact/",
            "email": "support@pegasys.tech"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "paths": {
        "/chains": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves a list of all registered chains",
                "responses": {
                    "200": {},
                    "404": {},
                    "500": {}
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Registers a new chain",
                "parameters": [
                    {
                        "description": "Chain registration request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chains.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "500": {}
                }
            }
        },
        "/chains/{uuid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves a chain by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the chain",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a chain by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the chain",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a chain by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the chain",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Chain update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chains.PatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/faucets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves a list of all registered faucet",
                "responses": {
                    "200": {},
                    "404": {},
                    "500": {}
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Registers a new faucet",
                "parameters": [
                    {
                        "description": "Faucet registration request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faucets.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "500": {}
                }
            }
        },
        "/faucets/{uuid}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves a faucet by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the faucet",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a faucet by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the faucet",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    },
                    {
                        "JWTAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates a faucet by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the faucet",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Faucet update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/faucets.PatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            }
        }
    },
    "definitions": {
        "chains.ListenerPatchRequest": {
            "type": "object",
            "properties": {
                "backOffDuration": {
                    "type": "string"
                },
                "currentBlock": {
                    "type": "string",
                    "example": "0"
                },
                "depth": {
                    "type": "integer"
                },
                "externalTxEnabled": {
                    "type": "boolean"
                }
            }
        },
        "chains.ListenerPostRequest": {
            "type": "object",
            "properties": {
                "backOffDuration": {
                    "type": "string"
                },
                "depth": {
                    "type": "integer"
                },
                "externalTxEnabled": {
                    "type": "boolean"
                },
                "fromBlock": {
                    "type": "string"
                }
            }
        },
        "chains.PatchRequest": {
            "type": "object",
            "properties": {
                "listener": {
                    "type": "object",
                    "$ref": "#/definitions/chains.ListenerPatchRequest"
                },
                "name": {
                    "type": "string"
                },
                "privateTxManager": {
                    "type": "object",
                    "$ref": "#/definitions/chains.PrivateTxManagerRequest"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "chains.PostRequest": {
            "type": "object",
            "required": [
                "name",
                "urls"
            ],
            "properties": {
                "listener": {
                    "type": "object",
                    "$ref": "#/definitions/chains.ListenerPostRequest"
                },
                "name": {
                    "type": "string"
                },
                "privateTxManager": {
                    "type": "object",
                    "$ref": "#/definitions/chains.PrivateTxManagerRequest"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "chains.PrivateTxManagerRequest": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "faucets.PatchRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "chainRule": {
                    "type": "string"
                },
                "cooldown": {
                    "type": "string"
                },
                "creditorAccount": {
                    "type": "string"
                },
                "maxBalance": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "faucets.PostRequest": {
            "type": "object",
            "required": [
                "amount",
                "chainRule",
                "cooldown",
                "creditorAccount",
                "maxBalance",
                "name"
            ],
            "properties": {
                "amount": {
                    "type": "string"
                },
                "chainRule": {
                    "type": "string"
                },
                "cooldown": {
                    "type": "string"
                },
                "creditorAccount": {
                    "type": "string"
                },
                "maxBalance": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        },
        "JWTAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}