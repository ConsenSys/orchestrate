{
  "swagger": "2.0",
  "info": {
    "title": "Contract-Registry",
    "version": "1.0",
    "contact": {
      "name": "âœ‰ PegaSys Orchestrate",
      "email": "support@pegasys.tech"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/contracts": {
      "get": {
        "summary": "Returns a list of all registered contracts",
        "operationId": "GetCatalog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/contractregistryGetCatalogResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "could not load contract (pg: no rows in result set)",
                "code": 2,
                "message": "could not load contract (pg: no rows in result set)",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "could not load contract (pg: no rows in result set)",
                    "code": "897024",
                    "component": "contract-registry.pg"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ContractRegistry"
        ]
      },
      "post": {
        "summary": "Register a contract",
        "operationId": "RegisterContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/contractregistryRegisterContractResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "no contract provided in request",
                "code": 3,
                "message": "no contract provided in request",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "no contract provided in request",
                    "code": "270851",
                    "component": "contract-registry-common"
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "invalid character '@' looking for beginning of value",
                "code": 13,
                "message": "invalid character '@' looking for beginning of value",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "invalid character '@' looking for beginning of value",
                    "code": "1044480",
                    "component": "contract-registry-common"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/contractregistryRegisterContractRequest"
            }
          }
        ],
        "tags": [
          "ContractRegistry"
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}": {
      "get": {
        "summary": "Retrieve contract",
        "operationId": "GetContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/contractregistryGetContractResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "could not load contract (pg: no rows in result set)",
                "code": 2,
                "message": "could not load contract (pg: no rows in result set)",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "could not load contract (pg: no rows in result set)",
                    "code": "897024",
                    "component": "contract-registry.pg"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContractRegistry"
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}/abi": {
      "get": {
        "summary": "Retrieve contract ABI",
        "operationId": "GetContractABI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/contractregistryGetContractABIResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "could not load contract (pg: no rows in result set)",
                "code": 2,
                "message": "could not load contract (pg: no rows in result set)",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "could not load contract (pg: no rows in result set)",
                    "code": "897024",
                    "component": "contract-registry.pg"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContractRegistry"
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}/bytecode": {
      "get": {
        "summary": "Returns the bytecode",
        "operationId": "GetContractBytecode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/contractregistryGetContractBytecodeResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "could not load contract (pg: no rows in result set)",
                "code": 2,
                "message": "could not load contract (pg: no rows in result set)",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "could not load contract (pg: no rows in result set)",
                    "code": "897024",
                    "component": "contract-registry.pg"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContractRegistry"
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}/deployedBytecode": {
      "get": {
        "summary": "Returns the deployed bytecode",
        "operationId": "GetContractDeployedBytecode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/contractregistryGetContractDeployedBytecodeResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "could not load contract (pg: no rows in result set)",
                "code": 2,
                "message": "could not load contract (pg: no rows in result set)",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "could not load contract (pg: no rows in result set)",
                    "code": "897024",
                    "component": "contract-registry.pg"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContractRegistry"
        ]
      }
    },
    "/contracts/{contractId.name}/{contractId.tag}/method-signatures": {
      "get": {
        "summary": "Returns a list of all method signatures matching the method name",
        "operationId": "GetMethodSignatures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/contractregistryGetMethodSignaturesResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "could not load contract (pg: no rows in result set)",
                "code": 2,
                "message": "could not load contract (pg: no rows in result set)",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "could not load contract (pg: no rows in result set)",
                    "code": "897024",
                    "component": "contract-registry.pg"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "contractId.name",
            "description": "Name of contract\ne.g. \"ERC20\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.tag",
            "description": "Contract tag\ne.g \"v2.1.3\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "contractId.registry",
            "description": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\".",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "methodName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ContractRegistry"
        ]
      }
    },
    "/contracts/{name}": {
      "get": {
        "summary": "Returns a list of all tags associated to a contract",
        "operationId": "GetTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/contractregistryGetTagsResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {},
            "examples": {
              "application/json": {
                "error": "could not load contract (pg: no rows in result set)",
                "code": 2,
                "message": "could not load contract (pg: no rows in result set)",
                "details": [
                  {
                    "@type": "type.googleapis.com/error.Error",
                    "message": "could not load contract (pg: no rows in result set)",
                    "code": "897024",
                    "component": "contract-registry.pg"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name is used to filter contractIds based on their contract name, empty to list all contract names \u0026 tags.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ContractRegistry"
        ]
      }
    }
  },
  "definitions": {
    "abiContract": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/abiContractId",
          "title": "A set of fields that identify a contract on a particular chain"
        },
        "abi": {
          "type": "string",
          "title": "Contract ABI (optional)"
        },
        "bytecode": {
          "type": "string",
          "title": "Contract deployment bytecode (optional)"
        },
        "methods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/abiMethod"
          },
          "title": "Methods of the contract"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/abiEvent"
          },
          "title": "Event of the contract"
        },
        "deployedBytecode": {
          "type": "string",
          "title": "Contract deployed bytecode (optional)"
        },
        "constructor": {
          "$ref": "#/definitions/abiMethod",
          "title": "Constructor of the contract"
        }
      },
      "title": "Contract holds contract information"
    },
    "abiContractId": {
      "type": "object",
      "properties": {
        "registry": {
          "type": "string",
          "title": "Registry of contract\ne.g. \"registry.consensys.net/orchestrate\""
        },
        "name": {
          "type": "string",
          "title": "Name of contract\ne.g. \"ERC20\""
        },
        "tag": {
          "type": "string",
          "title": "Contract tag\ne.g \"v2.1.3\""
        }
      }
    },
    "abiEvent": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "title": "Name of the event to call on contract\ne.g \"Transfer(address, address, uint256)\""
        },
        "abi": {
          "type": "string",
          "title": "ABI of the method (Optional)"
        }
      },
      "title": "Event"
    },
    "abiMethod": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string",
          "title": "Signature of the method to call on contract\ne.g \"transfer(address,uint256)\""
        },
        "abi": {
          "type": "string",
          "title": "ABI of the method (Optional)"
        }
      },
      "title": "Method"
    },
    "commonAccountInstance": {
      "type": "object",
      "properties": {
        "chain_id": {
          "type": "string",
          "title": "Chain ID of the chain"
        },
        "account": {
          "type": "string",
          "title": "Deployment address of the contract"
        }
      },
      "title": "Information about an account on a chain"
    },
    "contractregistryDeleteArtifactResponse": {
      "type": "object"
    },
    "contractregistryDeregisterContractResponse": {
      "type": "object"
    },
    "contractregistryGetCatalogResponse": {
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "contractregistryGetContractABIResponse": {
      "type": "object",
      "properties": {
        "abi": {
          "type": "string"
        }
      }
    },
    "contractregistryGetContractBytecodeResponse": {
      "type": "object",
      "properties": {
        "bytecode": {
          "type": "string"
        }
      }
    },
    "contractregistryGetContractDeployedBytecodeResponse": {
      "type": "object",
      "properties": {
        "deployedBytecode": {
          "type": "string"
        }
      }
    },
    "contractregistryGetContractResponse": {
      "type": "object",
      "properties": {
        "contract": {
          "$ref": "#/definitions/abiContract"
        }
      }
    },
    "contractregistryGetEventsBySigHashResponse": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "title": "Contains the ABI of the exact event if the deployed contract has a known bytecode"
        },
        "defaultEvents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Contains the ABIs of the potential event(s) if the deployed contract is not known"
        }
      }
    },
    "contractregistryGetMethodSignaturesResponse": {
      "type": "object",
      "properties": {
        "signatures": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "contractregistryGetMethodsBySelectorResponse": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "title": "Contains the ABI of the exact method if the deployed contract has a known bytecode"
        },
        "defaultMethods": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Contains the ABIs of the potential methods(s) if the deployed contract is not known"
        }
      }
    },
    "contractregistryGetTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "contractregistryRegisterContractRequest": {
      "type": "object",
      "example": {
        "contract": {
          "id": {
            "name": "SimpleToken",
            "tag": "v0.0.1"
          },
          "abi": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]",
          "bytecode": "0x608060405234801561001057600080fd5b506040518060400160405280600b81526020017f53696d706c65546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f53494d0000000000000000000000000000000000000000000000000000000000815250601282600390805190602001906100959291906101a5565b5081516100a99060049060208501906101a5565b506005805460ff191660ff92909216919091179055506100d590503369021e19e0c9bab24000006100da565b610240565b6001600160a01b0382166100ed57600080fd5b6101068160025461018c60201b6108f71790919060201c565b6002556001600160a01b038216600090815260208181526040909120546101369183906108f761018c821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60008282018381101561019e57600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106101e657805160ff1916838001178555610213565b82800160010185558215610213579182015b828111156102135782518255916020019190600101906101f8565b5061021f929150610223565b5090565b61023d91905b8082111561021f5760008155600101610229565b90565b6109458061024f6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b41146102a5578063a457c2d7146102ad578063a9059cbb146102e6578063dd62ed3e1461031f576100df565b8063313ce56714610231578063395093511461023957806370a0823114610272576100df565b806323b872dd116100bd57806323b872dd146101c85780632e0f26251461020b5780632ff2e9dc14610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec61035a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561040e565b604080519115158252519081900360200190f35b6101b66104a4565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356104aa565b61021361059a565b6040805160ff9092168252519081900360200190f35b6101b661059f565b6102136105ad565b61019a6004803603604081101561024f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b6565b6101b66004803603602081101561028857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661068b565b6100ec6106b3565b61019a600480360360408110156102c357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610732565b61019a600480360360408110156102fc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610795565b6101b66004803603604081101561033557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff831661043057600080fd5b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602090815260408083203384529091528120546104eb908363ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff851660009081526001602090815260408083203384529091529020556105278484846107f8565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b601281565b69021e19e0c9bab240000081565b60055460ff1690565b600073ffffffffffffffffffffffffffffffffffffffff83166105d857600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6108f716565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b600073ffffffffffffffffffffffffffffffffffffffff831661075457600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6107e316565b60006107a23384846107f8565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6000828211156107f257600080fd5b50900390565b73ffffffffffffffffffffffffffffffffffffffff821661081857600080fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461084e908263ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610890908263ffffffff6108f716565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561090957600080fd5b939250505056fea265627a7a7230582021b9409d39dc5497346129b4f8ae9ad87628e9733e96a78af60101187c5cfd8b64736f6c634300050a0032",
          "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c8063313ce5671161008c57806395d89b411161006657806395d89b41146102a5578063a457c2d7146102ad578063a9059cbb146102e6578063dd62ed3e1461031f576100df565b8063313ce56714610231578063395093511461023957806370a0823114610272576100df565b806323b872dd116100bd57806323b872dd146101c85780632e0f26251461020b5780632ff2e9dc14610229576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101ae575b600080fd5b6100ec61035a565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61019a6004803603604081101561017757600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561040e565b604080519115158252519081900360200190f35b6101b66104a4565b60408051918252519081900360200190f35b61019a600480360360608110156101de57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356104aa565b61021361059a565b6040805160ff9092168252519081900360200190f35b6101b661059f565b6102136105ad565b61019a6004803603604081101561024f57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001356105b6565b6101b66004803603602081101561028857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661068b565b6100ec6106b3565b61019a600480360360408110156102c357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610732565b61019a600480360360408110156102fc57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610795565b6101b66004803603604081101561033557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107ab565b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600073ffffffffffffffffffffffffffffffffffffffff831661043057600080fd5b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602090815260408083203384529091528120546104eb908363ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff851660009081526001602090815260408083203384529091529020556105278484846107f8565b73ffffffffffffffffffffffffffffffffffffffff84166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b601281565b69021e19e0c9bab240000081565b60055460ff1690565b600073ffffffffffffffffffffffffffffffffffffffff83166105d857600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6108f716565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104045780601f106103d957610100808354040283529160200191610404565b600073ffffffffffffffffffffffffffffffffffffffff831661075457600080fd5b33600090815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152902054610619908363ffffffff6107e316565b60006107a23384846107f8565b50600192915050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6000828211156107f257600080fd5b50900390565b73ffffffffffffffffffffffffffffffffffffffff821661081857600080fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205461084e908263ffffffff6107e316565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610890908263ffffffff6108f716565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561090957600080fd5b939250505056fea265627a7a7230582021b9409d39dc5497346129b4f8ae9ad87628e9733e96a78af60101187c5cfd8b64736f6c634300050a0032"
        }
      },
      "properties": {
        "contract": {
          "$ref": "#/definitions/abiContract",
          "description": "contract payload",
          "title": "Contract to register"
        }
      },
      "title": "Register Contract request",
      "required": [
        "contract"
      ]
    },
    "contractregistryRegisterContractResponse": {
      "type": "object",
      "example": {}
    },
    "contractregistrySetAccountCodeHashResponse": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    },
    "JWTAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "JWTAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "externalDocs": {
    "description": "ðŸ“’ Documentation of PegaSys Orchestrate",
    "url": "https://docs.orchestrate.pegasys.tech/en/latest/"
  }
}
