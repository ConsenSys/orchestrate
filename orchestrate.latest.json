{"swagger":"2.0","info":{"title":"ConsenSys Codefi Orchestrate REST API","version":"latest-da4d1ad4","contact":{"name":"ConsenSys Codefi Orchestrate","email":"orchestrate@consensys.net"}},"externalDocs":{"description":"Documentation of ConsenSys Codefi Orchestrate","url":"https://docs.orchestrate.consensys.net/"},"paths":{"/accounts":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Get a list of filtered accounts","consumes":["application/json"],"produces":["application/json"],"tags":["Accounts"],"summary":"Search accounts by provided filters","parameters":[{"type":"array","items":{"type":"string"},"collectionFormat":"csv","description":"List of account aliases","name":"aliases","in":"query"}],"responses":{"200":{"description":"List of identities found","schema":{"type":"array","items":{"type":"object","properties":{"address":{"description":"Address of the account.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"alias":{"description":"Alias of the account.","type":"string","example":"personal-account"},"attributes":{"description":"Additional information attached to the account.","type":"object","additionalProperties":{"type":"string"}},"compressedPublicKey":{"description":"Compressed public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447"},"createdAt":{"description":"Date and time at which the account was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"ownerID":{"description":"ID of the account owner.","type":"string","example":"foo"},"publicKey":{"description":"Public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"myQKMStoreID"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenantFoo"},"updatedAt":{"description":"Date and time at which the account details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"}}}}},"400":{"description":"Invalid filter in the request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates a new Account","consumes":["application/json"],"produces":["application/json"],"tags":["Accounts"],"summary":"Creates a new Account","parameters":[{"description":"Account creation request","name":"request","in":"body","required":true,"schema":{"type":"object","properties":{"alias":{"description":"Alias of the account.","type":"string","example":"personal-account"},"attributes":{"description":"Additional information attached to the account.","type":"object","additionalProperties":{"type":"string"}},"chain":{"description":"Name of the chain. This value should match the chain name defined in the chain creation.","type":"string","example":"besu"},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"qkmStoreID"}}}}],"responses":{"200":{"description":"Account object","schema":{"type":"object","properties":{"address":{"description":"Address of the account.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"alias":{"description":"Alias of the account.","type":"string","example":"personal-account"},"attributes":{"description":"Additional information attached to the account.","type":"object","additionalProperties":{"type":"string"}},"compressedPublicKey":{"description":"Compressed public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447"},"createdAt":{"description":"Date and time at which the account was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"ownerID":{"description":"ID of the account owner.","type":"string","example":"foo"},"publicKey":{"description":"Public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"myQKMStoreID"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenantFoo"},"updatedAt":{"description":"Date and time at which the account details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/accounts/import":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates a new Account by importing a private key","consumes":["application/json"],"produces":["application/json"],"tags":["Accounts"],"summary":"Creates a new Account by importing a private key","parameters":[{"description":"Account creation request","name":"request","in":"body","required":true,"schema":{"type":"object","required":["privateKey"],"properties":{"alias":{"description":"Alias of the account.","type":"string","example":"personal-account"},"attributes":{"description":"Additional information attached to the account.","type":"object","additionalProperties":{"type":"string"}},"chain":{"description":"Name of the chain. This value should match the chain name defined in the chain creation.","type":"string","example":"quorum"},"privateKey":{"description":"Private key of the account.","type":"string","example":"0x66232652FDFFD802B7252A456DBD8F3ECC0352BBDE76C23B40AFE8AEBD714E2D"},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"qkmStoreID"}}}}],"responses":{"200":{"description":"Account object","schema":{"type":"object","properties":{"address":{"description":"Address of the account.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"alias":{"description":"Alias of the account.","type":"string","example":"personal-account"},"attributes":{"description":"Additional information attached to the account.","type":"object","additionalProperties":{"type":"string"}},"compressedPublicKey":{"description":"Compressed public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447"},"createdAt":{"description":"Date and time at which the account was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"ownerID":{"description":"ID of the account owner.","type":"string","example":"foo"},"publicKey":{"description":"Public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"myQKMStoreID"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenantFoo"},"updatedAt":{"description":"Date and time at which the account details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"405":{"description":"Not allowed","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable entity","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/accounts/verify-message":{"post":{"description":"Verifies if a message has been signed by the Ethereum account passed as argument","consumes":["application/json"],"tags":["Accounts"],"summary":"Verifies the signature of a message (EIP-191)","parameters":[{"description":"signature and message to verify","name":"request","in":"body","required":true,"schema":{"type":"object","required":["address","data","signature"],"properties":{"address":{"type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"data":{"type":"string","example":"0xfeaeee..."},"signature":{"type":"string","example":"0x6019a3c8..."}}}}],"responses":{"204":{"description":""},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Invalid parameters","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/accounts/verify-typed-data":{"post":{"description":"Verifies if a typed data message has been signed by the Ethereum account passed as argument following the EIP-712 standard","consumes":["application/json"],"tags":["Accounts"],"summary":"Verifies the signature of a typed data message following the EIP-712 standard","parameters":[{"description":"Typed data to sign","name":"request","in":"body","required":true,"schema":{"type":"object","required":["address","data","signature"],"properties":{"address":{"type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"data":{"type":"object","required":["domainSeparator","message","messageType","types"],"properties":{"domainSeparator":{"type":"object","required":["chainID","name","version"],"properties":{"chainID":{"type":"integer","example":1},"name":{"type":"string","example":"MyDApp"},"salt":{"type":"string","example":"some-random-string"},"verifyingContract":{"type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"version":{"type":"string","example":"v1.0.0"}}},"message":{"type":"object","additionalProperties":true},"messageType":{"type":"string","example":"Mail"},"types":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","required":["name","type"],"properties":{"name":{"type":"string","example":"fieldName"},"type":{"type":"string","example":"string"}}}}}}},"signature":{"type":"string","example":"0x6019a3c8..."}}}}],"responses":{"204":{"description":""},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Invalid parameters","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/accounts/{address}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Fetch a single account by address","produces":["application/json"],"tags":["Accounts"],"summary":"Fetch a account by address","parameters":[{"type":"string","description":"selected account address","name":"address","in":"path","required":true}],"responses":{"200":{"description":"Account found","schema":{"type":"object","properties":{"address":{"description":"Address of the account.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"alias":{"description":"Alias of the account.","type":"string","example":"personal-account"},"attributes":{"description":"Additional information attached to the account.","type":"object","additionalProperties":{"type":"string"}},"compressedPublicKey":{"description":"Compressed public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447"},"createdAt":{"description":"Date and time at which the account was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"ownerID":{"description":"ID of the account owner.","type":"string","example":"foo"},"publicKey":{"description":"Public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"myQKMStoreID"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenantFoo"},"updatedAt":{"description":"Date and time at which the account details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Account not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"patch":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Update a specific account by Address","consumes":["application/json"],"produces":["application/json"],"tags":["Accounts"],"summary":"Update account by Address","parameters":[{"description":"Account update request","name":"request","in":"body","required":true,"schema":{"type":"object","properties":{"alias":{"description":"Alias of the account.","type":"string","example":"personal-account"},"attributes":{"description":"Additional information attached to the account.","type":"object","additionalProperties":{"type":"string"}},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"qkmStoreID"}}}},{"type":"string","description":"selected account address","name":"address","in":"path","required":true}],"responses":{"200":{"description":"Account found","schema":{"type":"object","properties":{"address":{"description":"Address of the account.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"alias":{"description":"Alias of the account.","type":"string","example":"personal-account"},"attributes":{"description":"Additional information attached to the account.","type":"object","additionalProperties":{"type":"string"}},"compressedPublicKey":{"description":"Compressed public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447"},"createdAt":{"description":"Date and time at which the account was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"ownerID":{"description":"ID of the account owner.","type":"string","example":"foo"},"publicKey":{"description":"Public key of the account.","type":"string","example":"0x048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"myQKMStoreID"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenantFoo"},"updatedAt":{"description":"Date and time at which the account details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Account not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/accounts/{address}/sign-message":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Sign message, following EIP-191, data using selected account","consumes":["application/json"],"produces":["text/plain"],"tags":["Accounts"],"summary":"Sign Message (EIP-191)","parameters":[{"description":"Payload to sign","name":"request","in":"body","required":true,"schema":{"type":"object","required":["message"],"properties":{"message":{"type":"string","example":"0xfeade..."},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"qkmStoreID"}}}},{"type":"string","description":"selected account address","name":"address","in":"path","required":true}],"responses":{"200":{"description":"Signed payload","schema":{"type":"string"}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Account not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/accounts/{address}/sign-typed-data":{"post":{"description":"Signs typed data using ECDSA and the private key of an existing account following the EIP-712 standard","consumes":["application/json"],"produces":["text/plain"],"tags":["Accounts"],"summary":"Signs typed data using an existing account following the EIP-712 standard","parameters":[{"description":"Typed data to sign","name":"request","in":"body","required":true,"schema":{"type":"object","required":["domainSeparator","message","messageType","types"],"properties":{"domainSeparator":{"type":"object","required":["chainID","name","version"],"properties":{"chainID":{"type":"integer","example":1},"name":{"type":"string","example":"MyDApp"},"salt":{"type":"string","example":"some-random-string"},"verifyingContract":{"type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"version":{"type":"string","example":"v1.0.0"}}},"message":{"type":"object","additionalProperties":true},"messageType":{"type":"string","example":"Mail"},"storeID":{"description":"ID of the Quorum Key Manager store containing the account.","type":"string","example":"qkmStoreID"},"types":{"type":"object","additionalProperties":{"type":"array","items":{"type":"object","required":["name","type"],"properties":{"name":{"type":"string","example":"fieldName"},"type":{"type":"string","example":"string"}}}}}}}},{"type":"string","description":"selected account address","name":"address","in":"path","required":true}],"responses":{"200":{"description":"Signed payload","schema":{"type":"string"}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Account not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Invalid parameters","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/chains":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"produces":["application/json"],"tags":["Chains"],"summary":"Retrieves a list of all registered chains","responses":{"200":{"description":"OK","schema":{"type":"array","items":{"allOf":[{"type":"object","properties":{"chainID":{"description":"[Ethereum chain ID](https://besu.hyperledger.org/en/latest/Concepts/NetworkID-And-ChainID/).","type":"integer","example":2445},"createdAt":{"description":"Date and time at which the chain was registered.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"listenerBlockTimeDuration":{"description":"Time to wait before trying to fetch a new mined block.","type":"string","example":"5s"},"listenerDepth":{"description":"Block depth after which the Transaction Listener considers a block final and processes it.","type":"integer","example":0},"name":{"description":"Name of the chain.","type":"string","example":"mainnet"},"ownerID":{"description":"ID of the chain owner.","type":"string","example":"foo"},"privateTxManagerURL":{"description":"Private tx manager required by go-quorum for sending private txs","type":"string","example":"http://go-quorum/tessera:9000"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenant"},"updatedAt":{"description":"Date and time at which the chain details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"urls":{"description":"URLs of Ethereum nodes connected to.","type":"array","items":{"type":"string"},"example":["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]},"uuid":{"description":"UUID of the registered chain.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}},{"type":"object","properties":{"privateTxManager":{"type":"object","properties":{"chainUUID":{"description":"UUID of the registered chain.","type":"string"},"createdAt":{"description":"Date and time that the private transaction manager was registered with the chain.","type":"string"},"type":{"description":"Currently supports `Tessera` and `EEA`.","type":"string"},"url":{"description":"Transaction manager endpoint.","type":"string"},"uuid":{"description":"UUID of the private transaction manager.","type":"string"}}}}}]}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"consumes":["application/json"],"produces":["application/json"],"tags":["Chains"],"summary":"Registers a new chain","parameters":[{"description":"Chain registration request.","name":"request","in":"body","required":true,"schema":{"allOf":[{"type":"object","required":["name","urls"],"properties":{"labels":{"description":"List of custom labels. Useful for adding custom information to the chain.","type":"object","additionalProperties":{"type":"string"}},"listener":{"type":"object","properties":{"blockTimeDuration":{"description":"Time to wait before trying to fetch a new mined block (for example `1s` or `1m`, default is `5s`).","type":"string","example":"1s"},"depth":{"description":"Block depth after which the Transaction Listener considers a block final and processes it (default 0).","type":"integer","example":0}}},"name":{"description":"Name of the chain. Must be unique.","type":"string","example":"mainnet"},"privateTxManagerURL":{"description":"Private tx manager required by go-quorum for sending private txs","type":"string","example":"http://go-quorum/tessera:9000"},"urls":{"description":"List of URLs of Ethereum nodes to connect to.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]}}},{"type":"object","properties":{"listener":{"type":"object","properties":{"blockTimeDuration":{"description":"Time to wait before trying to fetch a new mined block (for example `1s` or `1m`, default is `5s`).","type":"string","example":"1s"},"depth":{"description":"Block depth after which the Transaction Listener considers a block final and processes it (default 0).","type":"integer","example":0}}}}}]}}],"responses":{"200":{"description":"OK","schema":{"allOf":[{"type":"object","properties":{"chainID":{"description":"[Ethereum chain ID](https://besu.hyperledger.org/en/latest/Concepts/NetworkID-And-ChainID/).","type":"integer","example":2445},"createdAt":{"description":"Date and time at which the chain was registered.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"listenerBlockTimeDuration":{"description":"Time to wait before trying to fetch a new mined block.","type":"string","example":"5s"},"listenerDepth":{"description":"Block depth after which the Transaction Listener considers a block final and processes it.","type":"integer","example":0},"name":{"description":"Name of the chain.","type":"string","example":"mainnet"},"ownerID":{"description":"ID of the chain owner.","type":"string","example":"foo"},"privateTxManagerURL":{"description":"Private tx manager required by go-quorum for sending private txs","type":"string","example":"http://go-quorum/tessera:9000"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenant"},"updatedAt":{"description":"Date and time at which the chain details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"urls":{"description":"URLs of Ethereum nodes connected to.","type":"array","items":{"type":"string"},"example":["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]},"uuid":{"description":"UUID of the registered chain.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}},{"type":"object","properties":{"privateTxManager":{"type":"object","properties":{"chainUUID":{"description":"UUID of the registered chain.","type":"string"},"createdAt":{"description":"Date and time that the private transaction manager was registered with the chain.","type":"string"},"type":{"description":"Currently supports `Tessera` and `EEA`.","type":"string"},"url":{"description":"Transaction manager endpoint.","type":"string"},"uuid":{"description":"UUID of the private transaction manager.","type":"string"}}}}}]}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/chains/{uuid}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"produces":["application/json"],"tags":["Chains"],"summary":"Retrieves a chain by ID","parameters":[{"type":"string","description":"ID of the chain","name":"uuid","in":"path","required":true}],"responses":{"200":{"description":"OK","schema":{"type":"object","properties":{"chainID":{"description":"[Ethereum chain ID](https://besu.hyperledger.org/en/latest/Concepts/NetworkID-And-ChainID/).","type":"integer","example":2445},"createdAt":{"description":"Date and time at which the chain was registered.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"listenerBlockTimeDuration":{"description":"Time to wait before trying to fetch a new mined block.","type":"string","example":"5s"},"listenerDepth":{"description":"Block depth after which the Transaction Listener considers a block final and processes it.","type":"integer","example":0},"name":{"description":"Name of the chain.","type":"string","example":"mainnet"},"ownerID":{"description":"ID of the chain owner.","type":"string","example":"foo"},"privateTxManagerURL":{"description":"Private tx manager required by go-quorum for sending private txs","type":"string","example":"http://go-quorum/tessera:9000"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenant"},"updatedAt":{"description":"Date and time at which the chain details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"urls":{"description":"URLs of Ethereum nodes connected to.","type":"array","items":{"type":"string"},"example":["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]},"uuid":{"description":"UUID of the registered chain.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Chain not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"delete":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"produces":["application/json"],"tags":["Chains"],"summary":"Deletes a chain by ID","parameters":[{"type":"string","description":"ID of the chain","name":"uuid","in":"path","required":true}],"responses":{"204":{"description":""},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Chain not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"patch":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"consumes":["application/json"],"produces":["application/json"],"tags":["Chains"],"summary":"Updates a chain by ID","parameters":[{"type":"string","description":"ID of the chain","name":"uuid","in":"path","required":true},{"description":"Chain update request","name":"request","in":"body","required":true,"schema":{"allOf":[{"type":"object","properties":{"labels":{"description":"List of custom labels. Useful for adding custom information to the chain.","type":"object","additionalProperties":{"type":"string"}},"listener":{"type":"object","properties":{"blockTimeDuration":{"description":"Time to wait before trying to fetch a new mined block (for example `1s` or `1m`, default is `5s`).","type":"string","example":"1s"},"currentBlock":{"description":"Latest block number fetched.","type":"integer","example":1},"depth":{"description":"Block depth after which the Transaction Listener considers a block final and processes it (default 0).","type":"integer","example":0},"externalTxEnabled":{"description":"Whether to listen to external transactions not crafted by Orchestrate (default `false`).","type":"boolean","example":false}}},"name":{"description":"Name of the chain. Must be unique.","type":"string","example":"mainnet"}}},{"type":"object","properties":{"listener":{"type":"object","properties":{"blockTimeDuration":{"description":"Time to wait before trying to fetch a new mined block (for example `1s` or `1m`, default is `5s`).","type":"string","example":"1s"},"currentBlock":{"description":"Latest block number fetched.","type":"integer","example":1},"depth":{"description":"Block depth after which the Transaction Listener considers a block final and processes it (default 0).","type":"integer","example":0},"externalTxEnabled":{"description":"Whether to listen to external transactions not crafted by Orchestrate (default `false`).","type":"boolean","example":false}}}}}]}}],"responses":{"200":{"description":"OK","schema":{"type":"object","properties":{"chainID":{"description":"[Ethereum chain ID](https://besu.hyperledger.org/en/latest/Concepts/NetworkID-And-ChainID/).","type":"integer","example":2445},"createdAt":{"description":"Date and time at which the chain was registered.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"listenerBlockTimeDuration":{"description":"Time to wait before trying to fetch a new mined block.","type":"string","example":"5s"},"listenerDepth":{"description":"Block depth after which the Transaction Listener considers a block final and processes it.","type":"integer","example":0},"name":{"description":"Name of the chain.","type":"string","example":"mainnet"},"ownerID":{"description":"ID of the chain owner.","type":"string","example":"foo"},"privateTxManagerURL":{"description":"Private tx manager required by go-quorum for sending private txs","type":"string","example":"http://go-quorum/tessera:9000"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenant"},"updatedAt":{"description":"Date and time at which the chain details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"urls":{"description":"URLs of Ethereum nodes connected to.","type":"array","items":{"type":"string"},"example":["https://mainnet.infura.io/v3/a73136601e6f4924a0baa4ed880b535e"]},"uuid":{"description":"UUID of the registered chain.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Chain not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/contracts":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Returns a list of all registered contracts","produces":["application/json"],"tags":["Contracts"],"summary":"Returns a list of all registered contracts","responses":{"200":{"description":"Registered contract List","schema":{"type":"array","items":{"type":"string"}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Register new solidity contract in Orchestrate","consumes":["application/json"],"produces":["application/json"],"tags":["Contracts"],"summary":"Register new solidity contract","parameters":[{"description":"Contract register request","name":"request","in":"body","required":true,"schema":{"type":"object","required":["abi","name"],"properties":{"abi":{"description":"ABI of the contract."},"bytecode":{"description":"Bytecode of the contract.","type":"string","example":"0x6080604052348015600f57600080f"},"deployedBytecode":{"description":"Deployed bytecode of the contract.","type":"string","example":"0x6080604052348015600f57600080f"},"name":{"description":"Name of the contract.","type":"string","example":"ERC20"},"tag":{"description":"Optional tag attached to the contract.","type":"string","example":"v1.0.0"}}}}],"responses":{"200":{"description":"Contract object","schema":{"allOf":[{"type":"object","properties":{"abi":{"description":"ABI of the contract.","type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"bytecode":{"description":"Bytecode of the contract.","type":"string","example":"0x6080604052348015600f57600080f..."},"constructor":{"description":"Contract constructor.","type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}},"deployedBytecode":{"description":"Deployed bytecode of the contract.","type":"string","example":"0x6080604052348015600f57600080f..."},"events":{"description":"List of contract events.","type":"array","items":{"type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}}},"methods":{"description":"List of contract methods.","type":"array","items":{"type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}}},"name":{"description":"Name of the contract.","type":"string","example":"ERC20"},"tag":{"description":"URL of the contract's registry.","type":"string","example":"v1.0.0"}}},{"type":"object","properties":{"constructor":{"type":"object","properties":{"abi":{"type":"string"},"signature":{"type":"string"}}},"events":{"type":"array","items":{"type":"object","properties":{"abi":{"type":"string"},"signature":{"type":"string"}}}},"methods":{"type":"array","items":{"type":"object","properties":{"abi":{"type":"string"},"signature":{"type":"string"}}}}}}]}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/contracts/accounts/{chain_id}/{address}":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Retrieve events using hash of signature","produces":["application/json"],"tags":["Contracts"],"summary":"Set the codeHash of the given contract address","parameters":[{"description":"Contract code hash request","name":"request","in":"body","required":true,"schema":{"type":"object","required":["code_hash"],"properties":{"code_hash":{"description":"Contract code hash to set.","type":"string","example":"0x6080604052348015600f57600080f"}}}},{"type":"string","description":"contract deployed address","name":"address","in":"path","required":true},{"type":"string","description":"network chain id","name":"chain_id","in":"path","required":true}],"responses":{"200":{"description":"List of events","schema":{"type":"array","items":{"type":"string"}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/contracts/accounts/{chain_id}/{address}/events":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Retrieve events using hash of signature","produces":["application/json"],"tags":["Contracts"],"summary":"Retrieve events using hash of signature","parameters":[{"type":"string","description":"contract deployed address","name":"address","in":"path","required":true},{"type":"string","description":"network chain id","name":"chain_id","in":"path","required":true},{"type":"string","description":"event sigh hash value","name":"sign_hash","in":"query","required":true}],"responses":{"200":{"description":"List of events","schema":{"type":"object","properties":{"defaultEvents":{"description":"Default contract event names.","type":"array","items":{"type":"string"},"example":["[{anonymous:false","inputs:[{indexed:true","name:from","type:address}","{indexed:true","name:to","type:address}","{indexed:false","name:value","type:uint256}]","name:Transfer","type:event}","..."]},"event":{"description":"Contract event name.","type":"string","example":"{anonymous:false,inputs:[{indexed:true,name:from,type:address},{indexed:true,name:to,type:address},{indexed:false,name:value,type:uint256}],name:Transfer,type:event}"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Events not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/contracts/search":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Search contract by codeHash or signHash","consumes":["application/json"],"produces":["application/json"],"tags":["Contracts"],"summary":"Search contract","parameters":[{"type":"string","description":"contract code hash","name":"code_hash","in":"query","required":true},{"type":"string","description":"contract address","name":"address","in":"query","required":true}],"responses":{"200":{"description":"Contract object","schema":{"type":"object","properties":{"abi":{"description":"ABI of the contract.","type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"bytecode":{"description":"Bytecode of the contract.","type":"string","example":"0x6080604052348015600f57600080f..."},"constructor":{"description":"Contract constructor.","type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}},"deployedBytecode":{"description":"Deployed bytecode of the contract.","type":"string","example":"0x6080604052348015600f57600080f..."},"events":{"description":"List of contract events.","type":"array","items":{"type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}}},"methods":{"description":"List of contract methods.","type":"array","items":{"type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}}},"name":{"description":"Name of the contract.","type":"string","example":"ERC20"},"tag":{"description":"URL of the contract's registry.","type":"string","example":"v1.0.0"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/contracts/{name}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Returns a list of all tags from given contract name","produces":["application/json"],"tags":["Contracts"],"summary":"Returns a list of all tags","responses":{"200":{"description":"List of tags","schema":{"type":"array","items":{"type":"string"}}},"404":{"description":"contract not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/contracts/{name}/{tag}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Fetch solidity contract data by {name} and {tag}","produces":["application/json"],"tags":["Contracts"],"summary":"Fetch registered contract data","parameters":[{"type":"string","description":"solidity contract registered name","name":"name","in":"path","required":true},{"type":"string","description":"solidity contract registered tag","name":"tag","in":"path","required":true}],"responses":{"200":{"description":"Contract found","schema":{"allOf":[{"type":"object","properties":{"abi":{"description":"ABI of the contract.","type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"bytecode":{"description":"Bytecode of the contract.","type":"string","example":"0x6080604052348015600f57600080f..."},"constructor":{"description":"Contract constructor.","type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}},"deployedBytecode":{"description":"Deployed bytecode of the contract.","type":"string","example":"0x6080604052348015600f57600080f..."},"events":{"description":"List of contract events.","type":"array","items":{"type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}}},"methods":{"description":"List of contract methods.","type":"array","items":{"type":"object","properties":{"abi":{"type":"string","example":"[{anonymous: false, inputs: [{indexed: false, name: account, type: address}, name: MinterAdded, type: event}]}]"},"signature":{"type":"string","example":"transfer(address,uint256)"}}}},"name":{"description":"Name of the contract.","type":"string","example":"ERC20"},"tag":{"description":"URL of the contract's registry.","type":"string","example":"v1.0.0"}}},{"type":"object","properties":{"constructor":{"type":"object","properties":{"abi":{"type":"string"},"signature":{"type":"string"}}},"events":{"type":"array","items":{"type":"object","properties":{"abi":{"type":"string"},"signature":{"type":"string"}}}},"methods":{"type":"array","items":{"type":"object","properties":{"abi":{"type":"string"},"signature":{"type":"string"}}}}}}]}},"404":{"description":"Contract not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/eventstreams":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Get a list of filtered event streams","consumes":["application/json"],"produces":["application/json"],"tags":["Event Streams"],"summary":"Search event streams by provided filters","parameters":[{"type":"array","items":{"type":"string"},"collectionFormat":"csv","description":"List of event stream names","name":"names","in":"query"},{"type":"string","description":"Chain UUID","name":"chain_uuid","in":"query"},{"type":"string","description":"Tenant ID","name":"tenant_id","in":"query"}],"responses":{"200":{"description":"List of event streams found","schema":{"type":"array","items":{"type":"object","properties":{"chainUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"channel":{"type":"string","example":"webhook"},"createdAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string","example":"my-stream"},"ownerID":{"type":"string","example":"foo"},"specs":{},"status":{"type":"string","example":"LIVE"},"tenantID":{"type":"string","example":"foo"},"updatedAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}}},"400":{"description":"Invalid filter in the request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates a new Event stream","consumes":["application/json"],"produces":["application/json"],"tags":["Event Streams"],"summary":"Creates a new Event stream","parameters":[{"description":"Event stream creation request","name":"request","in":"body","required":true,"schema":{"type":"object","required":["channel","name"],"properties":{"chain":{"type":"string","example":"mainnet"},"channel":{"type":"string","example":"webhook"},"kafka":{"type":"object","required":["topic"],"properties":{"topic":{"type":"string","example":"my-notification-topic"}}},"labels":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string","example":"my-webhook-stream"},"webhook":{"type":"object","required":["url"],"properties":{"headers":{"type":"object","additionalProperties":{"type":"string"}},"url":{"type":"string","example":"https://my-event-steam-endpoint.com"}}}}}}],"responses":{"200":{"description":"Event stream object","schema":{"type":"object","properties":{"chainUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"channel":{"type":"string","example":"webhook"},"createdAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string","example":"my-stream"},"ownerID":{"type":"string","example":"foo"},"specs":{},"status":{"type":"string","example":"LIVE"},"tenantID":{"type":"string","example":"foo"},"updatedAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/eventstreams/{uuid}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Fetch a single event stream by uuid","produces":["application/json"],"tags":["Event Streams"],"summary":"Fetch an event stream by uuid","parameters":[{"type":"string","description":"event stream uuid","name":"address","in":"path","required":true}],"responses":{"200":{"description":"Event stream found","schema":{"type":"object","properties":{"chainUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"channel":{"type":"string","example":"webhook"},"createdAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string","example":"my-stream"},"ownerID":{"type":"string","example":"foo"},"specs":{},"status":{"type":"string","example":"LIVE"},"tenantID":{"type":"string","example":"foo"},"updatedAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Event stream not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"delete":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"produces":["application/json"],"tags":["Event Streams"],"summary":"Deletes an event stream by uuid","parameters":[{"type":"string","description":"uuid of the event stream","name":"uuid","in":"path","required":true}],"responses":{"204":{"description":""},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Event Stream not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"patch":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Update a specific event stream by uuid","consumes":["application/json"],"produces":["application/json"],"tags":["Event Streams"],"summary":"Update event stream by uuid","parameters":[{"description":"Event stream update request","name":"request","in":"body","required":true,"schema":{"type":"object","properties":{"headers":{"type":"object","additionalProperties":{"type":"string"}},"labels":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string","example":"my-kafka-stream"},"status":{"type":"string","example":"PAUSED"},"topic":{"type":"string","example":"my-notification-topic"},"url":{"type":"string","example":"https://my-event-steam-endpoint.com"}}}},{"type":"string","description":"event stream uuid","name":"uuid","in":"path","required":true}],"responses":{"200":{"description":"Event stream found","schema":{"type":"object","properties":{"chainUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"channel":{"type":"string","example":"webhook"},"createdAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"type":"object","additionalProperties":{"type":"string"}},"name":{"type":"string","example":"my-stream"},"ownerID":{"type":"string","example":"foo"},"specs":{},"status":{"type":"string","example":"LIVE"},"tenantID":{"type":"string","example":"foo"},"updatedAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Account not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/eventstreams/{uuid}/resume":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"produces":["application/json"],"tags":["Event Streams"],"summary":"Resumes an event stream by uuid","parameters":[{"type":"string","description":"uuid of the event stream","name":"uuid","in":"path","required":true}],"responses":{"204":{"description":""},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Event Stream not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/eventstreams/{uuid}/suspend":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"produces":["application/json"],"tags":["Event Streams"],"summary":"Suspends an event stream by uuid","parameters":[{"type":"string","description":"uuid of the event stream","name":"uuid","in":"path","required":true}],"responses":{"204":{"description":""},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Event Stream not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/faucets":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"produces":["application/json"],"tags":["Faucets"],"summary":"Retrieves a list of all registered faucets","responses":{"200":{"description":"OK","schema":{"type":"array","items":{"type":"object","properties":{"amount":{"description":"Amount, in Wei, sent to the beneficiary on each funding transaction.","type":"string","example":"0xD529AE9E860000"},"chainRule":{"description":"Name of the chain on which the faucet is registered.","type":"string","example":"mainnet"},"cooldown":{"description":"Waiting time in between two funding transactions to the same beneficiary.","type":"string","example":"10s"},"createdAt":{"description":"Date and time at which the faucet was registered.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"creditorAccount":{"description":"Address of the faucet creditor's account.","type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"maxBalance":{"description":"Expected maximum balance of beneficiary. It won't fund past this value.","type":"string","example":"0x16345785D8A0000"},"name":{"description":"Name of the faucet.","type":"string","example":"faucet-mainnet"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"updatedAt":{"description":"Date and time at which the faucet details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the faucet.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"consumes":["application/json"],"produces":["application/json"],"tags":["Faucets"],"summary":"Registers a new faucet","parameters":[{"description":"Faucet registration request","name":"request","in":"body","required":true,"schema":{"type":"object","required":["amount","chainRule","cooldown","creditorAccount","maxBalance","name"],"properties":{"amount":{"description":"Amount, in Wei, sent to the beneficiary on each funding transaction.","type":"string","example":"0xF4240"},"chainRule":{"description":"Name of the chain on which to register the faucet.","type":"string","example":"mainnet"},"cooldown":{"description":"Waiting time in between two funding transactions to the same beneficiary.","type":"string","example":"10s"},"creditorAccount":{"description":"Address of the faucet creditor's account.","type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"maxBalance":{"description":"Expected maximum balance of beneficiary. It won't fund past this value.","type":"string","example":"0x254582f40"},"name":{"description":"Name of the faucet.","type":"string","example":"faucet-mainnet"}}}}],"responses":{"200":{"description":"OK","schema":{"type":"object","properties":{"amount":{"description":"Amount, in Wei, sent to the beneficiary on each funding transaction.","type":"string","example":"0xD529AE9E860000"},"chainRule":{"description":"Name of the chain on which the faucet is registered.","type":"string","example":"mainnet"},"cooldown":{"description":"Waiting time in between two funding transactions to the same beneficiary.","type":"string","example":"10s"},"createdAt":{"description":"Date and time at which the faucet was registered.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"creditorAccount":{"description":"Address of the faucet creditor's account.","type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"maxBalance":{"description":"Expected maximum balance of beneficiary. It won't fund past this value.","type":"string","example":"0x16345785D8A0000"},"name":{"description":"Name of the faucet.","type":"string","example":"faucet-mainnet"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"updatedAt":{"description":"Date and time at which the faucet details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the faucet.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable entity","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/faucets/{uuid}":{"get":{"produces":["application/json"],"tags":["Faucets"],"summary":"Retrieves a faucet by ID","parameters":[{"type":"string","description":"ID of the faucet","name":"uuid","in":"path","required":true}],"responses":{"200":{"description":"OK","schema":{"type":"object","properties":{"amount":{"description":"Amount, in Wei, sent to the beneficiary on each funding transaction.","type":"string","example":"0xD529AE9E860000"},"chainRule":{"description":"Name of the chain on which the faucet is registered.","type":"string","example":"mainnet"},"cooldown":{"description":"Waiting time in between two funding transactions to the same beneficiary.","type":"string","example":"10s"},"createdAt":{"description":"Date and time at which the faucet was registered.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"creditorAccount":{"description":"Address of the faucet creditor's account.","type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"maxBalance":{"description":"Expected maximum balance of beneficiary. It won't fund past this value.","type":"string","example":"0x16345785D8A0000"},"name":{"description":"Name of the faucet.","type":"string","example":"faucet-mainnet"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"updatedAt":{"description":"Date and time at which the faucet details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the faucet.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"404":{"description":"Faucet not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"delete":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"tags":["Faucets"],"summary":"Deletes a faucet by ID","parameters":[{"type":"string","description":"ID of the faucet","name":"uuid","in":"path","required":true}],"responses":{"204":{"description":""},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Faucet not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"patch":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"consumes":["application/json"],"produces":["application/json"],"tags":["Faucets"],"summary":"Updates a faucet by ID","parameters":[{"type":"string","description":"ID of the faucet","name":"uuid","in":"path","required":true},{"description":"Faucet update request","name":"request","in":"body","required":true,"schema":{"type":"object","properties":{"amount":{"description":"Amount, in Wei, sent to the beneficiary on each funding transaction.","type":"string","example":"0x254582f40"},"chainRule":{"description":"Name of the chain on which to register the faucet.","type":"string","example":"mainnet"},"cooldown":{"description":"Waiting time in between two funding transactions to the same beneficiary.","type":"string","example":"10s"},"creditorAccount":{"description":"Address of the faucet creditor's account.","type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"maxBalance":{"description":"Expected maximum balance of beneficiary. It won't fund past this value.","type":"string","example":"0x254582f40"},"name":{"description":"Name of the faucet.","type":"string","example":"faucet-mainnet"}}}}],"responses":{"200":{"description":"OK","schema":{"type":"object","properties":{"amount":{"description":"Amount, in Wei, sent to the beneficiary on each funding transaction.","type":"string","example":"0xD529AE9E860000"},"chainRule":{"description":"Name of the chain on which the faucet is registered.","type":"string","example":"mainnet"},"cooldown":{"description":"Waiting time in between two funding transactions to the same beneficiary.","type":"string","example":"10s"},"createdAt":{"description":"Date and time at which the faucet was registered.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"creditorAccount":{"description":"Address of the faucet creditor's account.","type":"string","example":"0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18"},"maxBalance":{"description":"Expected maximum balance of beneficiary. It won't fund past this value.","type":"string","example":"0x16345785D8A0000"},"name":{"description":"Name of the faucet.","type":"string","example":"faucet-mainnet"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"updatedAt":{"description":"Date and time at which the faucet details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the faucet.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Faucet not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable entity","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/jobs":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Get a list of filtered jobs","consumes":["application/json"],"produces":["application/json"],"tags":["Jobs"],"summary":"Search jobs by provided filters","parameters":[{"type":"array","items":{"type":"string"},"collectionFormat":"csv","description":"List of transaction hashes","name":"tx_hashes","in":"query"},{"type":"string","description":"Chain UUID","name":"chain_uuid","in":"query"}],"responses":{"200":{"description":"List of Jobs found","schema":{"type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}}},"400":{"description":"Invalid filter in the request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates a new job as part of an already created schedule","consumes":["application/json"],"produces":["application/json"],"tags":["Jobs"],"summary":"Creates a new Job","parameters":[{"description":"Job creation request","name":"request","in":"body","required":true,"schema":{"type":"object","required":["chainUUID","scheduleUUID","transaction","type"],"properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which to create the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which to create the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object"}},"data":{"type":"string","example":"0xfe378324abcde723"},"enclaveKey":{"type":"string","example":"0xfe378324abcde723"},"from":{"type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"gas":{"type":"integer","example":21000},"gasPrice":{"type":"string","example":"0x5208"},"hash":{"type":"string","example":"0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"},"mandatoryFor":{"type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"maxFeePerGas":{"type":"string","example":"0x4c4b40"},"maxPriorityFeePerGas":{"type":"string","example":"0x59682f00"},"nonce":{"type":"integer","example":1},"privacyFlag":{"type":"integer","example":1},"privacyGroupId":{"type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"privateFor":{"type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"privateFrom":{"type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"raw":{"type":"string","example":"0xfe378324abcde723"},"to":{"type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"transactionType":{"type":"string","enum":["legacy","dynamic_fee"],"example":"dynamic_fee"},"value":{"type":"string","example":"0x59682f00"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"}}}}],"responses":{"200":{"description":"Created Job","schema":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable parameters were sent","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/jobs/{uuid}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Fetch a single job by uuid","produces":["application/json"],"tags":["Jobs"],"summary":"Fetch a job by uuid","parameters":[{"type":"string","description":"UUID of the job","name":"uuid","in":"path","required":true}],"responses":{"200":{"description":"Job found","schema":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"404":{"description":"Job not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"patch":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Update a specific job by UUID\nWARNING: Reserved for advanced users. Orchestrate does not recommend using this endpoint.","consumes":["application/json"],"produces":["application/json"],"tags":["Jobs"],"summary":"Update job by UUID","parameters":[{"description":"Job update request","name":"request","in":"body","required":true,"schema":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"message":{"description":"Update message.","type":"string","example":"Update message"},"receipt":{"type":"object","properties":{"block_hash":{"description":"HASH (32 Bytes) - Hash of the block where this transaction was in.\ne.g. 0x656c34545f90a730a19008c0e7a7cd4fb3895064b48d6d69761bd5abad681056","type":"string"},"block_number":{"description":"QUANTITY - Block number where this transaction was in.","type":"integer"},"bloom":{"description":"DATA (256 Bytes) - Bloom filter of logs/events generated by contracts during transaction execution.","type":"string"},"contract_address":{"description":"DATA (20 Bytes) - The contract address created, if the transaction was a contract creation\ne.g 0xAf84242d70aE9D268E2bE3616ED497BA28A7b62C","type":"string"},"contract_name":{"type":"string"},"contract_tag":{"type":"string"},"cumulative_gas_used":{"description":"QUANTITY - The total amount of gas used when this transaction was executed in the block.","type":"integer"},"effective_gas_price":{"description":"Equal to the actual gas price paid for inclusion","type":"string"},"gas_used":{"description":"QUANTITY - The amount of gas used by this specific transaction alone.","type":"integer"},"logs":{"description":"Array - Array of log objects, which this transaction generated.","type":"array","items":{"type":"object","properties":{"address":{"description":"DATA (20 Bytes) - Address from which log originated\ne.g 0xAf84242d70aE9D268E2bE3616ED497BA28A7b62C","type":"string"},"block_hash":{"description":"DATA (32 Bytes) - Hash of the block where this transaction was in.\ne.g. 0x656c34545f90a730a19008c0e7a7cd4fb3895064b48d6d69761bd5abad681056","type":"string"},"block_number":{"description":"QUANTITY - Block number where this transaction was in","type":"integer"},"data":{"description":"DATA - Non-indexed arguments of the log","type":"string"},"decoded_data":{"type":"object","additionalProperties":{"type":"string"}},"event":{"description":"Log decoded data","type":"string"},"index":{"description":"QUANTITY - Integer of the log index position in the block","type":"integer"},"removed":{"description":"Removed field is true if this log was reverted due to a chain reorganisation.","type":"boolean"},"topics":{"description":"Array of DATA (32 Bytes) - Array of 0 to 4 indexed log arguments\ne.g. 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","type":"array","items":{"type":"string"}},"tx_hash":{"description":"DATA (32 Bytes) - Hash of the transaction.\ne.g. 0x3b198bfd5d2907285af009e9ae84a0ecd63677110d89d7e030251acb87f6487e","type":"string"},"tx_index":{"description":"QUANTITY - Integer of the transactions index position in the block.","type":"integer"}}}},"output":{"description":"DATA - RLP-encoded return value of a contract call for EEA Priv Tx\nProvisional till we migrate to TransactionManager Jobs","type":"string"},"post_state":{"description":"DATA (32 Bytes) - State root hash after executing transaction\ne.g. 0x656c34545f90a730a19008c0e7a7cd4fb3895064b48d6d69761bd5abad681056","type":"string"},"privacyGroupId":{"description":"DATA (32 bytes) - EEA public keys or privacy group ID of the recipients.\ne.g Ko2bVqD+nNlNYL5EE7y3IdOnviftjiizpjRt+HTuFBs=","type":"string"},"privateFor":{"description":"e.g [Ko2bVqD+nNlNYL5EE7y3IdOnviftjiizpjRt+HTuFBs=]","type":"array","items":{"type":"string"}},"privateFrom":{"description":"DATA (32 bytes) - EEA public key of the sender.\ne.g A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","type":"string"},"revert_reason":{"description":"DATA - Revert reason if the transaction failed","type":"string"},"status":{"description":"QUANTITY - 0 indicates transaction failure , 1 indicates transaction success.","type":"integer"},"tx_hash":{"description":"HASH (32 Bytes) - Hash of the transaction.\ne.g 0x3b198bfd5d2907285af009e9ae84a0ecd63677110d89d7e030251acb87f6487e","type":"string"},"tx_index":{"description":"QUANTITY - Integer of the transactions index position in the block.","type":"integer"}}},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object"}},"data":{"type":"string","example":"0xfe378324abcde723"},"enclaveKey":{"type":"string","example":"0xfe378324abcde723"},"from":{"type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"gas":{"type":"integer","example":21000},"gasPrice":{"type":"string","example":"0x5208"},"hash":{"type":"string","example":"0xd41551c714c8ec769d2edad9adc250ae955d263da161bf59142b7500eea6715e"},"mandatoryFor":{"type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"maxFeePerGas":{"type":"string","example":"0x4c4b40"},"maxPriorityFeePerGas":{"type":"string","example":"0x59682f00"},"nonce":{"type":"integer","example":1},"privacyFlag":{"type":"integer","example":1},"privacyGroupId":{"type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"privateFor":{"type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"privateFrom":{"type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"raw":{"type":"string","example":"0xfe378324abcde723"},"to":{"type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"transactionType":{"type":"string","enum":["legacy","dynamic_fee"],"example":"dynamic_fee"},"value":{"type":"string","example":"0x59682f00"}}}}}}],"responses":{"200":{"description":"Job found","schema":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Job not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"409":{"description":"Job in invalid state for the given status update","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/jobs/{uuid}/resend":{"put":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Resend transaction of specific job by UUID, effectively executing the re-sending of transaction asynchronously","produces":["application/json"],"tags":["Jobs"],"summary":"Resend Job transaction by UUID","parameters":[{"type":"string","description":"UUID of the job","name":"uuid","in":"path","required":true}],"responses":{"202":{"description":""},"404":{"description":"Job not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/jobs/{uuid}/start":{"put":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Starts a specific job by UUID, effectively executing the transaction asynchronously","produces":["application/json"],"tags":["Jobs"],"summary":"Start a Job by UUID","parameters":[{"type":"string","description":"UUID of the job","name":"uuid","in":"path","required":true}],"responses":{"202":{"description":""},"404":{"description":"Job not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/schedules":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Get all schedules","produces":["application/json"],"tags":["Schedules"],"summary":"Get all schedules","responses":{"200":{"description":"List of schedules found","schema":{"type":"array","items":{"type":"object","properties":{"createdAt":{"description":"Date and time at which the schedule was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"jobs":{"description":"List of jobs on the schedule.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"ownerID":{"description":"ID of the schedule owner.","type":"string","example":"foo"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenant_id"},"uuid":{"description":"UUID of the schedule.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates a new schedule","consumes":["application/json"],"produces":["application/json"],"tags":["Schedules"],"summary":"Creates a new Schedule","parameters":[{"description":"Schedule creation request","name":"request","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"200":{"description":"Created schedule","schema":{"allOf":[{"type":"object","properties":{"createdAt":{"description":"Date and time at which the schedule was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"jobs":{"description":"List of jobs on the schedule.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"ownerID":{"description":"ID of the schedule owner.","type":"string","example":"foo"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenant_id"},"uuid":{"description":"UUID of the schedule.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}},{"type":"object","properties":{"jobs":{"type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}}}}]}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable parameters were sent","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/schedules/{uuid}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Fetch a single schedule by uuid","produces":["application/json"],"tags":["Schedules"],"summary":"Fetch a schedule by uuid","parameters":[{"type":"string","description":"UUID of the schedule","name":"uuid","in":"path","required":true}],"responses":{"200":{"description":"Schedule found","schema":{"type":"object","properties":{"createdAt":{"description":"Date and time at which the schedule was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"jobs":{"description":"List of jobs on the schedule.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"ownerID":{"description":"ID of the schedule owner.","type":"string","example":"foo"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"tenant_id"},"uuid":{"description":"UUID of the schedule.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"404":{"description":"Schedule not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/subscriptions":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Get a list of filtered subscriptions","consumes":["application/json"],"produces":["application/json"],"tags":["Subscriptions"],"summary":"Search subscription by provided filters","parameters":[{"type":"array","items":{"type":"string"},"collectionFormat":"csv","description":"List of subscription addresses","name":"address","in":"query"},{"type":"string","description":"Chain UUID","name":"chain_uuid","in":"query"},{"type":"string","description":"Tenant ID","name":"tenant_id","in":"query"}],"responses":{"200":{"description":"List of subscription found","schema":{"type":"array","items":{"type":"object","required":["contractName"],"properties":{"chainUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"contractAddress":{"type":"string"},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"type":"string","example":"v1.1.0"},"createdAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"eventStreamUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"fromBlock":{"type":"integer","example":123},"ownerID":{"type":"string","example":"foo"},"tenantID":{"type":"string","example":"foo"},"updatedAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"type":"string"}}}}},"400":{"description":"Invalid filter in the request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/subscriptions/{address}":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates a new Subscription Subscription","consumes":["application/json"],"produces":["application/json"],"tags":["Subscriptions"],"summary":"Creates a new Subscription Subscription","parameters":[{"description":"Subscription creation request","name":"request","in":"body","required":true,"schema":{"type":"object","required":["chain","contractName","eventStream"],"properties":{"chain":{"type":"string","example":"mainnet"},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"type":"string","example":"v1.1.0"},"eventStream":{"type":"string","example":"myWeebhookStream"},"fromBlock":{"type":"integer","example":123}}}}],"responses":{"200":{"description":"Subscription object","schema":{"type":"object","required":["contractName"],"properties":{"chainUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"contractAddress":{"type":"string"},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"type":"string","example":"v1.1.0"},"createdAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"eventStreamUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"fromBlock":{"type":"integer","example":123},"ownerID":{"type":"string","example":"foo"},"tenantID":{"type":"string","example":"foo"},"updatedAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"type":"string"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/subscriptions/{uuid}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Fetch a single subscription by uuid","produces":["application/json"],"tags":["Subscriptions"],"summary":"Fetch an subscription by uuid","parameters":[{"type":"string","description":"subscription uuid","name":"address","in":"path","required":true}],"responses":{"200":{"description":"Subscription found","schema":{"type":"object","required":["contractName"],"properties":{"chainUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"contractAddress":{"type":"string"},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"type":"string","example":"v1.1.0"},"createdAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"eventStreamUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"fromBlock":{"type":"integer","example":123},"ownerID":{"type":"string","example":"foo"},"tenantID":{"type":"string","example":"foo"},"updatedAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"type":"string"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Subscription not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"delete":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"produces":["application/json"],"tags":["Subscriptions"],"summary":"Deletes a subscription by uuid","parameters":[{"type":"string","description":"uuid of the subscription","name":"uuid","in":"path","required":true}],"responses":{"204":{"description":""},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Subscription not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}},"patch":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Update a subscription by uuid","consumes":["application/json"],"produces":["application/json"],"tags":["Subscriptions"],"summary":"Update subscription by uuid","parameters":[{"description":"Kafka Subscription update request","name":"request","in":"body","required":true,"schema":{"type":"object","required":["contractName"],"properties":{"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"type":"string","example":"v1.1.0"},"event_stream":{"type":"string","example":"myWeebhookStream"}}}},{"type":"string","description":"subscription uuid","name":"uuid","in":"path","required":true}],"responses":{"200":{"description":"Subscription found","schema":{"type":"object","required":["contractName"],"properties":{"chainUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"contractAddress":{"type":"string"},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"type":"string","example":"v1.1.0"},"createdAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"eventStreamUUID":{"type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"fromBlock":{"type":"integer","example":123},"ownerID":{"type":"string","example":"foo"},"tenantID":{"type":"string","example":"foo"},"updatedAt":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"type":"string"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"401":{"description":"Unauthorized","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"404":{"description":"Account not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/transactions":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Get a list of filtered transaction requests","consumes":["application/json"],"produces":["application/json"],"tags":["Transactions"],"summary":"Search transaction requests by provided filters","parameters":[{"type":"array","items":{"type":"string"},"collectionFormat":"csv","description":"List of idempotency keys","name":"idempotency_keys","in":"query"}],"responses":{"200":{"description":"List of transaction requests found","schema":{"type":"array","items":{"type":"object","properties":{"chain":{"description":"Chain on which the transaction was created.","type":"string","example":"myChain"},"createdAt":{"description":"Date and time at which the transaction was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"idempotencyKey":{"description":"Idempotency key of the transaction request.","type":"string","example":"myIdempotencyKey"},"jobs":{"description":"List of jobs in the transaction.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"params":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"uuid":{"description":"UUID of the transaction.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}}},"400":{"description":"Invalid filter in the request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/transactions/deploy-contract":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates and executes a new contract deployment request\nThe transaction can be private (Tessera, EEA).\nThe transaction can be a One Time Key transaction in 0 gas private networks","consumes":["application/json"],"produces":["application/json"],"tags":["Transactions"],"summary":"Creates and sends a new contract deployment","parameters":[{"description":"Deployment transaction request","name":"request","in":"body","required":true,"schema":{"allOf":[{"type":"object","required":["chain","params"],"properties":{"chain":{"description":"Name of the chain on which to deploy the contract.","type":"string","example":"myChain"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"params":{"type":"object","required":["contractName"],"properties":{"accessList":{"description":"Optional list of addresses and storage keys the transaction plans to access.","type":"array","items":{"type":"object"}},"args":{"description":"Contract arguments.","type":"array","items":{}},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"description":"Optional tag attached to the contract.","type":"string","example":"v1.1.0"},"from":{"description":"Address of the sender.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"gas":{"description":"Gas provided by the sender.","type":"integer","example":300000},"gasPrice":{"description":"If sending a non-[EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the gas price, in Wei, provided by the sender.","type":"string","example":"0x5208"},"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"mandatoryFor":{"description":"When sending a private transaction with [mandatory party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#mandatory-party-protection), a list of the recipients' public keys.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"maxFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum total fee, in Wei, the sender is willing to pay per gas.","type":"string","example":"0x4c4b40"},"maxPriorityFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum fee, in Wei, the sender is willing to pay per gas above the base fee.","type":"string","example":"0x59682f00"},"oneTimeKey":{"description":"Indicates if the transaction is a One Time Key transaction.","type":"boolean","example":true},"privacyFlag":{"description":"Set to 0 for standard privacy (default), 1 for [counter-party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#counter-party-protection), 2 for [mandatory party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#mandatory-party-protection), and 3 for [private state validation](https://consensys.net/docs/goquorum/en/latest/concepts/privacy/privacy-enhancements/#private-state-validation).","type":"integer","example":0},"privacyGroupId":{"description":"When sending a private transaction, the privacy group ID of the recipients. Not used with `PrivateFor`.","type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"privateFor":{"description":"When sending a private transaction, a list of the recipients' public keys. Not used with `PrivacyGroupID`.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"privateFrom":{"description":"When sending a private transaction, the sender's public key.","type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"protocol":{"description":"Currently supports `Tessera` and `EEA`.","type":"string","example":"Tessera"},"transactionType":{"description":"`dynamic_fee` for a post-London fork transaction, `legacy` for a pre-London fork transaction.","type":"string","enum":["legacy","dynamic_fee"],"example":"dynamic_fee"},"value":{"description":"Value transferred, in Wei.","type":"string","example":"0x59682f00"}}}}},{"type":"object","properties":{"params":{"allOf":[{"type":"object","required":["contractName"],"properties":{"accessList":{"description":"Optional list of addresses and storage keys the transaction plans to access.","type":"array","items":{"type":"object"}},"args":{"description":"Contract arguments.","type":"array","items":{}},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"description":"Optional tag attached to the contract.","type":"string","example":"v1.1.0"},"from":{"description":"Address of the sender.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"gas":{"description":"Gas provided by the sender.","type":"integer","example":300000},"gasPrice":{"description":"If sending a non-[EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the gas price, in Wei, provided by the sender.","type":"string","example":"0x5208"},"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"mandatoryFor":{"description":"When sending a private transaction with [mandatory party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#mandatory-party-protection), a list of the recipients' public keys.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"maxFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum total fee, in Wei, the sender is willing to pay per gas.","type":"string","example":"0x4c4b40"},"maxPriorityFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum fee, in Wei, the sender is willing to pay per gas above the base fee.","type":"string","example":"0x59682f00"},"oneTimeKey":{"description":"Indicates if the transaction is a One Time Key transaction.","type":"boolean","example":true},"privacyFlag":{"description":"Set to 0 for standard privacy (default), 1 for [counter-party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#counter-party-protection), 2 for [mandatory party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#mandatory-party-protection), and 3 for [private state validation](https://consensys.net/docs/goquorum/en/latest/concepts/privacy/privacy-enhancements/#private-state-validation).","type":"integer","example":0},"privacyGroupId":{"description":"When sending a private transaction, the privacy group ID of the recipients. Not used with `PrivateFor`.","type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"privateFor":{"description":"When sending a private transaction, a list of the recipients' public keys. Not used with `PrivacyGroupID`.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"privateFrom":{"description":"When sending a private transaction, the sender's public key.","type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"protocol":{"description":"Currently supports `Tessera` and `EEA`.","type":"string","example":"Tessera"},"transactionType":{"description":"`dynamic_fee` for a post-London fork transaction, `legacy` for a pre-London fork transaction.","type":"string","enum":["legacy","dynamic_fee"],"example":"dynamic_fee"},"value":{"description":"Value transferred, in Wei.","type":"string","example":"0x59682f00"}}},{"type":"object","properties":{"gasPricePolicy":{"allOf":[{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},{"type":"object","properties":{"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}}]}}}]}}}]}}],"responses":{"202":{"description":"Created deployment transaction request","schema":{"type":"object","properties":{"chain":{"description":"Chain on which the transaction was created.","type":"string","example":"myChain"},"createdAt":{"description":"Date and time at which the transaction was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"idempotencyKey":{"description":"Idempotency key of the transaction request.","type":"string","example":"myIdempotencyKey"},"jobs":{"description":"List of jobs in the transaction.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"params":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"uuid":{"description":"UUID of the transaction.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"409":{"description":"Already existing transaction","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable parameters were sent","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/transactions/send":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates and executes a new smart contract transaction request\nThe transaction can be private (Tessera, EEA).\nThe transaction can be a One Time Key transaction in 0 gas private networks","consumes":["application/json"],"produces":["application/json"],"tags":["Transactions"],"summary":"Creates and sends a new contract transaction","parameters":[{"description":"Contract transaction request","name":"request","in":"body","required":true,"schema":{"allOf":[{"type":"object","required":["chain","params"],"properties":{"chain":{"description":"Name of the chain on which to send the transaction.","type":"string","example":"myChain"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"params":{"type":"object","required":["contractName","methodSignature","to"],"properties":{"accessList":{"description":"Optional list of addresses and storage keys the transaction plans to access.","type":"array","items":{"type":"object"}},"args":{"description":"Contract arguments.","type":"array","items":{}},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"description":"Optional tag attached to the contract.","type":"string","example":"v1.1.0"},"from":{"description":"Address of the sender.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e097285534"},"gas":{"description":"Gas provided by the sender.","type":"integer","example":50000},"gasPrice":{"description":"If sending a non-[EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the gas price, in Wei, provided by the sender.","type":"string","example":"0xAB208"},"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"mandatoryFor":{"description":"When sending a private transaction with [mandatory party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#mandatory-party-protection), a list of the recipients' public keys.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"maxFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum total fee, in Wei, the sender is willing to pay per gas.","type":"string","example":"0x4c4b40"},"maxPriorityFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum fee, in Wei, the sender is willing to pay per gas above the base fee.","type":"string","example":"0x59682f00"},"methodSignature":{"type":"string","example":"transfer(address,uint256)"},"oneTimeKey":{"description":"Indicates if the transaction is a One Time Key transaction.","type":"boolean","example":true},"privacyFlag":{"description":"Set to 0 for standard privacy (default), 1 for [counter-party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#counter-party-protection), 2 for [mandatory party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#mandatory-party-protection), and 3 for [private state validation](https://consensys.net/docs/goquorum/en/latest/concepts/privacy/privacy-enhancements/#private-state-validation).","type":"integer","example":0},"privacyGroupId":{"description":"When sending a private transaction, the privacy group ID of the recipients. Not used with `PrivateFor`.","type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"privateFor":{"description":"When sending a private transaction, a list of the recipients' public keys. Not used with `PrivacyGroupID`.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"privateFrom":{"description":"When sending a private transaction, the sender's public key.","type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"protocol":{"description":"Currently supports `Tessera` and `EEA`.","type":"string","example":"Tessera"},"to":{"description":"Address of the recipient, mutually exclusive with `from`.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"transactionType":{"description":"`dynamic_fee` for a post-London fork transaction, `legacy` for a pre-London fork transaction.","type":"string","enum":["legacy","dynamic_fee"],"example":"dynamic_fee"},"value":{"description":"Value transferred, in Wei.","type":"string","example":"0x44300E0"}}}}},{"type":"object","properties":{"params":{"allOf":[{"type":"object","required":["contractName","methodSignature","to"],"properties":{"accessList":{"description":"Optional list of addresses and storage keys the transaction plans to access.","type":"array","items":{"type":"object"}},"args":{"description":"Contract arguments.","type":"array","items":{}},"contractName":{"description":"Name of the contract.","type":"string","example":"MyContract"},"contractTag":{"description":"Optional tag attached to the contract.","type":"string","example":"v1.1.0"},"from":{"description":"Address of the sender.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e097285534"},"gas":{"description":"Gas provided by the sender.","type":"integer","example":50000},"gasPrice":{"description":"If sending a non-[EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the gas price, in Wei, provided by the sender.","type":"string","example":"0xAB208"},"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"mandatoryFor":{"description":"When sending a private transaction with [mandatory party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#mandatory-party-protection), a list of the recipients' public keys.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"maxFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum total fee, in Wei, the sender is willing to pay per gas.","type":"string","example":"0x4c4b40"},"maxPriorityFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum fee, in Wei, the sender is willing to pay per gas above the base fee.","type":"string","example":"0x59682f00"},"methodSignature":{"type":"string","example":"transfer(address,uint256)"},"oneTimeKey":{"description":"Indicates if the transaction is a One Time Key transaction.","type":"boolean","example":true},"privacyFlag":{"description":"Set to 0 for standard privacy (default), 1 for [counter-party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#counter-party-protection), 2 for [mandatory party protection](https://consensys.net/docs/goquorum/en/stable/concepts/privacy/privacy-enhancements/#mandatory-party-protection), and 3 for [private state validation](https://consensys.net/docs/goquorum/en/latest/concepts/privacy/privacy-enhancements/#private-state-validation).","type":"integer","example":0},"privacyGroupId":{"description":"When sending a private transaction, the privacy group ID of the recipients. Not used with `PrivateFor`.","type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"privateFor":{"description":"When sending a private transaction, a list of the recipients' public keys. Not used with `PrivacyGroupID`.","type":"array","minItems":1,"uniqueItems":true,"items":{"type":"string"},"example":["[A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=","B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=]"]},"privateFrom":{"description":"When sending a private transaction, the sender's public key.","type":"string","example":"A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo="},"protocol":{"description":"Currently supports `Tessera` and `EEA`.","type":"string","example":"Tessera"},"to":{"description":"Address of the recipient, mutually exclusive with `from`.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"transactionType":{"description":"`dynamic_fee` for a post-London fork transaction, `legacy` for a pre-London fork transaction.","type":"string","enum":["legacy","dynamic_fee"],"example":"dynamic_fee"},"value":{"description":"Value transferred, in Wei.","type":"string","example":"0x44300E0"}}},{"type":"object","properties":{"gasPricePolicy":{"allOf":[{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},{"type":"object","properties":{"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}}]}}}]}}}]}}],"responses":{"202":{"description":"Created contract transaction request","schema":{"type":"object","properties":{"chain":{"description":"Chain on which the transaction was created.","type":"string","example":"myChain"},"createdAt":{"description":"Date and time at which the transaction was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"idempotencyKey":{"description":"Idempotency key of the transaction request.","type":"string","example":"myIdempotencyKey"},"jobs":{"description":"List of jobs in the transaction.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"params":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"uuid":{"description":"UUID of the transaction.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"409":{"description":"Already existing transaction","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable parameters were sent","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/transactions/send-raw":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates and executes a new raw transaction request","consumes":["application/json"],"produces":["application/json"],"tags":["Transactions"],"summary":"Creates and sends a raw transaction","parameters":[{"description":"Raw transaction request","name":"request","in":"body","required":true,"schema":{"allOf":[{"type":"object","required":["chain","params"],"properties":{"chain":{"description":"Name of the chain on which to send the transaction.","type":"string","example":"myChain"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"params":{"type":"object","required":["raw"],"properties":{"raw":{"description":"Transaction raw data.","type":"string","example":"0xfe378324abcde723"},"retryPolicy":{"type":"object","properties":{"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"}}}}}}},{"type":"object","properties":{"params":{"allOf":[{"type":"object","required":["raw"],"properties":{"raw":{"description":"Transaction raw data.","type":"string","example":"0xfe378324abcde723"},"retryPolicy":{"type":"object","properties":{"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"}}}}},{"type":"object","properties":{"retryPolicy":{"type":"object","properties":{"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"}}}}}]}}}]}}],"responses":{"202":{"description":"Created raw transaction request","schema":{"type":"object","properties":{"chain":{"description":"Chain on which the transaction was created.","type":"string","example":"myChain"},"createdAt":{"description":"Date and time at which the transaction was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"idempotencyKey":{"description":"Idempotency key of the transaction request.","type":"string","example":"myIdempotencyKey"},"jobs":{"description":"List of jobs in the transaction.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"params":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"uuid":{"description":"UUID of the transaction.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"409":{"description":"Already existing transaction","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable parameters were sent","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/transactions/transfer":{"post":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Creates and executes a new transfer request","consumes":["application/json"],"produces":["application/json"],"tags":["Transactions"],"summary":"Creates and sends a transfer transaction","parameters":[{"description":"Transfer transaction request","name":"request","in":"body","required":true,"schema":{"allOf":[{"type":"object","required":["chain","params"],"properties":{"chain":{"description":"Name of the chain on which to send the transaction.","type":"string","example":"myChain"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"params":{"type":"object","required":["from","to","value"],"properties":{"accessList":{"description":"Optional list of addresses and storage keys the transaction plans to access.","type":"array","items":{"type":"object"}},"from":{"description":"Address of the sender.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"gas":{"description":"Gas provided by the sender.","type":"integer","example":21000},"gasPrice":{"description":"If sending a non-[EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the gas price, in Wei, provided by the sender.","type":"string","example":"0x5208"},"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"maxFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum total fee, in Wei, the sender is willing to pay per gas.","type":"string","example":"0x4c4b40"},"maxPriorityFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum fee, in Wei, the sender is willing to pay per gas above the base fee.","type":"string","example":"0x59682f00"},"to":{"description":"Address of the recipient, mutually exclusive with `from`.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"transactionType":{"description":"`dynamic_fee` for a post-London fork transaction, `legacy` for a pre-London fork transaction.","type":"string","enum":["legacy","dynamic_fee"],"example":"dynamic_fee"},"value":{"description":"Value transferred, in Wei.","type":"string","example":"0x59682f00"}}}}},{"type":"object","properties":{"params":{"allOf":[{"type":"object","required":["from","to","value"],"properties":{"accessList":{"description":"Optional list of addresses and storage keys the transaction plans to access.","type":"array","items":{"type":"object"}},"from":{"description":"Address of the sender.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"gas":{"description":"Gas provided by the sender.","type":"integer","example":21000},"gasPrice":{"description":"If sending a non-[EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the gas price, in Wei, provided by the sender.","type":"string","example":"0x5208"},"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"maxFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum total fee, in Wei, the sender is willing to pay per gas.","type":"string","example":"0x4c4b40"},"maxPriorityFeePerGas":{"description":"If sending an [EIP1559 transaction](https://besu.hyperledger.org/en/stable/Concepts/Transactions/Transaction-Types/#eip1559-transactions), the maximum fee, in Wei, the sender is willing to pay per gas above the base fee.","type":"string","example":"0x59682f00"},"to":{"description":"Address of the recipient, mutually exclusive with `from`.","type":"string","example":"0x1abae27a0cbfb02945720425d3b80c7e09728534"},"transactionType":{"description":"`dynamic_fee` for a post-London fork transaction, `legacy` for a pre-London fork transaction.","type":"string","enum":["legacy","dynamic_fee"],"example":"dynamic_fee"},"value":{"description":"Value transferred, in Wei.","type":"string","example":"0x59682f00"}}},{"type":"object","properties":{"gasPricePolicy":{"allOf":[{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},{"type":"object","properties":{"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}}]}}}]}}}]}}],"responses":{"202":{"description":"Created transfer transaction request","schema":{"type":"object","properties":{"chain":{"description":"Chain on which the transaction was created.","type":"string","example":"myChain"},"createdAt":{"description":"Date and time at which the transaction was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"idempotencyKey":{"description":"Idempotency key of the transaction request.","type":"string","example":"myIdempotencyKey"},"jobs":{"description":"List of jobs in the transaction.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"params":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"uuid":{"description":"UUID of the transaction.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"400":{"description":"Invalid request","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"409":{"description":"Already existing transaction","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"422":{"description":"Unprocessable parameters were sent","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/transactions/{uuid}":{"get":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Fetch a single transaction request by uuid","produces":["application/json"],"tags":["Transactions"],"summary":"Fetch a transaction request by uuid","parameters":[{"type":"string","description":"UUID of the transaction request","name":"uuid","in":"path","required":true}],"responses":{"200":{"description":"Transaction request found","schema":{"type":"object","properties":{"chain":{"description":"Chain on which the transaction was created.","type":"string","example":"myChain"},"createdAt":{"description":"Date and time at which the transaction was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"idempotencyKey":{"description":"Idempotency key of the transaction request.","type":"string","example":"myIdempotencyKey"},"jobs":{"description":"List of jobs in the transaction.","type":"array","items":{"type":"object","properties":{"annotations":{"type":"object","properties":{"gasPricePolicy":{"type":"object","properties":{"priority":{"description":"Intended transaction velocity, default is `medium`. Transaction gas is adjusted depending on the velocity to optimize the mining time on user request.","type":"string","example":"very-high"},"retryPolicy":{"type":"object","properties":{"increment":{"description":"Gas increment for each retry. For example, set `0.05` for a 5% increment.","type":"number","example":0.05},"interval":{"description":"Interval between different transaction retries.","type":"string","example":"2m"},"limit":{"description":"Maximum gas increment over retries. For example, set `0.5` for a 50% gas increment from source transaction.","type":"number","example":0.5}}}}},"hasBeenRetried":{"type":"boolean","example":false},"oneTimeKey":{"type":"boolean","example":true}}},"chainUUID":{"description":"UUID of the chain on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"createdAt":{"description":"Date and time at which the job was created.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"labels":{"description":"List of custom labels.","type":"object","additionalProperties":{"type":"string"}},"logs":{"description":"List of logs.","type":"array","items":{"type":"object","properties":{"at":{"type":"string","example":"2020-07-09T12:35:42.115395Z"},"message":{"type":"string","example":"Log message"},"status":{"type":"string"}}}},"nextJobUUID":{"description":"UUID of the next job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"ownerID":{"description":"ID of the job owner.","type":"string","example":"foo"},"parentJobUUID":{"description":"UUID of the parent job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"scheduleUUID":{"description":"UUID of the schedule on which the job was created.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"},"status":{"description":"Status of the job.","type":"string","example":"MINED"},"tenantID":{"description":"ID of the tenant executing the API.","type":"string","example":"foo"},"transaction":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"type":{"description":"Type of job.","type":"string","example":"eth://ethereum/transaction"},"updatedAt":{"description":"Date and time at which the job details were updated.","type":"string","example":"2020-07-09T12:35:42.115395Z"},"uuid":{"description":"UUID of the job.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"params":{"type":"object","properties":{"accessList":{"type":"array","items":{"type":"object","properties":{"address":{"type":"string"},"storageKeys":{"type":"array","items":{"type":"string"}}}}},"createdAt":{"type":"string"},"data":{"type":"string"},"enclaveKey":{"type":"string"},"from":{"type":"string"},"gas":{"type":"integer"},"gasPrice":{"type":"string"},"hash":{"type":"string"},"mandatoryFor":{"type":"array","items":{"type":"string"}},"maxFeePerGas":{"type":"string"},"maxPriorityFeePerGas":{"type":"string"},"nonce":{"type":"integer"},"privacyFlag":{"type":"integer"},"privacyGroupId":{"type":"string"},"privateFor":{"type":"array","items":{"type":"string"}},"privateFrom":{"type":"string"},"raw":{"type":"string"},"to":{"type":"string"},"transactionType":{"type":"string"},"updatedAt":{"type":"string"},"value":{"type":"string"}}},"uuid":{"description":"UUID of the transaction.","type":"string","example":"b4374e6f-b28a-4bad-b4fe-bda36eaf849c"}}}},"404":{"description":"Transaction request not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/transactions/{uuid}/call-off":{"put":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Call of transaction by sending empty data transaction with same nonce and additional 10% more gas","produces":["application/json"],"tags":["Transactions"],"summary":"Call of transaction","parameters":[{"type":"string","description":"UUID of the transaction request","name":"uuid","in":"path","required":true}],"responses":{"404":{"description":"Transaction request not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}},"/transactions/{uuid}/speed-up":{"put":{"security":[{"ApiKeyAuth":[]},{"JWTAuth":[]}],"description":"Speed up transaction time by an increase its gas price","produces":["application/json"],"tags":["Transactions"],"summary":"Speed up transaction timeIncrease transaction gas price","parameters":[{"type":"string","description":"UUID of the transaction request","name":"uuid","in":"path","required":true},{"type":"number","description":"gas price increment percentage, default value is 0.05 (5%)","name":"boost","in":"query"}],"responses":{"404":{"description":"Transaction request not found","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}},"500":{"description":"Internal server error","schema":{"type":"object","properties":{"code":{"type":"integer","example":24000},"message":{"type":"string","example":"error message"}}}}}}}},"securityDefinitions":{"ApiKeyAuth":{"type":"apiKey","name":"X-API-Key","in":"header"},"JWTAuth":{"type":"apiKey","name":"Authorization","in":"header"}}}